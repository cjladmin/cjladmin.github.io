<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>壁纸不够用？教你爬空优美图库的动漫壁纸</title>
      <link href="posts/d4c425a8.html"/>
      <url>posts/d4c425a8.html</url>
      
        <content type="html"><![CDATA[<h2 id="获取网站的基本信息"><a href="#获取网站的基本信息" class="headerlink" title="获取网站的基本信息"></a>获取网站的基本信息</h2><ol><li>目标网址：<a href="https://www.umei.cc/katongdongman/dongmanbizhi/index.htm">https://www.umei.cc/katongdongman/dongmanbizhi/index.htm</a></li><li>在进入网站后，右键网站任意位置点击<code>查看页面源代码</code></li><li>在源码中发现居然可以直接找到图片的链接，点进链接核实确实是页面对应的图片，那接下来就省事多了</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/4fc2710e87a24726a702e8da7be71e5f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVG9ycmVzLeWco-WQmw==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><ol start="4"><li>用<code>requests</code>对网站发送请求，代码如下：</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'https://www.umei.cc/katongdongman/dongmanbizhi/index.htm'</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>运行代码后得到结果：<code>&lt;Response [200]&gt;</code>返回值为200，说明网站请求成功</li></ol><h2 id="获取页面上所有图片链接"><a href="#获取页面上所有图片链接" class="headerlink" title="获取页面上所有图片链接"></a>获取页面上所有图片链接</h2><ol><li><p>右键页面点<code>检查</code>，通过对图片的定位，发现图片的链接在一个<code>class="TypeList"</code>的<code>div</code>标签内<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/8eaea1dd9c454326b3bcf765c831e0ef.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVG9ycmVzLeWco-WQmw==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>再次回到页面的源码，按<code>ctrl + f</code>组合键对页面源码进行查找，查找的内容为<code>class="TypeList"</code>，通过查找发现页面还恰好只有这一个，所以这里采用<code>bs4</code>来获取页面的元素<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20d5c076925c41a9b321fa8ea503ff5b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVG9ycmVzLeWco-WQmw==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>bs4的具体用法这里不在过多叙述，废话不多说，直接上代码：</p></li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoupurl <span class="token operator">=</span> <span class="token string">'https://www.umei.cc/katongdongman/dongmanbizhi/index.htm'</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>data <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">"TypeList"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token keyword">for</span> image_urls <span class="token keyword">in</span> data<span class="token punctuation">:</span>    img_url <span class="token operator">=</span> image_urls<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>img_url<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>运行代码后即可得到页面上所以图片的链接<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/8478d3cf7bec4c5dbeb40293af172ecf.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVG9ycmVzLeWco-WQmw==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li></ol><h2 id="获取所有页面的图片链接"><a href="#获取所有页面的图片链接" class="headerlink" title="获取所有页面的图片链接"></a>获取所有页面的图片链接</h2><ol><li><p>通过页面点击下一页，我们不难发现页面URL的变化（比如第2页、第3页），可以看到URL中只有<code>index_</code>后的数值发生了变化，而这个数值还正好和页码相对应<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/3066c1221f3d44dfb6c9c9a5923170c5.png" alt="在这里插入图片描述"><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/3ae2f3e33b814fe5af4c36fde158c33f.png" alt="在这里插入图片描述"></p></li><li><p>按照上面获取单页图片链接的代码，可以把页码的URL都存入一个列表中，然后对列表中的每个URL发送请求，为避免过多访问而被封IP，所以这里构造一个URL的请求头，完整代码如下：</p></li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">def</span> <span class="token function">get_images_url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://www.umei.cc/katongdongman/dongmanbizhi/index.htm'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 生成网页链接列表</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">:</span>url_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>f<span class="token string">'https://www.umei.cc/katongdongman/dongmanbizhi/index_{i}.htm'</span><span class="token punctuation">)</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36 Edg/96.0.1054.41'</span>    <span class="token punctuation">}</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>url_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第%d页所有图片链接："</span> <span class="token operator">%</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>        res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">"utf-8"</span>        con <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 图片链接标签定位</span>        data <span class="token operator">=</span> con<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">"TypeList"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取所有图片的链接</span>        <span class="token keyword">for</span> image_urls <span class="token keyword">in</span> data<span class="token punctuation">:</span>            img_url <span class="token operator">=</span> image_urls<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>img_url<span class="token punctuation">)</span>get_images_url<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><p>通过程序执行后得到链接，发现图片链接都是封面的图片，清晰度很低，所以通过进入子页面获取的图片链接和封面链接作对比，发现子页面图片的链接比封面图片的链接只多了<code>small</code>或<code>rn</code>，去掉这些字符即可得到子页面的图片<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/c43395f3eee84c9d9b650fedf2ba8a38.png" alt="在这里插入图片描述"></p></li><li><p>还有就是图片链接是<code>notimg.gif</code>的图片，都没有子页面图片链接（即子页面为空，原图已被删除），所以也要去除这些子页面不存在的图片链接<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/add06334092f4df5bd4983ed74f94155.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVG9ycmVzLeWco-WQmw==,size_16,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li></ol><ol start="5"><li>综合上述需求只需对图片链接加以操作即可完成，此时得到的链接即为有效子页面图片链接，完整代码如下：</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token comment" spellcheck="true"># 获取有效的子页面图片链接</span><span class="token keyword">def</span> <span class="token function">get_images_url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> new_img_url    url_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://www.umei.cc/katongdongman/dongmanbizhi/index.htm'</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 生成网页链接列表</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">:</span>url_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>f<span class="token string">'https://www.umei.cc/katongdongman/dongmanbizhi/index_{i}.htm'</span><span class="token punctuation">)</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36 Edg/96.0.1054.41'</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>url_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第%d页所有图片链接："</span> <span class="token operator">%</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>        res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">"utf-8"</span>        <span class="token comment" spellcheck="true"># 实例化bs4对象</span>        con <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 图片链接标签定位</span>        data <span class="token operator">=</span> con<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">"TypeList"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取所有图片的链接</span>        <span class="token keyword">for</span> image_urls <span class="token keyword">in</span> data<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 获取子页面的图片链接</span>            img_url <span class="token operator">=</span> image_urls<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"small"</span> <span class="token keyword">in</span> img_url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                new_img_url <span class="token operator">=</span> img_url<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"small"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> <span class="token string">"rn"</span> <span class="token keyword">in</span> img_url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                new_img_url <span class="token operator">=</span> img_url<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"rn"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> <span class="token string">"gif"</span> <span class="token keyword">in</span> img_url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                <span class="token keyword">pass</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                new_img_url <span class="token operator">=</span> img_url            <span class="token keyword">print</span><span class="token punctuation">(</span>new_img_url<span class="token punctuation">)</span>get_images_url<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="下载保存图片到本地"><a href="#下载保存图片到本地" class="headerlink" title="下载保存图片到本地"></a>下载保存图片到本地</h2><ol><li>因为上面已获取所有子页面的图片链接，所以这里只需将图片下载保存到本地即可，下载方法：对子页面图片链接发送请求，并以<code>.content</code>二进制接收，然后以二进制写模式打开文件，并以二进制写入文件即可，代码如下：</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 下载保存图片到本地</span><span class="token keyword">def</span> <span class="token function">download_images</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36 Edg/96.0.1054.41'</span>    <span class="token punctuation">}</span>    img_res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>    img_name<span class="token operator">=</span> url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true"># 这里的img_name就是每个图片的名字，可自行修改</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"动漫壁纸/"</span> <span class="token operator">+</span> img_name<span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> w<span class="token punctuation">:</span>        w<span class="token punctuation">.</span>write<span class="token punctuation">(</span>img_res<span class="token punctuation">.</span>content<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"{img_name}图片下载完成"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><p>这里程序无需等到运行自行结束，因为那样需要等待很久，这里截取一部分的运行结果(文件夹内图片的顺序不是下载图片时的顺序)<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/7b50086f7b814dc3a6b0c67afa3b4d68.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVG9ycmVzLeWco-WQmw==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li><li><p>当然，这样一个个下载肯定是不行的，因为完成速度太慢了，接下来介绍用异步协程来保存图片</p></li></ol><h2 id="异步批量下载图片"><a href="#异步批量下载图片" class="headerlink" title="异步批量下载图片"></a>异步批量下载图片</h2><ol><li><p>安装异步爬虫模块：<code>pip install aiohttp</code></p></li><li><p>使用<code>aiohttp</code>的<code>aiohttp.ClientSession()</code>建立访问请求，并给程序添加请求超时时异常返回内容，防止因超时而引起程序报错</p></li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 使用异步&amp;协程批量下载图片</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">aiohttp_download</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    img_name <span class="token operator">=</span> url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> aiohttp<span class="token punctuation">.</span>ClientSession<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> session<span class="token punctuation">:</span>            <span class="token keyword">async</span> <span class="token keyword">with</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">as</span> res<span class="token punctuation">:</span>                <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'动漫壁纸/'</span> <span class="token operator">+</span> img_name<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> w<span class="token punctuation">:</span>                    <span class="token comment" spellcheck="true"># 读取内容是异步的，需要await挂起</span>                    w<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token keyword">await</span> res<span class="token punctuation">.</span>content<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"{img_name}下载完成"</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> re<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"{img_name}请求超时..."</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>构建异步爬虫主体，启用后再次执行程序可发现，原本1页需要几分钟才能下载完成的内容，现在只需10秒就搞定了</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 异步爬虫主体</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    tasks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> link <span class="token keyword">in</span> all_images<span class="token punctuation">:</span>        tasks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>aiohttp_download<span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> aiohttp<span class="token keyword">import</span> asyncio<span class="token keyword">import</span> os<span class="token comment" spellcheck="true"># 获取有效的子页面图片链接</span><span class="token keyword">def</span> <span class="token function">get_images_url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://www.umei.cc/katongdongman/dongmanbizhi/index.htm'</span><span class="token punctuation">]</span>    page <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入要下载图片的页数："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> page <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 生成网页链接列表</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> page<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>url_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>f<span class="token string">'https://www.umei.cc/katongdongman/dongmanbizhi/index_{i}.htm'</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> page <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"输入有误"</span><span class="token punctuation">)</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36 Edg/96.0.1054.41'</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>url_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>        res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">"utf-8"</span>        <span class="token comment" spellcheck="true"># 实例化bs4对象</span>        con <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">"html.parser"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 图片链接标签定位</span>        data <span class="token operator">=</span> con<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">"TypeList"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true"># 获取所有图片的链接</span>        <span class="token keyword">for</span> image_urls <span class="token keyword">in</span> data<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 获取子页面的图片链接</span>            img_url <span class="token operator">=</span> image_urls<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"small"</span> <span class="token keyword">in</span> img_url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                new_img_url <span class="token operator">=</span> img_url<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"small"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>                all_images<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new_img_url<span class="token punctuation">)</span>            <span class="token keyword">elif</span> <span class="token string">"rn"</span> <span class="token keyword">in</span> img_url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                new_img_url <span class="token operator">=</span> img_url<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"rn"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span>                all_images<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new_img_url<span class="token punctuation">)</span>            <span class="token keyword">elif</span> <span class="token string">"gif"</span> <span class="token keyword">in</span> img_url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                <span class="token keyword">pass</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token comment" spellcheck="true"># new_img_url = img_url</span>                all_images<span class="token punctuation">.</span>append<span class="token punctuation">(</span>img_url<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># download_images(new_img_url)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"&lt;第{i+1}页>图片链接获取完毕！"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 下载保存图片到本地，已被异步所代替(可删除)</span><span class="token keyword">def</span> <span class="token function">download_images</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.55 Safari/537.36 Edg/96.0.1054.41'</span>    <span class="token punctuation">}</span>    img_res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    img_name <span class="token operator">=</span> url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"动漫壁纸/"</span> <span class="token operator">+</span> img_name<span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> w<span class="token punctuation">:</span>        w<span class="token punctuation">.</span>write<span class="token punctuation">(</span>img_res<span class="token punctuation">.</span>content<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"{img_name}图片下载完成"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用异步&amp;协程批量下载图片</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">aiohttp_download</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    img_name <span class="token operator">=</span> url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">async</span> <span class="token keyword">with</span> aiohttp<span class="token punctuation">.</span>ClientSession<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> session<span class="token punctuation">:</span>            <span class="token keyword">async</span> <span class="token keyword">with</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">as</span> res<span class="token punctuation">:</span>                <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'动漫壁纸/'</span> <span class="token operator">+</span> img_name<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> w<span class="token punctuation">:</span>                    <span class="token comment" spellcheck="true"># 读取内容是异步的，需要await挂起</span>                    w<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token keyword">await</span> res<span class="token punctuation">.</span>content<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"{img_name}下载完成"</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> re<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token string">"{img_name}请求超时..."</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 异步爬虫主体</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    tasks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> link <span class="token keyword">in</span> all_images<span class="token punctuation">:</span>        tasks<span class="token punctuation">.</span>append<span class="token punctuation">(</span>aiohttp_download<span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 用于存放全部图片的链接</span>all_images <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 在当前目录新建文件夹</span>os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">"动漫壁纸"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 调用生成图片链接函数</span>get_images_url<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 启用异步下载</span>loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>loop<span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"全部下载完成..."</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/d4c425a8.html">https://www.cjlblog.vip/posts/d4c425a8.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> Python篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雷雨Q机器人帮助手册</title>
      <link href="posts/2a750f3b.html"/>
      <url>posts/2a750f3b.html</url>
      
        <content type="html"><![CDATA[<h2 id="雷雨-v1-2-4-2021-11-21"><a href="#雷雨-v1-2-4-2021-11-21" class="headerlink" title="雷雨-v1.2.4(2021-11-21)"></a><code>雷雨-v1.2.4(2021-11-21)</code></h2><h4 id="所有人可调用-增-："><a href="#所有人可调用-增-：" class="headerlink" title="所有人可调用(增)："></a>所有人可调用(增)：</h4><blockquote><p><code>@雷雨</code> <code>联系管理员</code> 或 <code>反馈bug</code> 或 <code>本体现身</code></p><blockquote><p>需要联系管理员时，发送该内容，雷雨将直接给管理员发消息</p></blockquote></blockquote><h4 id="所有人可调用-删-："><a href="#所有人可调用-删-：" class="headerlink" title="所有人可调用(删)："></a>所有人可调用(删)：</h4><blockquote><p><del><code>所有游戏抽卡</code></del></p><blockquote><p><del>该插件调用量过低，暂移除该功能</del></p></blockquote></blockquote><h2 id="雷雨-v1-2-3-2021-11-19"><a href="#雷雨-v1-2-3-2021-11-19" class="headerlink" title="雷雨-v1.2.3(2021-11-19)"></a><code>雷雨-v1.2.3(2021-11-19)</code></h2><h4 id="所有人可调用-增-：-1"><a href="#所有人可调用-增-：-1" class="headerlink" title="所有人可调用(增)："></a>所有人可调用(增)：</h4><blockquote><p>群文件上传提醒</p><blockquote><p>如果有群友上传群文件，会自动发送提醒</p></blockquote></blockquote><blockquote><p><code>青年大学习答案</code></p><blockquote><p>获取最新一期的青年大学习答案和结束时间</p></blockquote></blockquote><blockquote><p><code>舔狗日记</code></p><blockquote><p>随机发送一条舔狗语录</p></blockquote></blockquote><blockquote><p><code>随机一言</code></p><blockquote><p>随机发送一句话（可以是动漫中的台词，也可以是网络上的各种小段子）</p></blockquote></blockquote><blockquote><p><code>@雷雨</code> <code>二次元图片</code></p><blockquote><p>随机发送一张二次元图片</p></blockquote></blockquote><h4 id="所有人可调用-改-："><a href="#所有人可调用-改-：" class="headerlink" title="所有人可调用(改)："></a>所有人可调用(改)：</h4><blockquote><p><code>lol</code> xxx <code>背景故事</code></p><blockquote><p>完善发送的内容，新增英雄图片</p></blockquote></blockquote><h2 id="雷雨-v1-2-2-2021-11-15"><a href="#雷雨-v1-2-2-2021-11-15" class="headerlink" title="雷雨-v1.2.2(2021-11-15)"></a><code>雷雨-v1.2.2(2021-11-15)</code></h2><h4 id="所有人可调用-增-：-2"><a href="#所有人可调用-增-：-2" class="headerlink" title="所有人可调用(增)："></a>所有人可调用(增)：</h4><blockquote><p><code>lol</code> xxx <code>背景故事</code></p><blockquote><p>查看lol英雄背景故事，<code>xxx</code>为英雄的名称</p></blockquote></blockquote><blockquote><p><code>@雷雨</code> <code>查成语</code> xxx</p><blockquote><p>查找成语<code>xxx</code>的成语信息</p></blockquote></blockquote><h4 id="所有人可调用-修-："><a href="#所有人可调用-修-：" class="headerlink" title="所有人可调用(修)："></a>所有人可调用(修)：</h4><blockquote><p><code>查电费功能</code></p><blockquote><p>修复部分房间电费和宿舍不匹配</p></blockquote></blockquote><blockquote><p><code>戳一戳消息</code></p><blockquote><p>新增戳一戳发送随机消息功能</p></blockquote></blockquote><h2 id="雷雨-V1-2-1-2021-11-13"><a href="#雷雨-V1-2-1-2021-11-13" class="headerlink" title="雷雨-V1.2.1(2021-11-13)"></a><code>雷雨-V1.2.1(2021-11-13)</code></h2><h4 id="所有人可调用-增-：-3"><a href="#所有人可调用-增-：-3" class="headerlink" title="所有人可调用(增)："></a>所有人可调用(增)：</h4><blockquote><p><code>查电费</code> 宿舍号(例:15#510)</p><blockquote><p>查询宿舍剩余电量(仅限商大)</p></blockquote></blockquote><blockquote><p><code>@雷雨</code> <code>老黄历</code></p><blockquote><p>获取今日适宜和禁忌事项</p></blockquote></blockquote><blockquote><p><code>@雷雨</code> <code>查药品</code> 药名</p><blockquote><p>获取该药品的相关说明</p></blockquote></blockquote><h4 id="所有人可调用-删-：-1"><a href="#所有人可调用-删-：-1" class="headerlink" title="所有人可调用(删)："></a>所有人可调用(删)：</h4><blockquote><p><del><code>@雷雨</code> <code>it新闻</code></del></p><blockquote><p><del>获取实时新闻</del></p></blockquote></blockquote><h2 id="雷雨-v1-1-2-2021-11-12"><a href="#雷雨-v1-1-2-2021-11-12" class="headerlink" title="雷雨-v1.1.2(2021-11-12)"></a><code>雷雨-v1.1.2(2021-11-12)</code></h2><h4 id="所有人可调用-增-：-4"><a href="#所有人可调用-增-：-4" class="headerlink" title="所有人可调用(增)："></a>所有人可调用(增)：</h4><blockquote><p><code>@雷雨</code> <code>历史的今天</code></p><blockquote><p>获取历史上今日发生的事</p></blockquote></blockquote><blockquote><p><code>@雷雨</code> <code>随机对联</code></p><blockquote><p>获取随机对联</p></blockquote></blockquote><blockquote><p><code>俄罗斯轮盘游戏</code></p><blockquote><p>发送 -&gt; <code>/俄罗斯轮盘帮助</code>获取帮助信息</p><blockquote><p>该文字游戏食用指南：</p></blockquote></blockquote></blockquote><pre class="line-numbers language-txt"><code class="language-txt">获取金币：    发送 -->   /轮盘签到开启游戏：    发送 -->   /装弹[子弹数] [金额] [@xxx]    (@为指定人，不@时则所有人都可接受决斗)接受对决：    发送 -->   /接受对决/接受挑战/拒绝决斗/拒绝挑战开枪对决：    发送 -->   /开枪/咔/嘭/嘣    (轮流开枪，30秒未开枪另一方可使用‘结算’命令结束对决并胜利)结算结果：    发送 -->   /结算    (当某一方30秒未开枪，可使用该命令强行结束对决并胜利)查看战绩：    发送 -->   /我的战绩查询金币：    发送 -->   /我的金币查看排行榜：    发送 -->   /金币排行/胜场排行/败场排行/欧洲人排行/慈善家排行【注：同一时间群内只能有一场对决】<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="雷雨v1-1-1-2021-11-09"><a href="#雷雨v1-1-1-2021-11-09" class="headerlink" title="雷雨v1.1.1(2021-11-09)"></a><code>雷雨v1.1.1(2021-11-09)</code></h2><h4 id="所有人可调用-增-：-5"><a href="#所有人可调用-增-：-5" class="headerlink" title="所有人可调用(增)："></a>所有人可调用(增)：</h4><blockquote><p><del><code>@雷雨</code> <code>it新闻</code></del></p><blockquote><p><del>获取实时新闻</del></p></blockquote></blockquote><blockquote><p><code>抽卡游戏抽卡</code></p><blockquote><p>游戏抽卡食用指南：</p></blockquote></blockquote><pre class="line-numbers language-txt"><code class="language-txt">目前支持的抽卡：    原神、明日方舟、阴阳师、赛马娘、坎公骑冠剑、公主连结、碧蓝航线、命运-冠位指定(FGO)抽卡通用命令：    例如：原神(或其他)N抽 -> N的取值范围(1~100)特别抽卡命令：    1.原神（当武器和角色无UP池时，所有抽卡命令都指向 '常驻池'）        原神N抽 （常驻池）        原神角色N抽 （角色UP池）        原神武器N抽 （武器UP池）    2.赛马娘        赛马娘N抽 （抽马）        赛马娘卡N抽 （抽卡）    3.坎公骑冠剑        坎公骑冠剑N抽 （抽角色）        坎公骑冠剑武器N抽 （抽武器）    4.碧蓝航线        碧蓝轻型N抽 （轻型池）        碧蓝重型N抽 （重型池）        碧蓝特型N抽 （特型池）其他命令：    '重置原神抽卡'(重置保底)    '重载原神卡池'    '重载方舟卡池'    '重载赛马娘卡池'    '重载坎公骑冠剑卡池'更新命令：    '更新明日方舟信息'    '更新原神信息'    '更新赛马娘信息'    '更新赛坎公骑冠剑信息'    '更新pcr信息'    '更新碧蓝航线信息'    '更新fgo信息'    '更新阴阳师信息'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="雷雨-v0-3-1-2021-10-30"><a href="#雷雨-v0-3-1-2021-10-30" class="headerlink" title="雷雨-v0.3.1(2021-10-30)"></a><code>雷雨-v0.3.1(2021-10-30)</code></h2><h4 id="所有人可调用-增-：-6"><a href="#所有人可调用-增-：-6" class="headerlink" title="所有人可调用(增)："></a>所有人可调用(增)：</h4><blockquote><p><code>@雷雨</code> <code>最美诗词</code></p><blockquote><p>随机古诗词</p></blockquote></blockquote><blockquote><p><code>@雷雨</code> <code>翻译</code> 内容</p><blockquote><p>翻译单词/句子(将内容翻译为中文)</p></blockquote></blockquote><blockquote><p><code>@雷雨</code> <code>进入翻译模式</code></p><blockquote><p>翻译模式(支持多语言相互翻译)</p></blockquote></blockquote><h4 id="所有人可调用-改-：-1"><a href="#所有人可调用-改-：-1" class="headerlink" title="所有人可调用(改)："></a>所有人可调用(改)：</h4><blockquote><p><code>@雷雨</code> <code>天气</code></p><blockquote><p>查询城市天气</p></blockquote></blockquote><blockquote><p><code>@雷雨</code> <code>成语接龙</code></p><blockquote><p>成语接龙游戏</p></blockquote></blockquote><blockquote><p><code>@雷雨</code> <code>归属地</code> 手机号前7位</p><blockquote><p>查询手机号的归属地和运营商</p></blockquote></blockquote><h2 id="雷雨-v0-2-1-2021-10-28"><a href="#雷雨-v0-2-1-2021-10-28" class="headerlink" title="雷雨-v0.2.1(2021-10-28)"></a><code>雷雨-v0.2.1(2021-10-28)</code></h2><h4 id="所有人可调用-增-：-7"><a href="#所有人可调用-增-：-7" class="headerlink" title="所有人可调用(增)："></a>所有人可调用(增)：</h4><blockquote><p>入群/退群通知</p></blockquote><blockquote><p>群/私聊互动聊天(调用茉莉API接口)</p></blockquote><blockquote><p><del><code>@雷雨 @cy</code>成语</del></p><blockquote><p><del>成语接龙</del></p></blockquote></blockquote><blockquote><p><code>@雷雨</code> <code>笑话</code></p><blockquote><p>随机发送一个笑话</p></blockquote></blockquote><blockquote><p><code>@雷雨</code> <code>伤感文案</code></p><blockquote><p>随机伤感文案</p></blockquote></blockquote><blockquote><p><del><code>@雷雨</code> <code>@sjh</code>手机号</del></p><blockquote><p><del>查询手机号的归属地</del></p></blockquote></blockquote><blockquote><p><code>@雷雨</code> <code>lol台词</code></p><blockquote><p>随机发送一句lol里英雄的台词</p></blockquote></blockquote><h2 id="雷雨-v0-1-1-2021-10-24"><a href="#雷雨-v0-1-1-2021-10-24" class="headerlink" title="雷雨-v0.1.1(2021-10-24)"></a><code>雷雨-v0.1.1(2021-10-24)</code></h2><h4 id="所有人可调用："><a href="#所有人可调用：" class="headerlink" title="所有人可调用："></a>所有人可调用：</h4><blockquote><p><code>/天气</code> 城市<code>=</code>今日(或2~7日)</p><blockquote><p>查询1-7日内的天气</p></blockquote></blockquote><blockquote><p><code>@雷雨 今日人品</code></p><blockquote><p>查看今日人品(切勿当真)</p></blockquote></blockquote><blockquote><p><code>点歌</code> 歌名</p><blockquote><p>QQ音乐搜歌</p></blockquote></blockquote><blockquote><p><code>网易点歌</code> 歌名</p><blockquote><p>网易云音乐搜歌</p></blockquote></blockquote><blockquote><p><code>戳一戳</code>消息提醒</p></blockquote><blockquote><p>问群主/管理/超级用户设置的问题</p></blockquote><blockquote><p>(自动发送撤回的消息) –过于离谱，暂未启用</p></blockquote><h4 id="群主-管理可调用："><a href="#群主-管理可调用：" class="headerlink" title="群主/管理可调用："></a>群主/管理可调用：</h4><ul><li>群主/管理设置问答方法：</li></ul><pre class="line-numbers language-txt"><code class="language-txt">@雷雨 问...答...@雷雨 模糊问...答...@雷雨 正则问[x,x]...答...@雷雨 全局模糊问...答...@雷雨 问...答/atqq号...    自定义@的人@雷雨 问...答/self...      @设置问题的人@雷雨 问...答/atself...    @提问问题的人@雷雨 问...答/ban...       禁言时间/s(秒)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/2a750f3b.html">https://www.cjlblog.vip/posts/2a750f3b.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="https://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> 实用篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QQ机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python入门教程</title>
      <link href="posts/b8a3dfda.html"/>
      <url>posts/b8a3dfda.html</url>
      
        <content type="html"><![CDATA[<h3 id="第一章：基础语法"><a href="#第一章：基础语法" class="headerlink" title="第一章：基础语法"></a>第一章：基础语法</h3><h4 id="输出相关："><a href="#输出相关：" class="headerlink" title="输出相关："></a>输出相关：</h4><ul><li>基本输出案例<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"HelloWorld"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''HelloWorld'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>转义字符<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 转义字符"/"</span><span class="token comment" spellcheck="true"># 输出前加"r"，输出原始字符串，即去除转义字符</span><span class="token comment" spellcheck="true"># 输出前加"f"，输出填补字符串，和format相似</span>name <span class="token operator">=</span> <span class="token string">'c:\\user'</span>x <span class="token operator">=</span> <span class="token string">'路径c:\\user'</span>y <span class="token operator">=</span> r<span class="token string">"路径c:\user"</span>z <span class="token operator">=</span> f<span class="token string">"路径{name}"</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token string">"\n"</span><span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">"\n"</span><span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''路径c:\user 路径c:\user 路径c:\user'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>占位符<pre class="line-numbers language-python"><code class="language-python">age <span class="token operator">=</span> <span class="token number">17</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我的年龄是：%d岁"</span><span class="token operator">%</span>age<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''我的年龄是：17岁'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>间隔符<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"www"</span><span class="token punctuation">,</span> <span class="token string">"baidu"</span><span class="token punctuation">,</span> <span class="token string">"com"</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">"."</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''www.baidu.com'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>控制符<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''helloworld'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>连接符<pre class="line-numbers language-python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"World"</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello"</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''HelloWorld'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>复制符<pre class="line-numbers language-python"><code class="language-python">count <span class="token operator">=</span> <span class="token string">"num "</span><span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''num num num '''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>进制转换<pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> <span class="token number">100</span><span class="token keyword">print</span><span class="token punctuation">(</span>bin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#转换为二进制</span><span class="token keyword">print</span><span class="token punctuation">(</span>oct<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#转换为八进制</span><span class="token keyword">print</span><span class="token punctuation">(</span>hex<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#转换为16进制</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''0b11001000o1440x64'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>去除/替换指定字符<pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> <span class="token string">"abcd"</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">"ad"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#去除首尾相同字符</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'bc'</span><span class="token punctuation">,</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#去除整体相同字符</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''bca-d'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>切割字符串<pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> <span class="token string">"ab_cd"</span><span class="token comment" spellcheck="true"># rsplit()从右开始切</span><span class="token comment" spellcheck="true"># lsplit()从左开始切</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''abcd'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>format<pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> <span class="token string">"我是{name}，今年{age}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">'cjl'</span><span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''我是cjl，今年18'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="输入相关："><a href="#输入相关：" class="headerlink" title="输入相关："></a>输入相关：</h4><ul><li>基础输入案例<pre class="line-numbers language-python"><code class="language-python">password <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你输入的密码是："</span><span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>type<span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''请输入密码：666你输入的密码是： 666&lt;class 'str'>'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><code>input</code>默认输入后的类型为字符串</li><li>输入后类型强转<pre class="line-numbers language-python"><code class="language-python">password <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你输入的密码是："</span><span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>type<span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''请输入密码：666你输入的密码是： 666&lt;class 'int'>'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="运算符相关："><a href="#运算符相关：" class="headerlink" title="运算符相关："></a>运算符相关：</h4><h5 id="算法运算符"><a href="#算法运算符" class="headerlink" title="算法运算符"></a>算法运算符</h5><ul><li><code>+</code> 加法</li><li><code>-</code> 减法</li><li><code>*</code> 乘法</li><li><code>/</code> 除法</li><li><code>%</code> 取模</li><li><code>**</code> 指数</li><li><code>//</code> 整除</li></ul><h5 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h5><ul><li><code>&lt;</code> 小于</li><li><code>&gt;</code> 大于</li><li><code>&lt;=</code> 小等</li><li><code>&gt;=</code> 大等</li><li><code>==</code> 恒等</li><li><code>!=</code> 不等</li></ul><h5 id="身份运算符"><a href="#身份运算符" class="headerlink" title="身份运算符"></a>身份运算符</h5><ul><li><code>is</code> 判断两个变量引用对象是否相同</li><li><code>is not</code> 判断两个变量引用对象是否不同<ul><li>用来检测两个变量是否是同一个变量</li></ul></li></ul><h5 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h5><ul><li><code>in</code> 包含</li><li><code>not in</code> 不包含<ul><li>用来检测某成员是否是另一个变量的成员</li></ul></li></ul><h5 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h5><ul><li><code>not</code> 逻辑非，都为假时运行</li><li><code>or</code> 逻辑或，一个为真时就运行</li><li><code>and</code> 逻辑与，都为真才运行<ul><li>and看做乘法，or看做加法</li><li>Ture看做1，False看做0</li></ul></li></ul><h5 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h5><ul><li><code>+=</code>：<code>x += 1</code> ==  <code>x + 1=</code></li><li><code>-=</code>：<code>x -= 1</code> ==  <code>x - 1=</code></li><li><code>*=</code>：<code>x *= 1</code> ==  <code>x * 1=</code></li><li><code>/=</code>：<code>x /= 1</code> ==  <code>x / 1=</code></li><li><code>%=</code>：<code>x %= 1</code> ==  <code>x % 1=</code></li><li><code>//=</code>：<code>x //= 1</code> ==  <code>x // 1=</code></li><li><code>**=</code>：<code>x **= 1</code> ==  <code>x ** 1=</code></li></ul><h5 id="运算符规则"><a href="#运算符规则" class="headerlink" title="运算符规则"></a>运算符规则</h5><ul><li>数值运算可能改变结果的数据类型，类型的改变与运算符有关，有如下基本规则:<ul><li><code>整数</code>和<code>浮点数</code>混合运算，输出结果是<code>浮点数</code></li><li><code>整数</code>之间运算，产生结果类型与操作符相关，<code>除法</code>运算的结果是<code>浮点数</code></li><li><code>整数</code>或<code>浮点数</code>与<code>复数</code>运算，输出结果是<code>复数</code></li></ul></li></ul><h3 id="第二章：判断和循环"><a href="#第二章：判断和循环" class="headerlink" title="第二章：判断和循环"></a>第二章：判断和循环</h3><h4 id="if条件判断："><a href="#if条件判断：" class="headerlink" title="if条件判断："></a>if条件判断：</h4><ul><li><p>if基本格式</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">if</span> 条件<span class="token number">1</span><span class="token punctuation">:</span> 内容<span class="token keyword">elif</span> 条件<span class="token number">2</span><span class="token punctuation">:</span> 内容<span class="token keyword">else</span><span class="token punctuation">:</span> 内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>嵌套if格式</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">if</span> 条件<span class="token number">1</span><span class="token punctuation">:</span> <span class="token keyword">if</span> 条件<span class="token number">2</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> 条件<span class="token number">3</span><span class="token punctuation">:</span>         内容     <span class="token keyword">else</span><span class="token punctuation">:</span>         内容 <span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">else</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>一行式双分支(又叫三元表达式)</p><pre class="line-numbers language-python"><code class="language-python">age <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"输入年龄："</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"未成年"</span> <span class="token keyword">if</span> age<span class="token operator">&lt;</span><span class="token number">18</span> <span class="token keyword">else</span> <span class="token string">"成年了"</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''#执行结果：输入年龄：18成年了'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>if判断案例-石头剪刀布</p></li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"{0}石头剪刀布游戏{1}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span><span class="token string">"*"</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[0代表：石头]"</span><span class="token punctuation">,</span> <span class="token string">"[1代表：剪刀]"</span><span class="token punctuation">,</span> <span class="token string">"[2代表：布]"</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>game <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"石头"</span><span class="token punctuation">,</span> <span class="token string">"剪刀"</span><span class="token punctuation">,</span> <span class="token string">"布"</span><span class="token punctuation">]</span>num <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入石头、剪刀、布(0、1、2)："</span><span class="token punctuation">)</span>robot <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">if</span> num<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> int<span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">and</span> int<span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">:</span>    num <span class="token operator">=</span> int<span class="token punctuation">(</span>num<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你出的是'%s'，"</span><span class="token operator">%</span>game<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">and</span> robot <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">or</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">and</span> robot <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">or</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">and</span> robot <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"而电脑出的是'%s' — 你赢了！"</span><span class="token operator">%</span>game<span class="token punctuation">[</span>robot<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> num <span class="token operator">==</span> robot<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"而电脑出的也是'%s' — 平局！"</span><span class="token operator">%</span>game<span class="token punctuation">[</span>robot<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"而电脑出的是'%s' — 你输了！"</span><span class="token operator">%</span>game<span class="token punctuation">[</span>robot<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&lt;输入有误！>"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''**********石头剪刀布游戏**********[0代表：石头][1代表：剪刀][2代表：布]请输入石头、剪刀、布(0、1、2)：2你出的是'布'，而电脑出的也是'布' — 平局！'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="for循环："><a href="#for循环：" class="headerlink" title="for循环："></a>for循环：</h4><ul><li><p>for基本格式</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">for</span> 表达式<span class="token number">1</span> <span class="token keyword">in</span> 表达式<span class="token number">2</span><span class="token punctuation">:</span> 内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>嵌套for格式</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">for</span> 表达式<span class="token number">1</span> <span class="token keyword">in</span> 表达式<span class="token number">2</span><span class="token punctuation">:</span> <span class="token keyword">for</span> 表达式<span class="token number">1</span> <span class="token keyword">in</span> 表达式<span class="token number">2</span><span class="token punctuation">:</span>     内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>for循环案例-九九乘法表</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"%d*%d=%d"</span><span class="token operator">%</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> i<span class="token operator">*</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">"\t"</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''略······'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>一行式九九乘法表</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'%d*%d=%-2d'</span><span class="token operator">%</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span>x<span class="token punctuation">,</span>x<span class="token operator">*</span>y<span class="token punctuation">)</span> <span class="token keyword">for</span> y <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="while循环："><a href="#while循环：" class="headerlink" title="while循环："></a>while循环：</h4><ul><li>while基本格式<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">while</span> 条件<span class="token punctuation">:</span> 内容 表达式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>while实例：<pre class="line-numbers language-python"><code class="language-python">i <span class="token operator">=</span> <span class="token number">1</span>sum <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> i<span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">:</span> sum <span class="token operator">=</span> sum <span class="token operator">+</span> i i <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''5050'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>while-else格式<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">while</span> 条件<span class="token punctuation">:</span> 内容 表达式<span class="token keyword">else</span><span class="token punctuation">:</span> 内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>while-else实例：<pre class="line-numbers language-python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> num <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"num小于3"</span><span class="token punctuation">)</span> num <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">else</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"num等于或大于3"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''num小于3num小于3num小于3num等于或大于3'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="循环扩展："><a href="#循环扩展：" class="headerlink" title="循环扩展："></a>循环扩展：</h4><ul><li>break - 结束整个循环体</li><li>continue - 结束本次循环</li></ul><h3 id="第三章：数据类型"><a href="#第三章：数据类型" class="headerlink" title="第三章：数据类型"></a>第三章：数据类型</h3><h4 id="字符串相关："><a href="#字符串相关：" class="headerlink" title="字符串相关："></a>字符串相关：</h4><ul><li>切片<pre class="line-numbers language-python"><code class="language-python">str <span class="token operator">=</span> <span class="token string">"abcde12345"</span><span class="token keyword">print</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#str[起始:结尾:步长]</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''abcde12345aabcdeace'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="list-列表-："><a href="#list-列表-：" class="headerlink" title="list(列表)："></a>list(列表)：</h4><ul><li><p>list基本格式</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 列表名 = [" "," "," "]</span>nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>遍历列表</p><pre class="line-numbers language-python"><code class="language-python">names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"李华"</span><span class="token punctuation">,</span> <span class="token string">"小明"</span><span class="token punctuation">,</span> <span class="token string">"马瑞"</span><span class="token punctuation">]</span><span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''李华小明马瑞'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增</p><pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#******append******</span>a<span class="token punctuation">.</span>append<span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#将列表b内的每个元素，看做一个整体追加在列表a的最后面</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#******extend******</span>a<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#将列表b内的每个元素，拆分开逐一追加在列表a的最后面</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#******insert******</span>a<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#将元素5插入到列表a元素下标为1的位置</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''[1, 2, [3, 4]][1, 2, [3, 4], 3, 4][1, 5, 2, [3, 4], 3, 4]'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删</p><pre class="line-numbers language-python"><code class="language-python">nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#******del******</span><span class="token keyword">del</span> nums<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#删除列表nums下标为2的元素</span><span class="token keyword">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#******pop******</span>nums<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#删除列表nums最后一个元素</span><span class="token keyword">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#******remove******</span>nums<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"b"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#删除指定内容的元素</span><span class="token keyword">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''['a', 'b', 1, 2, 3]['a', 'b', 1, 2]['a', 1, 2]'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>改</p><pre class="line-numbers language-python"><code class="language-python">names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"小三"</span><span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''['张三', '李四']['小三', '李四']'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>查</p><pre class="line-numbers language-python"><code class="language-python">names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">]</span>name <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入要查的元素："</span><span class="token punctuation">)</span><span class="token keyword">if</span> name <span class="token keyword">in</span> names<span class="token punctuation">:</span><span class="token comment" spellcheck="true">#index查询的元素有多个时，则输出第一个元素的下标</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"该元素存在，该元素的下标为：%d"</span><span class="token operator">%</span>names<span class="token punctuation">.</span>index<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"该元素不存在"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#count查询该元素在列表中出现的次数</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"该列表存在 %d 个%s"</span><span class="token operator">%</span><span class="token punctuation">(</span>names<span class="token punctuation">.</span>count<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span>names<span class="token punctuation">[</span>names<span class="token punctuation">.</span>index<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''请输入要查的元素：张三该元素存在，该元素的下标为：0该列表存在 2 个张三'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>列表生成式：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 一般写法：</span>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a_666'</span><span class="token punctuation">,</span><span class="token string">'b_666'</span><span class="token punctuation">,</span><span class="token string">'c_666'</span><span class="token punctuation">,</span><span class="token string">"d"</span><span class="token punctuation">]</span>new_l1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> l<span class="token punctuation">:</span> <span class="token keyword">if</span> i<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'666'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     new_l1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>new_l1<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 生成式写法：</span>new_l2 <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> l <span class="token keyword">if</span> i<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'666'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>type<span class="token punctuation">(</span>new_l2<span class="token punctuation">)</span><span class="token punctuation">,</span> new_l2<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''['a_666', 'b_666', 'c_666']&lt;class 'list'> ['a_666', 'b_666', 'c_666']'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>列表排序：</p><ul><li>内置排序函数：</li><li><pre class="line-numbers language-python"><code class="language-python">nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#******reverse******</span>nums<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#逆序</span><span class="token keyword">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#******sort******</span>nums<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#升序</span><span class="token keyword">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>nums<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#降序</span><span class="token keyword">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''[1, 2, 3, 6, 5, 4][4, 5, 6, 3, 2, 1][1, 2, 3, 4, 5, 6][6, 5, 4, 3, 2, 1]'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>冒泡排序：</li><li><pre class="line-numbers language-python"><code class="language-python"> <span class="token keyword">def</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span>alist<span class="token punctuation">)</span><span class="token punctuation">:</span>     n <span class="token operator">=</span> len<span class="token punctuation">(</span>alist<span class="token punctuation">)</span>     <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token operator">-</span>i<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>             <span class="token keyword">if</span> alist<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> alist<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span>                 alist<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> alist<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> alist<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> alist<span class="token punctuation">[</span>j<span class="token punctuation">]</span> alist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"排序前的数组:"</span><span class="token punctuation">,</span> alist<span class="token punctuation">)</span> bubbleSort<span class="token punctuation">(</span>alist<span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"排序后的数组:"</span><span class="token punctuation">,</span> alist<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 执行结果：</span> <span class="token triple-quoted-string string">''' 排序前的数组: [64, 34, 25, 12, 22, 11, 90] 排序后的数组: [11, 12, 22, 25, 34, 64, 90] '''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>插入排序：</li><li><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">insertSort</span><span class="token punctuation">(</span>alist<span class="token punctuation">)</span><span class="token punctuation">:</span>    n <span class="token operator">=</span> len<span class="token punctuation">(</span>alist<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">while</span> i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> alist<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> alist<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                alist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> alist<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span> <span class="token operator">=</span> alist<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> alist<span class="token punctuation">[</span>i<span class="token punctuation">]</span>                i <span class="token operator">-=</span><span class="token number">1</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>alist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"排序前的数组:"</span><span class="token punctuation">,</span> alist<span class="token punctuation">)</span>insertSort<span class="token punctuation">(</span>alist<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"排序后的数组:"</span><span class="token punctuation">,</span> alist<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''排序前的数组: [64, 34, 25, 12, 22, 11, 90]排序后的数组: [11, 12, 22, 25, 34, 64, 90]'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>枚举</p><pre class="line-numbers language-python"><code class="language-python">nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"d"</span><span class="token punctuation">]</span><span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''0 a1 b2 c3 d'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>嵌套列表(二位数组)基本格式</p></li></ul><pre class="line-numbers language-python"><code class="language-python">列表名 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>列表名<span class="token punctuation">[</span>外列表下标<span class="token punctuation">]</span><span class="token punctuation">[</span>内列表下表<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>list列表实例</li></ul><pre class="line-numbers language-python"><code class="language-python">products <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"redmi k30"</span><span class="token punctuation">,</span><span class="token number">1499</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\            <span class="token punctuation">[</span><span class="token string">"redmi k30 pro"</span><span class="token punctuation">,</span><span class="token number">2699</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\            <span class="token punctuation">[</span><span class="token string">"redmi k30 pro变焦版"</span><span class="token punctuation">,</span><span class="token number">2999</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\            <span class="token punctuation">[</span><span class="token string">"redmi k30至尊纪念版"</span><span class="token punctuation">,</span><span class="token number">1999</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\            <span class="token punctuation">[</span><span class="token string">"redmi k30S至尊纪念版"</span><span class="token punctuation">,</span><span class="token number">2599</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\            <span class="token punctuation">[</span><span class="token string">"手机壳"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\            <span class="token punctuation">[</span><span class="token string">"钢化膜"</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\            <span class="token punctuation">[</span><span class="token string">"OTG"</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n------商品列表------"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#遍历商品列表和价格</span><span class="token keyword">for</span> x<span class="token punctuation">,</span>phones <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>products<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"%-20s"</span><span class="token operator">%</span>phones<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"%d元"</span><span class="token operator">%</span>phones<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n------选购环节------"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#用户自行选购</span>shopping_cart <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>num <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入需要添加进购物车商品的编号："</span><span class="token punctuation">)</span><span class="token keyword">while</span> num <span class="token operator">!=</span> <span class="token string">"exit"</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> num<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> int<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span> <span class="token operator">and</span> int<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">&lt;=</span>len<span class="token punctuation">(</span>products<span class="token punctuation">)</span><span class="token punctuation">:</span>        shopping_cart<span class="token punctuation">.</span>append<span class="token punctuation">(</span>products<span class="token punctuation">[</span>int<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"请问还需添加其他商品到购物车吗？"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"若需添加请输入对应编号，结账请输入：exit"</span><span class="token punctuation">)</span>        num <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入需要添加进购物车商品的编号："</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        num <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"该商品不存在，请重新输入："</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n------结账环节------"</span><span class="token punctuation">)</span>    money <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">if</span> len<span class="token punctuation">(</span>shopping_cart<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"以下是您购物车内的商品："</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> shopping <span class="token keyword">in</span> shopping_cart<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>shopping<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"：%d元"</span><span class="token operator">%</span>shopping<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            money <span class="token operator">=</span> money <span class="token operator">+</span> shopping<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"您本次共需支付：%d元"</span><span class="token operator">%</span>money<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"购物车空空如也。"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"******感谢您的光临，下次再见~******"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token string">''</span>'<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>商品列表<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token number">1</span> redmi k30            <span class="token number">1499</span>元<span class="token number">2</span> redmi k30 pro        <span class="token number">2699</span>元<span class="token number">3</span> redmi k30 pro变焦版     <span class="token number">2999</span>元<span class="token number">4</span> redmi k30至尊纪念版       <span class="token number">1999</span>元<span class="token number">5</span> redmi k30S至尊纪念版      <span class="token number">2599</span>元<span class="token number">6</span> 手机壳                  <span class="token number">20</span>元<span class="token number">7</span> 钢化膜                  <span class="token number">10</span>元<span class="token number">8</span> OTG                  <span class="token number">8</span>元<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>选购环节<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>请输入需要添加进购物车商品的编号：<span class="token number">5</span>请问还需添加其他商品到购物车吗？若需添加请输入对应编号，结账请输入：exit请输入需要添加进购物车商品的编号：<span class="token number">7</span>请问还需添加其他商品到购物车吗？若需添加请输入对应编号，结账请输入：exit请输入需要添加进购物车商品的编号：exit<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>结账环节<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>以下是您购物车内的商品：redmi k30S至尊纪念版 ：<span class="token number">2599</span>元钢化膜 ：<span class="token number">10</span>元您本次共需支付：<span class="token number">2609</span>元<span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span>感谢您的光临，下次再见<span class="token operator">~</span><span class="token operator">**</span><span class="token operator">**</span><span class="token operator">**</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="tuple-元组-："><a href="#tuple-元组-：" class="headerlink" title="tuple(元组)："></a>tuple(元组)：</h4><ul><li>tuple基本格式<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#元组名 = (" "," "," ")</span>tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#单个元素时结尾加逗号</span>tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>遍历元组<ul><li>和list列表操作相同</li></ul></li><li>增删改查<ul><li>增：只能通过连接2个不同的元祖生成一个新元组</li><li>删：<code>del 元组名</code>删除整个变量</li><li>改：元组元素不支持修改</li><li>查：和list列表操作相同</li></ul></li></ul><h4 id="dict-字典-："><a href="#dict-字典-：" class="headerlink" title="dict(字典)："></a>dict(字典)：</h4><ul><li><p>dict基本格式</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#字典名 = {"":"", "":""}</span>peoples <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#创建空字典</span>person <span class="token operator">=</span> dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>遍历字典</p><pre class="line-numbers language-python"><code class="language-python">peoples <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">}</span><span class="token keyword">for</span> key<span class="token punctuation">,</span>value <span class="token keyword">in</span> peoples<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''张三 18李四 15'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>增</p><pre class="line-numbers language-python"><code class="language-python">peoples <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">}</span>age <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入年龄："</span><span class="token punctuation">)</span>peoples<span class="token punctuation">[</span><span class="token string">"王五"</span><span class="token punctuation">]</span> <span class="token operator">=</span> age<span class="token keyword">print</span><span class="token punctuation">(</span>peoples<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''请输入年龄：17{'张三': 18, '李四': 15, '王五': '17'}'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删</p><pre class="line-numbers language-python"><code class="language-python">peoples <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">"王五"</span><span class="token punctuation">:</span><span class="token number">17</span><span class="token punctuation">}</span><span class="token keyword">del</span> peoples<span class="token punctuation">[</span><span class="token string">"张三"</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#删除指定的键值对</span>peoples<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#和del作用相同</span><span class="token keyword">print</span><span class="token punctuation">(</span>peoples<span class="token punctuation">)</span>peoples<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#清空字典内的内容</span><span class="token keyword">print</span><span class="token punctuation">(</span>peoples<span class="token punctuation">)</span><span class="token keyword">del</span> peoples <span class="token comment" spellcheck="true">#删除整个字典，删除后不可访问</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''{'王五': 17}{}'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>改</p><pre class="line-numbers language-python"><code class="language-python">peoples <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">}</span>peoples<span class="token punctuation">[</span><span class="token string">"张三"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">17</span><span class="token keyword">print</span><span class="token punctuation">(</span>peoples<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''{'张三': 17, '李四': 15}'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>查</p><pre class="line-numbers language-python"><code class="language-python">peoples <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"张三"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#******keys******</span><span class="token keyword">print</span><span class="token punctuation">(</span>peoples<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#得到所有键</span><span class="token comment" spellcheck="true">#******values******</span><span class="token keyword">print</span><span class="token punctuation">(</span>peoples<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#得到所有值</span><span class="token comment" spellcheck="true">#******items******</span><span class="token keyword">print</span><span class="token punctuation">(</span>peoples<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#得到所有键值对</span><span class="token comment" spellcheck="true">#******get******</span><span class="token keyword">print</span><span class="token punctuation">(</span>peoples<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"小三"</span><span class="token punctuation">,</span><span class="token string">"该键不存在"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#查找指定键对应的值</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''dict_keys(['张三', '李四'])dict_values([18, 15])dict_items([('张三', 18), ('李四', 15)])该键不存在'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>其他操作</p><ul><li>合并两个字典：<code>dict1.update(dict2)</code></li><li>把两个列表转换为字典：<code>dict(zip(list1,list2))</code></li></ul></li><li><p>字典生成式</p><pre class="line-numbers language-python"><code class="language-python">keys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'cjl'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'sex'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span>k<span class="token punctuation">:</span>v <span class="token keyword">for</span> k<span class="token punctuation">,</span>v <span class="token keyword">in</span> keys <span class="token keyword">if</span> k <span class="token operator">!=</span> <span class="token string">'sex'</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>type<span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token punctuation">,</span> dic<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''&lt;class 'dict'> {'name': 'cjl', 'age': 18}'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="set-集合-："><a href="#set-集合-：" class="headerlink" title="set(集合)："></a>set(集合)：</h4><ul><li><p>set基本格式</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#集合名 = {"", "", ""}</span>nums <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>set独有操作</p><pre class="line-numbers language-python"><code class="language-python">s <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1010</span><span class="token punctuation">,</span> <span class="token string">"张三"</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">}</span>t <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1010</span><span class="token punctuation">,</span> <span class="token string">"李四"</span><span class="token punctuation">,</span> <span class="token number">12.3</span><span class="token punctuation">,</span> <span class="token number">1010</span><span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>s <span class="token operator">-</span> t<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 差集</span><span class="token keyword">print</span><span class="token punctuation">(</span>s <span class="token operator">&amp;</span> t<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 交集</span><span class="token keyword">print</span><span class="token punctuation">(</span>s <span class="token operator">^</span> t<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 补集</span><span class="token keyword">print</span><span class="token punctuation">(</span>s <span class="token operator">|</span> t<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 并集</span><span class="token comment" spellcheck="true">#执行结果</span><span class="token triple-quoted-string string">'''{'张三', 9, 78}{1010}{'张三', 9, '李四', 12.3, 78}{1010, '张三', 9, '李四', 12.3, 78}'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>集合生成式</p><pre class="line-numbers language-python"><code class="language-python">keys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">]</span>set_1 <span class="token operator">=</span> <span class="token punctuation">{</span>key <span class="token keyword">for</span> key <span class="token keyword">in</span> keys<span class="token punctuation">}</span><span class="token keyword">print</span><span class="token punctuation">(</span>type<span class="token punctuation">(</span>set_1<span class="token punctuation">)</span><span class="token punctuation">,</span> set_1<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''&lt;class 'set'> {'name', 'age', 'sex'}'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="小结对比："><a href="#小结对比：" class="headerlink" title="小结对比："></a>小结对比：</h4><table><thead><tr><th>NULL</th><th>是否有序</th><th>是否可变类型</th></tr></thead><tbody><tr><td><strong>列表<code>["",""]</code></strong></td><td>有序</td><td>可变类型</td></tr><tr><td>元祖<code>("","")</code></td><td>有序</td><td>不可变类型</td></tr><tr><td><strong>字典<code>{"":""}</code></strong></td><td>无序</td><td>键不可变，值可变</td></tr><tr><td>集合<code>{"",""}</code></td><td>无序</td><td>可变类型(不重复)</td></tr></tbody></table><h3 id="第四章：函数"><a href="#第四章：函数" class="headerlink" title="第四章：函数"></a>第四章：函数</h3><h4 id="函数的定义和调用："><a href="#函数的定义和调用：" class="headerlink" title="函数的定义和调用："></a>函数的定义和调用：</h4><ul><li>定义函数格式<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#def 函数名(形参):</span><span class="token comment" spellcheck="true">#    内容</span><span class="token keyword">def</span> <span class="token function">Num</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token keyword">print</span><span class="token punctuation">(</span>Num<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''15'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数:"></a>函数的参数:</h4><ul><li>必选参数<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span> sum <span class="token operator">=</span> a<span class="token operator">+</span>b <span class="token keyword">print</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span>sum<span class="token punctuation">(</span><span class="token number">333</span><span class="token punctuation">,</span><span class="token number">333</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''666'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>缺省参数<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">333</span><span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token number">111</span><span class="token punctuation">)</span><span class="token punctuation">:</span> sum <span class="token operator">=</span> a<span class="token operator">+</span>b <span class="token keyword">print</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span>sum<span class="token punctuation">(</span>b<span class="token operator">=</span><span class="token number">333</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''666'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>可选参数<blockquote><p>传入的参数列表为<code>元祖</code></p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">sumCount</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span> result <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> args<span class="token punctuation">:</span>     result <span class="token operator">+=</span> item <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>sumCount<span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token number">222</span><span class="token punctuation">,</span><span class="token number">333</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''666'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>关键字参数<blockquote><p>传入的参数列表为<code>字典</code></p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token operator">**</span>dict<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>dict<span class="token punctuation">)</span> <span class="token keyword">pass</span>demo<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'cjl'</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''{'name': 'cjl', 'age': 18}'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>参数相关案例<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">people</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token operator">*</span>phone<span class="token punctuation">,</span> <span class="token operator">**</span>contact<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是{0}，今年{1}岁"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我的手机号是:{0}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>phone<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我的其他联系方式：%s"</span><span class="token operator">%</span>contact<span class="token punctuation">)</span>people<span class="token punctuation">(</span><span class="token string">"cjl"</span><span class="token punctuation">,</span><span class="token string">"19"</span><span class="token punctuation">,</span><span class="token number">12345</span><span class="token punctuation">,</span><span class="token number">54321</span><span class="token punctuation">,</span>qq<span class="token operator">=</span><span class="token string">"2653644677"</span><span class="token punctuation">,</span>wechat<span class="token operator">=</span><span class="token string">"chen2653644677"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''我是cjl，今年19岁我的手机号是:(12345, 54321)我的其他联系方式：{'qq': '2653644677', 'wechat': 'chen2653644677'}'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="参数的引用："><a href="#参数的引用：" class="headerlink" title="参数的引用："></a>参数的引用：</h4><ol><li>在python当中万物皆对象,在函数调用的时候，实参传递的就是对象的引用</li><li>了解了原理之后，就可以更好的去把控在函数内部的处理是否会影响到函数外部的数据变化</li></ol><ul><li>参数传递是通过对象引用来完成的<pre class="line-numbers language-python"><code class="language-python">li<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span>parms<span class="token punctuation">)</span><span class="token punctuation">:</span> li<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>id<span class="token punctuation">(</span>parms<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"内部的{}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>parms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>id<span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token punctuation">)</span>test<span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"外部的{}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''27127875299922712787529992内部的[[1, 2, 3]]外部的[[1, 2, 3]]'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="函数返回值："><a href="#函数返回值：" class="headerlink" title="函数返回值："></a>函数返回值：</h4><ul><li>return<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">fun</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span> sum <span class="token operator">=</span> a <span class="token operator">+</span> b <span class="token keyword">return</span> sum<span class="token punctuation">,</span> sum <span class="token operator">*</span> ars1<span class="token punctuation">,</span>rs2 <span class="token operator">=</span> fun<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'rs1={0}，rs2={1}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>rs1<span class="token punctuation">,</span>rs2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''rs1=20，rs2=200'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="函数的嵌套："><a href="#函数的嵌套：" class="headerlink" title="函数的嵌套："></a>函数的嵌套：</h4><ul><li>从上向下执行<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">fun1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"666"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">fun2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"xxxxxx"</span><span class="token punctuation">)</span> fun1<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"xxxxxx"</span><span class="token punctuation">)</span>fun2<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''xxxxxx666xxxxxx'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="变量作用域："><a href="#变量作用域：" class="headerlink" title="变量作用域："></a>变量作用域：</h4><ul><li>局部变量<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">text1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token number">123</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"修改前：%d"</span><span class="token operator">%</span>a<span class="token punctuation">)</span> a <span class="token operator">=</span> <span class="token number">666</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"修改后：%d"</span><span class="token operator">%</span>a<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">text2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token number">888</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"text2的a值和text1中的a值不冲突--%d"</span><span class="token operator">%</span>a<span class="token punctuation">)</span>text1<span class="token punctuation">(</span><span class="token punctuation">)</span>text2<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''修改前：123修改后：666text2的a值和text1中的a值不冲突--888'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>全局变量<pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">666</span>  <span class="token comment" spellcheck="true">#全局变量</span><span class="token keyword">def</span> <span class="token function">text1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#调用全局变量a</span><span class="token keyword">def</span> <span class="token function">text2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#调用全局变量a</span>text1<span class="token punctuation">(</span><span class="token punctuation">)</span>text2<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''666666'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>局部、全局变量名相同时<pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">100</span>  <span class="token comment" spellcheck="true">#全局变量a</span><span class="token keyword">def</span> <span class="token function">text1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token number">123</span> <span class="token comment" spellcheck="true">#局部变量a和全局变量同名时，局部优先</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"修改前：%d"</span><span class="token operator">%</span>a<span class="token punctuation">)</span> a <span class="token operator">=</span> <span class="token number">666</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"修改后：%d"</span><span class="token operator">%</span>a<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">text2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"a的值为：%d"</span><span class="token operator">%</span>a<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#没有局部变量，默认调用全局变量</span><span class="token keyword">def</span> <span class="token function">text3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">global</span> a <span class="token comment" spellcheck="true">#声明全局变量在函数中的标识符</span> a <span class="token operator">=</span> <span class="token number">200</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"使用global修改全局变量后：%d"</span><span class="token operator">%</span>a<span class="token punctuation">)</span>text1<span class="token punctuation">(</span><span class="token punctuation">)</span>text2<span class="token punctuation">(</span><span class="token punctuation">)</span>text3<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''修改前：123修改后：666a的值为：100使用global修改全局变量后：200'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="匿名函数："><a href="#匿名函数：" class="headerlink" title="匿名函数："></a>匿名函数：</h4><ul><li>既然叫<code>匿名</code>函数，所以该函数定义时就不需要定义函数名</li><li>和一般函数的区别：匿名函数仅用于临时调用一次，调用完就被回收</li><li>常用于调用其他函数时，<code>嵌套在其他函数内使用</code></li><li>lambda表达式<pre class="line-numbers language-python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">6</span>b <span class="token operator">=</span> <span class="token number">10</span><span class="token comment" spellcheck="true"># 方式一(违背了`匿名`原则)：</span>rs1 <span class="token operator">=</span> <span class="token keyword">lambda</span> x<span class="token punctuation">,</span>y<span class="token punctuation">:</span>max<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>rs1<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 方式二(其他函数被lambda被动调用)：</span>rs2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span>y<span class="token punctuation">:</span>max<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>rs2<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 方式三(推荐使用)：</span>dic <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">"ls"</span><span class="token punctuation">:</span> <span class="token number">175</span><span class="token punctuation">,</span> <span class="token string">"zt"</span><span class="token punctuation">:</span> <span class="token number">178</span><span class="token punctuation">,</span> <span class="token string">"zc"</span><span class="token punctuation">:</span> <span class="token number">175</span><span class="token punctuation">,</span> <span class="token string">"cjl"</span><span class="token punctuation">:</span> <span class="token number">184</span><span class="token punctuation">}</span><span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">return</span> dic<span class="token punctuation">[</span>k<span class="token punctuation">]</span>res <span class="token operator">=</span> max<span class="token punctuation">(</span>dic<span class="token punctuation">,</span> key<span class="token operator">=</span>func<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''1010cjl'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="递归函数："><a href="#递归函数：" class="headerlink" title="递归函数："></a>递归函数：</h4><ul><li>递归的本质就是循环，函数自己调用自己，默认递归上限1000次<ul><li>没有尾递归优化</li></ul></li><li>递归的两个阶段<ul><li>回溯：<ul><li>一层一层调用下去</li></ul></li><li>递推：<ul><li>满足某种结束条件，结束递归调用，然后一层一层返回</li></ul></li></ul></li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 理由递归计算阶乘</span><span class="token keyword">def</span> <span class="token function">digui</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> n<span class="token operator">*</span>digui<span class="token punctuation">(</span>n<span class="token number">-1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>digui<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''120'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>递归的应用：<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 取出列表内的值</span>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">fun</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> list1<span class="token punctuation">:</span>     <span class="token keyword">if</span> type<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token keyword">is</span> list<span class="token punctuation">:</span>         fun<span class="token punctuation">(</span>x<span class="token punctuation">)</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span>fun<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''1 2 3 4 5 6 7 8 9 10 '''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>递归二分法搜索<pre class="line-numbers language-python"><code class="language-python">nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">binary_search</span><span class="token punctuation">(</span>find_num<span class="token punctuation">,</span> nums<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token keyword">if</span> len<span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"要找的值不存在"</span><span class="token punctuation">)</span>     <span class="token keyword">return</span> cen_num <span class="token operator">=</span> len<span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span> <span class="token keyword">if</span> find_num <span class="token operator">></span> nums<span class="token punctuation">[</span>cen_num<span class="token punctuation">]</span><span class="token punctuation">:</span>     nums <span class="token operator">=</span> nums<span class="token punctuation">[</span>cen_num<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>     binary_search<span class="token punctuation">(</span>find_num<span class="token punctuation">,</span> nums<span class="token punctuation">)</span> <span class="token keyword">elif</span> find_num <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>cen_num<span class="token punctuation">]</span><span class="token punctuation">:</span>     nums <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token punctuation">:</span>cen_num<span class="token punctuation">]</span>     binary_search<span class="token punctuation">(</span>find_num<span class="token punctuation">,</span> nums<span class="token punctuation">)</span> <span class="token keyword">else</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"找到了"</span><span class="token punctuation">)</span>find_num <span class="token operator">=</span> int<span class="token punctuation">(</span>input<span class="token punctuation">(</span><span class="token string">"请输入要查的数字："</span><span class="token punctuation">)</span><span class="token punctuation">)</span>nums<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>binary_search<span class="token punctuation">(</span>find_num<span class="token punctuation">,</span> nums<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''请输入要查的数字：-2[-56, -26, -5, -2, 1, 2, 15, 54, 56, 62, 66, 99][-56, -26, -5, -2, 1, 2]找到了'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="内置函数："><a href="#内置函数：" class="headerlink" title="内置函数："></a>内置函数：</h4><ul><li><p><code>max(x)</code>：获取最大值</p><ul><li>一般比较用法：<code>max(列表)</code></li><li>比较字典的值，获取<code>最大值</code>对应的键</li><li><pre class="line-numbers language-python"><code class="language-python">dic <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"ls"</span><span class="token punctuation">:</span> <span class="token number">175</span><span class="token punctuation">,</span>    <span class="token string">"zt"</span><span class="token punctuation">:</span> <span class="token number">178</span><span class="token punctuation">,</span>    <span class="token string">"zc"</span><span class="token punctuation">:</span> <span class="token number">175</span><span class="token punctuation">,</span>    <span class="token string">"cjl"</span><span class="token punctuation">:</span> <span class="token number">184</span><span class="token punctuation">}</span>res <span class="token operator">=</span> max<span class="token punctuation">(</span>dic<span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> k<span class="token punctuation">:</span>dic<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"最大值对应的键为："</span> <span class="token operator">+</span> res<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 最大值对应的键为：cjl</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><code>min(x)</code>：获取最小值</p><ul><li>一般比较用法：<code>min(列表)</code></li><li>比较字典的值，获取<code>最小值</code>对应的键，和获取最大值用法相同</li></ul></li><li><p><code>cmp(a,b)</code></p><ul><li>用于判断a和b的大小关系，<code>a&lt;b返回-1</code>，<code>a==b返回0</code>，<code>a&gt;b返回1</code></li></ul></li><li><p><code>eval('')</code></p><ul><li>用来执行一个字符串表达式，并返回表达式的值</li><li><pre class="line-numbers language-python"><code class="language-python">a<span class="token punctuation">,</span>b <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token keyword">print</span><span class="token punctuation">(</span>eval<span class="token punctuation">(</span><span class="token string">'a*b + pow(b,2) - 66'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 30</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><code>all(xxx)</code></p><ul><li>如果参数列表中含有<code>False、0</code>则返回<code>False</code>，否则返回<code>True</code></li><li><pre class="line-numbers language-python"><code class="language-python">li<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>all<span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><code>any(xxx)</code></p><ul><li>如果参数列表都为<code>False、空、0</code>则返回<code>False</code>，否则返回<code>True</code></li><li><pre class="line-numbers language-python"><code class="language-python">li<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>any<span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><code>xxx.sort()</code></p><ul><li>仅对<code>list列表</code>进行排序操作，直接修改原始对象，默认为升序</li><li>参数：<ul><li><code>key=len</code>：按字符串长度排序</li><li><code>key=str.lower</code>：忽略大小写排序</li><li><code>reverse=True</code>：更改为降序</li></ul></li></ul></li><li><p><code>sorted(xxx)</code></p></li><li><p>对<code>所有</code>可迭代的对象进行排序操作，不改变原来的对象，而是返回一个新的列表，参数<code>reverse=True</code>时排序顺序为降序</p></li><li><p><code>zip(xx,xx,...)</code></p><ul><li>把序列中对应的索引位置的元素，储存为一个元祖，可强转为list列表输出</li><li><pre class="line-numbers language-python"><code class="language-python">li<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">]</span>ls<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'我'</span><span class="token punctuation">,</span><span class="token string">'你'</span><span class="token punctuation">,</span><span class="token string">'他'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list<span class="token punctuation">(</span>zip<span class="token punctuation">(</span>li<span class="token punctuation">,</span>ls<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># [('a', '我'), ('b', '你'), ('c', '他')]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><code>enumerate()</code></p><ul><li>返回一个枚举对象，用于将一个可遍历的数据对象(如：列表、元祖、字符串)组合为一个索引序列</li><li><pre class="line-numbers language-python"><code class="language-python">li<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'你'</span><span class="token punctuation">,</span><span class="token string">'真'</span><span class="token punctuation">,</span><span class="token string">'菜'</span><span class="token punctuation">]</span><span class="token keyword">for</span> item <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>li<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># (1, '你') (2, '真') (3, '菜') </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><code>hasattr(x,x)</code></p><ul><li>用于判断对象是否包含对应的属性</li><li><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">hasattrDemo</span><span class="token punctuation">:</span>a <span class="token operator">=</span> <span class="token number">1</span>demo <span class="token operator">=</span> hasattrDemo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>hasattr<span class="token punctuation">(</span>demo<span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>hasattr<span class="token punctuation">(</span>demo<span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># True False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><code>isinstance(a,b)</code></p></li><li><p>用于判断a是否是b类型，类似于type()</p></li><li><p><code>vars()</code></p></li><li><p>用于返回对象的属性和属性值的字典对象</p></li><li><p><code>map()</code></p><ul><li>据提供的函数对指定序列做映射</li><li><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">square</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> x <span class="token operator">**</span> <span class="token number">2</span>res <span class="token operator">=</span> list<span class="token punctuation">(</span>map<span class="token punctuation">(</span>square<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 使用lambda匿名函数</span><span class="token comment" spellcheck="true"># print(list(map(lambda x: x ** 2, [1, 2, 3, 4, 5])))</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''[1, 4, 9, 16, 25]'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>对字典</li><li><pre class="line-numbers language-python"><code class="language-python">L <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"1"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">,</span><span class="token string">"3"</span><span class="token punctuation">,</span><span class="token string">"4"</span><span class="token punctuation">,</span><span class="token string">"5"</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>    dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"0"</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"3"</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"4"</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"5"</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"6"</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">}</span>    <span class="token keyword">return</span> dic<span class="token punctuation">[</span>key<span class="token punctuation">]</span>res <span class="token operator">=</span> list<span class="token punctuation">(</span>map<span class="token punctuation">(</span>func<span class="token punctuation">,</span> L<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''[1, 2, 3, 4, 5]'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><code>reduce()</code></p><ul><li>对参数序列中元素进行累积</li><li><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> functools <span class="token keyword">import</span> reduceL <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> x<span class="token operator">*</span><span class="token number">10</span> <span class="token operator">+</span> yres <span class="token operator">=</span> reduce<span class="token punctuation">(</span>func<span class="token punctuation">,</span>L<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>type<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''&lt;class 'int'> 12345'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><code>iter()</code>:返回一个迭代器</p><ul><li><code>next()</code>:获取迭代器中下一个元素</li><li><pre class="line-numbers language-python"><code class="language-python">lis <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span>ite <span class="token operator">=</span> iter<span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ite<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>next<span class="token punctuation">(</span>ite<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>next<span class="token punctuation">(</span>ite<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>list_iterator object at <span class="token number">0x000002515BCE5370</span><span class="token operator">></span><span class="token number">1</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h3 id="第五章：面向对象-上"><a href="#第五章：面向对象-上" class="headerlink" title="第五章：面向对象(上)"></a>第五章：面向对象(上)</h3><h4 id="类和对象："><a href="#类和对象：" class="headerlink" title="类和对象："></a>类和对象：</h4><ul><li>定义类：<code>class 类名():</code></li></ul><h4 id="五种下划线："><a href="#五种下划线：" class="headerlink" title="五种下划线："></a>五种下划线：</h4><ul><li><code>_</code>：用于临时或无意义变量的名称</li><li><code>_xxx</code>：命名约定，说明该属性或方法仅供内部使用，但解释器不会强制执行</li><li><code>xxx_</code>：避免声明的变量和关键字冲突</li><li><code>__xxx</code>：用于声明属性和方法的私有化，解释权强制执行</li><li><code>__xxx__</code>：Python自带的魔术方法，应避免自己声明该命名方式</li></ul><h4 id="init-构造函数："><a href="#init-构造函数：" class="headerlink" title="__init__构造函数："></a>__init__构造函数：</h4><ul><li>python自带的内置函数具有特殊的函数，使用双下划线包起来的【魔术方法】</li><li>是一个初始化的方法用来定义实例属性和初始化数据的，在创建对象的时候<code>自动调用，不用手动去调用</code></li><li>利用传参的机制可以让我们定义功能更加强大并且方便的类<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span>     self<span class="token punctuation">.</span>name <span class="token operator">=</span> name     self<span class="token punctuation">.</span>age <span class="token operator">=</span> agecjl <span class="token operator">=</span> People<span class="token punctuation">(</span><span class="token string">'陈家霖'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我是{0}今年{1}岁'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>cjl<span class="token punctuation">.</span>name<span class="token punctuation">,</span> cjl<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''我是陈家霖今年18岁'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><code>self</code>指的是类实例对象本身，相当于<code>java的this</code></li></ul><h4 id="魔术方法："><a href="#魔术方法：" class="headerlink" title="魔术方法："></a>魔术方法：</h4><ul><li><p><code>__str__</code>：在将对象转换成字符串，相当于<code>java的toString</code></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span>     self<span class="token punctuation">.</span>name <span class="token operator">=</span> name     self<span class="token punctuation">.</span>age <span class="token operator">=</span> age <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">return</span> <span class="token string">'我是{0}今年{1}岁'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span> self<span class="token punctuation">.</span>age<span class="token punctuation">)</span>cjl <span class="token operator">=</span> People<span class="token punctuation">(</span><span class="token string">'陈家霖'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cjl<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''我是陈家霖今年18岁'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>__new__</code>：优先 <code>__init__</code>初始化方法被调用，第一个参数默认为<code>cls</code></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'执行__init__'</span><span class="token punctuation">)</span>     self<span class="token punctuation">.</span>name <span class="token operator">=</span> name     self<span class="token punctuation">.</span>age <span class="token operator">=</span> age <span class="token keyword">def</span> <span class="token function">__new__</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'执行__new__'</span><span class="token punctuation">)</span>     <span class="token keyword">return</span> super<span class="token punctuation">(</span>Person<span class="token punctuation">,</span> cls<span class="token punctuation">)</span><span class="token punctuation">.</span>__new__<span class="token punctuation">(</span>cls<span class="token punctuation">)</span> <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">return</span> <span class="token string">'&lt;Person: %s(%s)>'</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span> self<span class="token punctuation">.</span>age<span class="token punctuation">)</span>cjl <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">'cjl'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cjl<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''执行__new__执行__init__&lt;Person: cjl(18)>'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>__mro__</code>：用于显示类的继承关系</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">D</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">play</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"'D'类的play"</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">C</span><span class="token punctuation">(</span>D<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">play</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"'C'类的play"</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">(</span>D<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">pass</span><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">(</span>B<span class="token punctuation">,</span>C<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">pass</span>demo <span class="token operator">=</span> A<span class="token punctuation">(</span><span class="token punctuation">)</span>demo<span class="token punctuation">.</span>play<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>A<span class="token punctuation">.</span>__mro__<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">''''D'类的play(&lt;class '__main__.A'>, &lt;class '__main__.B'>, &lt;class '__main__.C'>, &lt;class '__main__.D'>, &lt;class 'object'>)'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>__dict__</code>：用于查看类的所有属性，以字典形式显示</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span>     self<span class="token punctuation">.</span>name <span class="token operator">=</span> name     self<span class="token punctuation">.</span>age <span class="token operator">=</span> agecjl <span class="token operator">=</span> People<span class="token punctuation">(</span><span class="token string">'cjl'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cjl<span class="token punctuation">.</span>__dict__<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''{'name': 'cjl', 'age': 18}'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="析构方法："><a href="#析构方法：" class="headerlink" title="析构方法："></a>析构方法：</h4><ul><li><code>__del__</code>：和<code>__init__</code>一样自动执行，用于释放对象实现资源回收，当一个对象调用后，自动执行清理该对象；也可使用<code>del 对象名</code>手动清理</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是 %s 执行构造方法"</span><span class="token operator">%</span>name<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__del__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"执行析构方法，回收对象"</span><span class="token punctuation">)</span>cjl <span class="token operator">=</span> People<span class="token punctuation">(</span><span class="token string">"cjl"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"--------使用手动清理--------"</span><span class="token punctuation">)</span><span class="token keyword">del</span> cjl  <span class="token comment" spellcheck="true"># 手动清理</span><span class="token keyword">print</span><span class="token punctuation">(</span>cjl<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''我是 cjl 执行构造方法--------使用手动清理--------执行析构方法，回收对象NameError: name 'cjl' is not defined'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="继承："><a href="#继承：" class="headerlink" title="继承："></a>继承：</h4><ul><li><p><code>单继承</code>：一个子类继承一个父类(找亲爹)</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>     self<span class="token punctuation">.</span>name <span class="token operator">=</span> name     self<span class="token punctuation">.</span>age <span class="token operator">=</span> age <span class="token keyword">def</span> <span class="token function">eat</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'吃饭...'</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Men</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">:</span>     super<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span>     self<span class="token punctuation">.</span>height <span class="token operator">=</span> height <span class="token keyword">def</span> <span class="token function">play</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'玩儿...'</span><span class="token punctuation">)</span> <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">return</span> <span class="token string">'我是{}今年{}岁，身高{}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>self<span class="token punctuation">.</span>age<span class="token punctuation">,</span>self<span class="token punctuation">.</span>height<span class="token punctuation">)</span>cjl <span class="token operator">=</span> Men<span class="token punctuation">(</span><span class="token string">'cjl'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">183</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cjl<span class="token punctuation">,</span> <span class="token string">'\n调用父类方法：'</span><span class="token punctuation">)</span>cjl<span class="token punctuation">.</span>eat<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''我是cjl今年18岁，身高183 调用父类方法：吃饭...'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>多继承</code>：一个子类继承多个父类(认干爹)</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">a</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"A：我是C类它祖先类"</span><span class="token punctuation">)</span> <span class="token keyword">pass</span><span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">b</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"B：我是C类它父类"</span><span class="token punctuation">)</span> <span class="token keyword">pass</span><span class="token keyword">class</span> <span class="token class-name">C</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">pass</span>num <span class="token operator">=</span> C<span class="token punctuation">(</span><span class="token punctuation">)</span>num<span class="token punctuation">.</span>a<span class="token punctuation">(</span><span class="token punctuation">)</span>num<span class="token punctuation">.</span>b<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>C<span class="token punctuation">.</span>__mro__<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''A：我是C类它祖先类B：我是C类它父类(&lt;class '__main__.C'>, &lt;class '__main__.B'>, &lt;class '__main__.A'>, &lt;class 'object'>)'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="重写："><a href="#重写：" class="headerlink" title="重写："></a>重写：</h4><ul><li>所谓重写，就是在子类中有一个和父类一模一样的方法，即子类的方法会覆盖父类的方法<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>color<span class="token punctuation">)</span><span class="token punctuation">:</span>     self<span class="token punctuation">.</span>name <span class="token operator">=</span> name     self<span class="token punctuation">.</span>color <span class="token operator">=</span> color <span class="token keyword">def</span> <span class="token function">bark</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"父类：汪汪汪的叫..."</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">HaShiQi</span><span class="token punctuation">(</span>Dog<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">return</span> <span class="token string">'这一只 {0} 的狗叫 {1} '</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>self<span class="token punctuation">.</span>color<span class="token punctuation">,</span>self<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token keyword">def</span> <span class="token function">bark</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment" spellcheck="true"># 重写父类方法</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"子类：嗷嗷嗷的叫..."</span><span class="token punctuation">)</span>hsq <span class="token operator">=</span> HaShiQi<span class="token punctuation">(</span><span class="token string">'哈士奇'</span><span class="token punctuation">,</span><span class="token string">'白色'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>hsq<span class="token punctuation">)</span>hsq<span class="token punctuation">.</span>bark<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''这一只 白色 的狗叫 哈士奇 子类：嗷嗷嗷的叫...'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="多态："><a href="#多态：" class="headerlink" title="多态："></a>多态：</h4><ul><li>多态的实现需要遵循两个条件：<ul><li>继承、多态发生在父类和子类之间</li><li>重写、子类重写父类的方法<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Animals</span><span class="token punctuation">:</span><span class="token keyword">def</span> <span class="token function">say_hello</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是一只小动物..."</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">People</span><span class="token punctuation">:</span><span class="token keyword">def</span> <span class="token function">say_hello</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是人..."</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Pig</span><span class="token punctuation">(</span>Animals<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">def</span> <span class="token function">say_hello</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是可爱的小猪."</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span>Animals<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">def</span> <span class="token function">say_hello</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是呆萌的小猫."</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span>Animals<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">def</span> <span class="token function">say_hello</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是忠诚的小狗."</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>People<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">def</span> <span class="token function">say_hello</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是三年级的小朋友."</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">commonInvoke</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">:</span>obj<span class="token punctuation">.</span>say_hello<span class="token punctuation">(</span><span class="token punctuation">)</span>listObj <span class="token operator">=</span> <span class="token punctuation">[</span>Pig<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Cat<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Dog<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>Student<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> item <span class="token keyword">in</span> listObj<span class="token punctuation">:</span>commonInvoke<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''我是可爱的小猪.我是呆萌的小猫.我是忠诚的小狗.我是三年级的小朋友.'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h4 id="类属性和实例属性："><a href="#类属性和实例属性：" class="headerlink" title="类属性和实例属性："></a>类属性和实例属性：</h4><ul><li>类属性是可以被类对象和实例对象共同访问使用的</li><li>实例属性只能由实例对象所访问</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span>    age <span class="token operator">=</span> <span class="token number">18</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> namecjl <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token string">'cjl'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cjl<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''实例对象： 18 cjl类对象： 18AttributeError: type object 'Person' has no attribute 'name''''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="类方法和静态方法："><a href="#类方法和静态方法：" class="headerlink" title="类方法和静态方法："></a>类方法和静态方法：</h4><ul><li>类方法用<code>@classmethod</code>来修饰，类方法的第一个参数对象是<code>cls</code>，虽然也能通过实例访问，但不推荐这样调用</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span>    people <span class="token operator">=</span> <span class="token string">'cjl'</span>    @classmethod    <span class="token keyword">def</span> <span class="token function">get_name</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> cls<span class="token punctuation">.</span>people    @classmethod    <span class="token keyword">def</span> <span class="token function">change_name</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        cls<span class="token punctuation">.</span>people <span class="token operator">=</span> name<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'类方法调用：%s'</span><span class="token operator">%</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>get_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>p <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'实例对象调用(不推荐)：%s'</span><span class="token operator">%</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>get_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'--------------修改之后----------------'</span><span class="token punctuation">)</span>Person<span class="token punctuation">.</span>change_name<span class="token punctuation">(</span><span class="token string">'lxl'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>get_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''类方法调用：cjl实例对象调用(不推荐)：cjl--------------修改之后----------------lxl'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>静态方法用<code>@staticmethod</code>来修饰，静态方法可以不带参数，使用类和实例均可调用</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">class</span> <span class="token class-name">TimeText</span><span class="token punctuation">:</span>    @staticmethod    <span class="token keyword">def</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%H:%M:%S'</span><span class="token punctuation">,</span>time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'类对象调用：'</span><span class="token punctuation">,</span>TimeText<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>demo <span class="token operator">=</span> TimeText<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'实例对象调用：'</span><span class="token punctuation">,</span>demo<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''类对象调用： 09:44:47实例对象调用： 09:44:47'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第六章：面向对象-下"><a href="#第六章：面向对象-下" class="headerlink" title="第六章：面向对象(下)"></a>第六章：面向对象(下)</h3><h4 id="装饰器："><a href="#装饰器：" class="headerlink" title="装饰器："></a>装饰器：</h4><ul><li><code>装饰器</code>就是在不修改不被装饰器对象源代码与调用方式的前提下为其添加新功能 </li><li>多个装饰器，则<code>由下往上</code>加载，<code>由上到下</code>运行</li><li>无参装饰器模板：<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 无参装饰器基本模板</span><span class="token keyword">def</span> <span class="token function">outter</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment" spellcheck="true"># 1.调用原函数</span>     <span class="token comment" spellcheck="true"># 2.为其添加新功能</span>     res <span class="token operator">=</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span>     <span class="token keyword">return</span> res <span class="token keyword">return</span> wrapper<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>无参装饰器<code>语法糖</code> -&gt; 使用<code>@</code>修饰函数，例：<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># @print -> home=print(home)</span>@<span class="token keyword">print</span><span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">pass</span><span class="token keyword">print</span><span class="token punctuation">(</span>home<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>实例：<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">auth</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>     name <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"name>>>："</span><span class="token punctuation">)</span>     pwd <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"pws>>>："</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">'root'</span> <span class="token operator">and</span> pwd <span class="token operator">==</span> <span class="token string">'123'</span><span class="token punctuation">:</span>         res <span class="token operator">=</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span>         <span class="token keyword">return</span> res     <span class="token keyword">else</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"输入错误"</span><span class="token punctuation">)</span> <span class="token keyword">return</span> wrapper@auth<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"from index"</span><span class="token punctuation">)</span>index<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''name>>>：rootpws>>>：123from index'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>带参装饰器模板：<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> 有参装饰器<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">outter</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>         res <span class="token operator">=</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>         <span class="token keyword">return</span> res     <span class="token keyword">return</span> wrapper <span class="token keyword">return</span> outter@有参装饰器<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>z<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">def</span> 被装饰对象<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>实例：<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 只用套三层，第三层就可以无限接收参数了</span><span class="token keyword">def</span> <span class="token function">auth</span><span class="token punctuation">(</span>db_type<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">deco</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>         name <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'your name>>>: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>         pwd <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'your password>>>: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token keyword">if</span> db_type <span class="token operator">==</span> <span class="token string">'file'</span><span class="token punctuation">:</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'基于文件的验证'</span><span class="token punctuation">)</span>             <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">'egon'</span> <span class="token operator">and</span> pwd <span class="token operator">==</span> <span class="token string">'123'</span><span class="token punctuation">:</span>                 res <span class="token operator">=</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>                   <span class="token keyword">return</span> res             <span class="token keyword">else</span><span class="token punctuation">:</span>                 <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'user or password error'</span><span class="token punctuation">)</span>         <span class="token keyword">elif</span> db_type <span class="token operator">==</span> <span class="token string">'mysql'</span><span class="token punctuation">:</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'基于mysql的验证'</span><span class="token punctuation">)</span>         <span class="token keyword">else</span><span class="token punctuation">:</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'不支持该db_type'</span><span class="token punctuation">)</span>     <span class="token keyword">return</span> wrapper <span class="token keyword">return</span> deco@auth<span class="token punctuation">(</span>db_type<span class="token operator">=</span><span class="token string">'file'</span><span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'index->>%s:%s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>@auth<span class="token punctuation">(</span>db_type<span class="token operator">=</span><span class="token string">'mysql'</span><span class="token punctuation">)</span> <span class="token keyword">def</span> <span class="token function">home</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'home->>%s'</span> <span class="token operator">%</span> name<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># index(1, 2)</span><span class="token comment" spellcheck="true"># home('egon')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="迭代器："><a href="#迭代器：" class="headerlink" title="迭代器："></a>迭代器：</h4><ul><li>迭代指的是重复取值的过程，并且每次重复都是基于上一次的结果而继续的；而迭代器则是迭代取值的工具</li><li>可迭代对象：<ul><li>只要内置有<code>__iter__()</code>方法的都称为可迭代对象<ul><li><code>字符串</code>,<code>列表</code>,<code>元组</code>,<code>字典</code>,<code>集合</code>,<code>文件对象</code></li></ul></li><li>调用可迭代对象下的<code>__iter__()</code>方法，会将其转换成迭代对象</li></ul></li><li>迭代器对象：<ul><li>内置有<code>__next__</code>方法并且内置有<code>__iter__</code>方法的对象<ul><li><code>__next__()</code>: 得到迭代器的下一个值</li><li><code>__iter__()</code>: 得到迭代器本身，</li></ul></li></ul></li><li><code>for循环</code>工作原理：<ul><li><code>for i in xxx</code> -&gt; <code>for i in xxx.__iter__()</code><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># while 遍历字典 key</span>d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'a'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span>d_iterator <span class="token operator">=</span> d<span class="token punctuation">.</span>__iter__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span><span class="token keyword">try</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>d_iterator<span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">except</span> StopIteration<span class="token punctuation">:</span> <span class="token keyword">break</span><span class="token comment" spellcheck="true"># for 遍历字典 key</span><span class="token keyword">for</span> k <span class="token keyword">in</span> d<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li>迭代器优缺点：<ul><li>优点:<ul><li>为序列和非序列类型提供了一种统一的迭代取值方式</li><li>惰性取值；每次只取一个数据，不占内存；迭代器保存的是产生数据的算法，而不是实际的数据</li></ul></li><li>缺点:<ul><li>除非取尽，否则无法获取迭代器的长度</li><li>只能往后依次取值，不能返回头往前取值。就像象棋中的卒，只进不退</li></ul></li></ul></li></ul><h4 id="生成器："><a href="#生成器：" class="headerlink" title="生成器："></a>生成器：</h4><ul><li><p>用关键字<code>yield</code>为函数添加多个返回值，<code>生成器</code>==<code>迭代器</code></p></li><li><p><code>yield</code> -&gt; 可以返回无数个值，并将函数挂起</p></li><li><p><code>return</code> -&gt; 只能返回一次值</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第一次"</span><span class="token punctuation">)</span> <span class="token keyword">yield</span> <span class="token number">1</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第二次"</span><span class="token punctuation">)</span> <span class="token keyword">yield</span> <span class="token number">2</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第三次"</span><span class="token punctuation">)</span>g <span class="token operator">=</span> fun<span class="token punctuation">(</span><span class="token punctuation">)</span>g<span class="token punctuation">.</span>__iter__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''第一次1第二次2'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>自定义迭代器</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">my_range</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>stop<span class="token punctuation">,</span>step<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">while</span> start <span class="token operator">&lt;</span> stop<span class="token punctuation">:</span>     <span class="token keyword">yield</span> start     start<span class="token operator">+=</span>step<span class="token keyword">for</span> i <span class="token keyword">in</span> my_range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''1 3 5 7 9 '''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>yield</code>表达式：</p><ul><li><code>.send()</code>: 为yield传值，也可以传列表，但第一次传值必须是<code>None</code>或<code>next(x)</code></li><li><code>.close()</code>: 关闭后无法传值<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">person</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是%s"</span><span class="token operator">%</span>name<span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span> x <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"%s是%s"</span><span class="token operator">%</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>g <span class="token operator">=</span> person<span class="token punctuation">(</span><span class="token string">"cjl"</span><span class="token punctuation">)</span>g<span class="token punctuation">.</span>send<span class="token punctuation">(</span>None<span class="token punctuation">)</span>g<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">"小菜B"</span><span class="token punctuation">)</span>g<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>g<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">"大神"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 执行结果：</span><span class="token triple-quoted-string string">'''我是cjlcjl是小菜B报错...'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h4 id="私有化属性："><a href="#私有化属性：" class="headerlink" title="私有化属性："></a>私有化属性：</h4><ul><li>在属性前加<code>__</code>，私有化后在外部不能调用，子类不能继承<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     self<span class="token punctuation">.</span>__name <span class="token operator">=</span> <span class="token string">'cjl'</span>     self<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">18</span> <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">return</span> <span class="token string">'我是{0}今年{1}岁了'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__name<span class="token punctuation">,</span> self<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Men</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">printInfo</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment" spellcheck="true"># 无法继承父类的私有化属性</span><span class="token comment" spellcheck="true">#         print(self.name)</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>age<span class="token punctuation">)</span>p <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 无法在外部访问私有化属性</span><span class="token comment" spellcheck="true"># print(p.__name)</span>men <span class="token operator">=</span> Men<span class="token punctuation">(</span><span class="token punctuation">)</span>men<span class="token punctuation">.</span>printInfo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''我是cjl今年18岁了子类继承父类： 18'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>私有化方法：<ul><li>和私有化属性一样，在方法前加<code>__</code>，私有化后在外部不能调用，子类不能继承</li></ul></li></ul><h4 id="property属性函数："><a href="#property属性函数：" class="headerlink" title="property属性函数："></a>property属性函数：</h4><ul><li><p>使用<code>property</code>属性函数，用于调用和修改私有化属性</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     self<span class="token punctuation">.</span>__age <span class="token operator">=</span> <span class="token number">18</span> <span class="token keyword">def</span> <span class="token function">get_age</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">return</span> self<span class="token punctuation">.</span>__age <span class="token keyword">def</span> <span class="token function">set_age</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"年龄有误"</span><span class="token punctuation">)</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>         self<span class="token punctuation">.</span>__age <span class="token operator">=</span> age age <span class="token operator">=</span> property<span class="token punctuation">(</span>get_age<span class="token punctuation">,</span>set_age<span class="token punctuation">)</span>cjl <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token punctuation">)</span>cjl<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">19</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'修改后的年龄：'</span><span class="token punctuation">,</span>cjl<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''修改后的年龄： 19'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用装饰器，用于调用和修改私有属性，用关键字<code>@property</code>和<code>@xxx.setter</code>进行装饰，推荐使用该方法</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span> <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     self<span class="token punctuation">.</span>__age <span class="token operator">=</span> <span class="token number">18</span> @property <span class="token keyword">def</span> <span class="token function">age</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">return</span> self<span class="token punctuation">.</span>__age @age<span class="token punctuation">.</span>setter <span class="token keyword">def</span> <span class="token function">age</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"年龄有误"</span><span class="token punctuation">)</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>         self<span class="token punctuation">.</span>__age <span class="token operator">=</span> agecjl <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token punctuation">)</span>cjl<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">19</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'修改后的年龄：'</span><span class="token punctuation">,</span>cjl<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''修改后的年龄：19'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="单例模式："><a href="#单例模式：" class="headerlink" title="单例模式："></a>单例模式：</h4><ul><li><p>确保一个类只有一个实例的存在(类似win系统的回收站)</p></li><li><p>实现方式一：通过类属性保存初次创建的实例对象，如果存在就返回保存的，没有就创建新的实例对象</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">DataBase</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span> _instance <span class="token operator">=</span> None <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span> <span class="token keyword">def</span> <span class="token function">__new__</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> <span class="token operator">not</span> cls<span class="token punctuation">.</span>_instance<span class="token punctuation">:</span>         cls<span class="token punctuation">.</span>_instance<span class="token operator">=</span>super<span class="token punctuation">(</span>DataBase<span class="token punctuation">,</span>cls<span class="token punctuation">)</span><span class="token punctuation">.</span>__new__<span class="token punctuation">(</span>cls<span class="token punctuation">)</span>     <span class="token keyword">return</span> cls<span class="token punctuation">.</span>_instancedb1 <span class="token operator">=</span> DataBase<span class="token punctuation">(</span><span class="token string">'cjl'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>id<span class="token punctuation">(</span>db1<span class="token punctuation">)</span><span class="token punctuation">)</span>db2 <span class="token operator">=</span> DataBase<span class="token punctuation">(</span><span class="token string">'lxl'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>id<span class="token punctuation">(</span>db2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''cjl 182488840593520lxl 152488840593520'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>实现方式二：只执行一次init方法，通过类变量进行标记控制</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Demo</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span> __instance <span class="token operator">=</span> None __isinit <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> Demo<span class="token punctuation">.</span>__isinit<span class="token punctuation">:</span>         self<span class="token punctuation">.</span>name <span class="token operator">=</span> name         self<span class="token punctuation">.</span>age <span class="token operator">=</span> age         __isinit <span class="token operator">=</span> <span class="token boolean">False</span> <span class="token keyword">def</span> <span class="token function">__new__</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> <span class="token operator">not</span> cls<span class="token punctuation">.</span>__instance<span class="token punctuation">:</span>         cls<span class="token punctuation">.</span>__instance<span class="token operator">=</span>super<span class="token punctuation">(</span>Demo<span class="token punctuation">,</span>cls<span class="token punctuation">)</span><span class="token punctuation">.</span>__new__<span class="token punctuation">(</span>cls<span class="token punctuation">)</span>         <span class="token keyword">return</span> cls<span class="token punctuation">.</span>__instance     <span class="token keyword">else</span><span class="token punctuation">:</span>         <span class="token keyword">return</span> cls<span class="token punctuation">.</span>__instanced1 <span class="token operator">=</span> Demo<span class="token punctuation">(</span><span class="token string">'cjl'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>id<span class="token punctuation">(</span>d1<span class="token punctuation">)</span><span class="token punctuation">,</span> d1<span class="token punctuation">.</span>name<span class="token punctuation">,</span>d1<span class="token punctuation">.</span>age<span class="token punctuation">)</span>d2 <span class="token operator">=</span> Demo<span class="token punctuation">(</span><span class="token string">'lxl'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>id<span class="token punctuation">(</span>d2<span class="token punctuation">)</span><span class="token punctuation">,</span> d2<span class="token punctuation">.</span>name<span class="token punctuation">,</span>d2<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''2488816354400 cjl 182488816354400 lxl 15'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="动态绑定属性方法："><a href="#动态绑定属性方法：" class="headerlink" title="动态绑定属性方法："></a>动态绑定属性方法：</h4><ul><li>动态添加类属性、方法属性</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">People</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name        self<span class="token punctuation">.</span>age <span class="token operator">=</span> age    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'{}今年{}岁了'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>self<span class="token punctuation">.</span>age<span class="token punctuation">)</span>cjl <span class="token operator">=</span> People<span class="token punctuation">(</span><span class="token string">'cjl'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span>People<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token string">'男'</span><span class="token keyword">print</span><span class="token punctuation">(</span>cjl<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"动态添加类属性：性别,"</span><span class="token punctuation">,</span>cjl<span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''cjl今年18岁了动态添加类属性：性别, 男'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>动态绑定类方法</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> types<span class="token keyword">def</span> <span class="token function">textMothend</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'{}今年{}岁了，性别:{}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>self<span class="token punctuation">.</span>age<span class="token punctuation">,</span>self<span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">)</span>@classmethod<span class="token keyword">def</span> <span class="token function">classmethodTest</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"类方法..."</span><span class="token punctuation">)</span>@staticmethod<span class="token keyword">def</span> <span class="token function">staticmethodTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"静态方法..."</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">People</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name        self<span class="token punctuation">.</span>age <span class="token operator">=</span> age    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'{}今年{}岁了'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>self<span class="token punctuation">.</span>age<span class="token punctuation">)</span>cjl <span class="token operator">=</span> People<span class="token punctuation">(</span><span class="token string">'cjl'</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span>People<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token string">'男'</span><span class="token keyword">print</span><span class="token punctuation">(</span>cjl<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"动态添加类属性：性别 -"</span><span class="token punctuation">,</span>cjl<span class="token punctuation">.</span>sex<span class="token punctuation">)</span>cjl<span class="token punctuation">.</span>printInfo <span class="token operator">=</span> types<span class="token punctuation">.</span>MethodType<span class="token punctuation">(</span>textMothend<span class="token punctuation">,</span>cjl<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#动态绑定方法</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"---------------动态绑定后-------------"</span><span class="token punctuation">)</span>cjl<span class="token punctuation">.</span>printInfo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#绑定类方法 </span>People<span class="token punctuation">.</span>TestMethod <span class="token operator">=</span> classmethodTest<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"通过类调用："</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">'\t\t'</span><span class="token punctuation">)</span>People<span class="token punctuation">.</span>TestMethod<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"通过实例对象调用："</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">'\t'</span><span class="token punctuation">)</span>cjl<span class="token punctuation">.</span>TestMethod<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#绑定静态方法 </span>People<span class="token punctuation">.</span>TestMethod <span class="token operator">=</span> staticmethodTest<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"通过类调用："</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">'\t\t'</span><span class="token punctuation">)</span>People<span class="token punctuation">.</span>TestMethod<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"通过实例对象调用："</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">'\t'</span><span class="token punctuation">)</span>cjl<span class="token punctuation">.</span>TestMethod<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''cjl今年18岁了动态添加类属性：性别 - 男---------------动态绑定后-------------cjl今年18岁了，性别:男通过类调用：        类方法...通过实例对象调用：    类方法...通过类调用：        静态方法...通过实例对象调用：    静态方法...'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="slots-："><a href="#slots-：" class="headerlink" title="__slots__："></a>__slots__：</h4><ul><li><code>__slots__ = ()</code>：后跟元组，类型是字符串<ul><li>限制实例添加的属性，括号内为空时，则不允许添加任何属性；</li><li>节省空间，使用后则类属性不会被存放在<code>__dict__</code>内，所以无法使用<code>__dict__</code>访问全部类属性；</li><li>继承时<code>子类不受影响</code>，但如果子类也声明该方法时，则也会继承父类的属性限制<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true"># 添加属性限制</span>__slots__ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">pass</span><span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token string">'{}........{}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>self<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Men</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">:</span>__slots__ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'school'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">pass</span><span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token string">'{}....{}....{}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>self<span class="token punctuation">.</span>school<span class="token punctuation">,</span>self<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token keyword">pass</span>cjl <span class="token operator">=</span> Person<span class="token punctuation">(</span><span class="token punctuation">)</span>cjl<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'cjl'</span>cjl<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">18</span><span class="token comment" spellcheck="true"># cjl.school = 'sqxy' # 未在属性限制范围内，所以报错</span><span class="token keyword">print</span><span class="token punctuation">(</span>cjl<span class="token punctuation">)</span>cjl<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token string">'男'</span>lxl <span class="token operator">=</span> Men<span class="token punctuation">(</span><span class="token punctuation">)</span>lxl<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'lxl'</span>lxl<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">15</span>lxl<span class="token punctuation">.</span>school <span class="token operator">=</span> <span class="token string">'七中'</span><span class="token keyword">print</span><span class="token punctuation">(</span>lxl<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''cjl........18lxl....七中....15'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h3 id="第七章：文件操作"><a href="#第七章：文件操作" class="headerlink" title="第七章：文件操作"></a>第七章：文件操作</h3><h4 id="读写文件："><a href="#读写文件：" class="headerlink" title="读写文件："></a>读写文件：</h4><ul><li><p>常用访问模式：</p><ul><li><code>r</code>：以只读方式打开(默认模式)</li><li><code>w</code>：用于写入，如果文件存在会将其覆盖，不存在则会创建</li><li><code>a</code>：用于写入，如果文件存在会在其后追加内容，不存在则会创建</li><li><code>rb</code>：以二进制的只读方式打开</li><li><code>wb</code>：以二进制的写入模式打开</li><li><code>+</code>：打开一个文件进行更新(可读可写)</li><li>注: 路径中由于<code>\</code>是转义符，所以表示路径时，使用<code>\\</code>或<code>/</code>或路径前加<code>r</code></li></ul></li><li><p><code>encoding='utf-8'</code>设置文件编码，二进制读写时不用设置编码</p></li><li><p>基本格式：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#变量名 = open("文件名","访问模式")</span><span class="token comment" spellcheck="true">#文件名.close()</span>txt <span class="token operator">=</span> open<span class="token punctuation">(</span>r<span class="token string">'路径'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>txt<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>txt<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 推荐使用with格式，with格式：</span><span class="token comment" spellcheck="true"># with open("文件名"，'访问模式') as 别名:</span><span class="token keyword">with</span> open<span class="token punctuation">(</span>r<span class="token string">'路径'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> txt<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>txt<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>文件读取生成式：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 生成式读取文件字节</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'test.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> r<span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 生成式</span> res <span class="token operator">=</span> sum<span class="token punctuation">(</span>len<span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token keyword">for</span> line <span class="token keyword">in</span> r<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token string">''</span>'<span class="token number">38889</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>文件读写相关方法：</p><ul><li><code>.readline()</code>：从文件中读入一行内容</li><li><code>.readlines()</code>：从文件中读入所有行，以每行为元素形成一个列表</li><li><code>.write()</code>：单行写入，将一个字符串写入文件</li><li><code>.writelines()</code>：直接将列表类型的各元素连接起来并写入</li><li><code>.tell()</code>：文件定位，获取当前文件指针读取到的位置</li><li><code>.truncate(x)</code>：截取输出前x个字符</li><li><code>.seek(x,y)</code>：改变当前文件操作指针的位置，x的值为偏移量单位字节，y的值(0: 文件开头; 1: 当前位置; 2: 文件结尾)</li></ul></li><li><p>文件操作实例：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 文件的读写 - 文件备份</span><span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">try</span><span class="token punctuation">:</span>     old_file <span class="token operator">=</span> name     new <span class="token operator">=</span> old_file<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span>     new_file <span class="token operator">=</span> new<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'_备份.'</span> <span class="token operator">+</span> new<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>     <span class="token keyword">with</span> open<span class="token punctuation">(</span>old_file<span class="token punctuation">,</span><span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> r<span class="token punctuation">,</span> open<span class="token punctuation">(</span>new_file<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> w<span class="token punctuation">:</span>         <span class="token keyword">for</span> line <span class="token keyword">in</span> r<span class="token punctuation">:</span>             w<span class="token punctuation">.</span>write<span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token keyword">except</span> Exception <span class="token keyword">as</span> result<span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"输入的文件名不存在."</span><span class="token punctuation">)</span> <span class="token keyword">else</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">"文件备份完成."</span><span class="token punctuation">)</span>name <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"请输入需要备份的文件名："</span><span class="token punctuation">)</span>run<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''请输入需要备份的文件名：text.txttext_备份.txt 文件备份完成.'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>实例2：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># .seek()的应用 - 监测文件的实时写入</span><span class="token keyword">import</span> time<span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'xxx'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span> f<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>     line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> len<span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>         time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>         <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="遍历文件："><a href="#遍历文件：" class="headerlink" title="遍历文件："></a>遍历文件：</h4><ul><li>从文本文件中逐行读入内容并进行处理是一个基本的文件操作需求。文本文件可以看成是由行组成的组合类型，因此，可以使用遍历循环逐行遍历文件。<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'路径'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> txt<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>txt<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> txt<span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="操作文件："><a href="#操作文件：" class="headerlink" title="操作文件："></a>操作文件：</h4><ul><li>文件重命名<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>rename<span class="token punctuation">(</span><span class="token string">"原名称"</span><span class="token punctuation">,</span> <span class="token string">"新名称"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>删除文件<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"文件名"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>获取当前目录<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>改变默认目录<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span><span class="token string">"路径"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>遍历目录列表<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">with</span> os<span class="token punctuation">.</span>scandir<span class="token punctuation">(</span><span class="token string">'d:/'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> scan<span class="token punctuation">:</span> <span class="token keyword">for</span> s <span class="token keyword">in</span> scan<span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>遍历目录文件<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> osbasePath <span class="token operator">=</span> <span class="token string">'d:/'</span><span class="token keyword">for</span> s <span class="token keyword">in</span> os<span class="token punctuation">.</span>scandir<span class="token punctuation">(</span>basePath<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>basePath<span class="token punctuation">,</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>创建文件夹<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">"文件夹名"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>删除文件夹<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>redir<span class="token punctuation">(</span><span class="token string">"文件夹名"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="第八章：错误与异常"><a href="#第八章：错误与异常" class="headerlink" title="第八章：错误与异常"></a>第八章：错误与异常</h3><h4 id="常见的异常类型："><a href="#常见的异常类型：" class="headerlink" title="常见的异常类型："></a>常见的异常类型：</h4><ul><li><code>Exception</code>：代表所有异常类型</li><li><code>AssertError</code>：断言语句(assert)失败</li><li><code>AttributeError</code>：尝试访问未知的对象属性</li><li><code>EOFError</code>：用户输入文件末尾标志EOF(Ctrl+d) </li><li><code>FloatingPointError</code>：浮点计算错误</li><li><code>GeneratorExit</code>：generator.close()方法被调用的时候</li><li><code>ImportError</code>：导入模块失败的时候</li><li><code>IndexError</code>：索引超出序列的范围</li><li><code>KeyError</code>：字典中查找一个不存在的关键字</li><li><code>KeyboardInterrupt</code>：用户输入中断键(Ctrl+c)</li><li><code>MemoryError</code>：内存溢出(可通过删除对象释放内存)</li><li><code>NameError</code>：尝试访问一个不存在的变量</li><li><code>NotImplementedError</code>：尚未实现的方法</li><li><code>oSError</code>：操作系统产生的异常(例如打开一个不存在的文件)</li><li><code>OverflowError</code>：数值运算超出最大限制</li><li><code>ReferenceError</code>：弱引用(weak reference)试图访问一个已经被垃圾回收机制回收了的对象</li><li><code>RuntimeError</code>：一般的运行时错误</li><li><code>StopIteration</code>：迭代器没有更多的值</li><li><code>SyntaxError</code>：Python的语法错误</li><li><code>IndentationError</code>：缩进错误</li><li><code>TabError</code>：Tab和空格混合使用</li><li><code>SystemError</code>：Python编译器系统错误</li><li><code>SystemExit</code>：Python编译器进程被关闭</li><li><code>TypeError</code>：不同类型间的无效操作</li><li><code>UnboundLocalError</code>：访问一个未初始化的本地变量(NameError的子类)</li><li><code>UnicodeError</code>：Unicode相关的错误(ValueError的子类)</li><li><code>UnicodeEncodeError</code>：Unicode编码时的错误(UnicodeError的子类)</li><li><code>UnicodeDecodeError</code>：Unicode解码时的错误(UnicodeError的子类)</li><li><code>UnicodeTranslateError</code>：Unicode转换时的错误(UnicodeError的子类)</li><li><code>ValueError</code>：传入无效的参数</li><li><code>ZeroDivisionError</code>：除数为零</li></ul><h4 id="基本格式："><a href="#基本格式：" class="headerlink" title="基本格式："></a>基本格式：</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>   <span class="token operator">-</span> 尝试实现某个操作，   <span class="token operator">-</span> 如果没出现异常，任务就可以完成   <span class="token operator">-</span> 如果出现异常，将异常从当前代码块扔出去尝试解决异常<span class="token keyword">except</span> 异常类型<span class="token punctuation">:</span>   <span class="token operator">-</span> 解决方案<span class="token punctuation">:</span> 用于尝试在此处处理异常解决问题<span class="token keyword">except</span> <span class="token punctuation">(</span>异常类型<span class="token number">1</span><span class="token punctuation">,</span> 异常类型<span class="token number">2</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token operator">-</span> 解决方案<span class="token punctuation">:</span> 针对多个异常使用相同的处理方式excpet Exception<span class="token punctuation">:</span>   <span class="token operator">-</span> 解决方案<span class="token punctuation">:</span> 所有异常的解决方案<span class="token keyword">else</span><span class="token punctuation">:</span>   <span class="token operator">-</span> 如果没有出现任何异常，将会执行此处代码<span class="token keyword">finally</span><span class="token punctuation">:</span>   <span class="token operator">-</span> 无论有没有异常都要执行的代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="异常实例："><a href="#异常实例：" class="headerlink" title="异常实例："></a>异常实例：</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">try</span><span class="token punctuation">:</span>    f <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"test1.text"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            content <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> len<span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>    <span class="token keyword">finally</span><span class="token punctuation">:</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"文件关闭"</span><span class="token punctuation">)</span><span class="token keyword">except</span> Exception <span class="token keyword">as</span> result<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"发生异常···"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''发生异常···'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="手动引发异常："><a href="#手动引发异常：" class="headerlink" title="手动引发异常："></a>手动引发异常：</h4><ul><li>使用<code>raise</code>关键字实现手动引发异常</li></ul><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是cjl"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#手动引发一个异常,注意语法:raise ErrorClassName</span>    <span class="token keyword">raise</span> ValueError    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"还没完呀"</span><span class="token punctuation">)</span><span class="token keyword">except</span> NameError <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"NameError"</span><span class="token punctuation">)</span><span class="token keyword">except</span> ValueError <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"ValueError"</span><span class="token punctuation">)</span><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"有异常"</span><span class="token punctuation">)</span><span class="token keyword">finally</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我肯定会被执行"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''我是cjlValueError我肯定会被执行'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="自定义异常："><a href="#自定义异常：" class="headerlink" title="自定义异常："></a>自定义异常：</h4><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">TextException</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>leng<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>len <span class="token operator">=</span> leng    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'你输入的数据长度是：'</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>self<span class="token punctuation">.</span>len<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'，超过长度了.'</span><span class="token keyword">class</span> <span class="token class-name">TextDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入数据：'</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> len<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">:</span>            <span class="token keyword">raise</span> TextException<span class="token punctuation">(</span>len<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>    <span class="token keyword">except</span> TextException <span class="token keyword">as</span> result<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>    <span class="token keyword">finally</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"执行完毕."</span><span class="token punctuation">)</span>TextDemo<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#执行结果：</span><span class="token triple-quoted-string string">'''请输入数据：gfhsuidgoashuidghasu你输入的数据长度是：20，超过长度了.执行完毕.'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/b8a3dfda.html">https://www.cjlblog.vip/posts/b8a3dfda.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> Python篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java重写和重载</title>
      <link href="posts/838c8ec8.html"/>
      <url>posts/838c8ec8.html</url>
      
        <content type="html"><![CDATA[<h3 id="方法重写与重载"><a href="#方法重写与重载" class="headerlink" title="方法重写与重载"></a>方法重写与重载</h3><ul><li>重写(overriding)<ul><li>也叫覆写、覆盖</li><li>重写是子类对父类的允许访问的方法的实现过程进行重新编写, 返回值和形参都不能改变。即外壳不变，核心重写</li><li>方法名相同，参数相同，返回值类型也相同</li></ul></li><li>重载(overloading)<ul><li>重载是在一个类里面，方法名相同，参数不同，返回类型可以相同也可以不同</li><li>编译器根据方法签名决定调用哪个方法</li><li>最常用的地方就是构造器的重载</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/Java%E9%87%8D%E5%86%99%E5%92%8C%E9%87%8D%E8%BD%BD.jpg"></p><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><ul><li>作用域分为四种：<ul><li>类级变量：<ul><li>又叫<code>全局变量</code>或<code>静态变量</code>，需要使用<code>static</code>关键字修饰</li></ul></li><li>对象实例级变量：<ul><li>对象实例级变量就是<code>成员变量</code>，实例化后才会分配内存空间，才能访问</li><li>默认值为<code>NULL</code>或<code>0</code>，成员和局部变量名相同时，局部变量优先</li></ul></li><li>方法级变量：<ul><li>方法级变量就是在<code>方法内部</code>定义的变量</li></ul></li><li>块级变量：<ul><li>该类变量的生存周期仅限在此<code>代码块里</code>，出来这个块就失效了，比如if、for等</li></ul></li></ul></li><li><code>public</code>、<code>private</code>、<code>protected</code>和<code>缺省</code><ul><li><code>public</code>：公有的，任何类都可直接调用</li><li><code>private</code>：私有的，仅能在当前类里进行访问</li><li><code>protected</code>：受保护的，不能跨文件进行调用</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/Java%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F.jpg"></p><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/838c8ec8.html">https://www.cjlblog.vip/posts/838c8ec8.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> Java篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 变量作用域 </tag>
            
            <tag> 重写与重载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java继承封装多态</title>
      <link href="posts/b1b44365.html"/>
      <url>posts/b1b44365.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x001：继承"><a href="#0x001：继承" class="headerlink" title="0x001：继承"></a>0x001：继承</h2><h4 id="类的继承格式"><a href="#类的继承格式" class="headerlink" title="类的继承格式"></a>类的继承格式</h4><ul><li>在Java中通过<code>extends</code>关键字可以申明一个类是从另外一个类继承而来的，一般形式如下：<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> 父类 <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">class</span> 子类 <span class="token keyword">extends</span> 父类 <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="类继承的作用"><a href="#类继承的作用" class="headerlink" title="类继承的作用"></a>类继承的作用</h3><ul><li><p>从这下面两段代码可以看出来，代码存在重复了，导致后果就是代码量大且臃肿，而且维护性不高(维护性主要是后期需要修改的时候，就需要修改很多的代码，容易出错)，简单来说就是代码复用</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token punctuation">{</span>     <span class="token keyword">private</span> String name<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token function">Dog</span><span class="token punctuation">(</span>String myName<span class="token punctuation">,</span> <span class="token keyword">int</span>  myid<span class="token punctuation">)</span> <span class="token punctuation">{</span>         name <span class="token operator">=</span> myName<span class="token punctuation">;</span>         id <span class="token operator">=</span> myid<span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"正在吃"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"正在睡"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">introduction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"大家好！我是"</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">"号"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token punctuation">{</span>     <span class="token keyword">private</span> String name<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token function">Cat</span><span class="token punctuation">(</span>String myName<span class="token punctuation">,</span> <span class="token keyword">int</span> myid<span class="token punctuation">)</span> <span class="token punctuation">{</span>         name <span class="token operator">=</span> myName<span class="token punctuation">;</span>         id <span class="token operator">=</span> myid<span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"正在吃"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"正在睡"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">introduction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"大家好！我是"</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">"号"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>所以要从根本上解决这两段代码的问题，就需要继承，将两段代码中相同的部分提取出来组成 一个父类，例如：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>      <span class="token keyword">private</span> String name<span class="token punctuation">;</span>       <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token function">Animal</span><span class="token punctuation">(</span>String myName<span class="token punctuation">,</span> <span class="token keyword">int</span> myid<span class="token punctuation">)</span> <span class="token punctuation">{</span>          name <span class="token operator">=</span> myName<span class="token punctuation">;</span>          id <span class="token operator">=</span> myid<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"正在吃"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"正在睡"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">introduction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"大家好！我是"</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">"号"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>这个Animal类就可以作为一个父类，然后狗类和猫类继承这个类之后，就具有父类当中的属性和方法，子类就不会存在重复的代码，维护性也提高，代码也更加简洁，提高代码的复用性（复用性主要是可以多次使用，不用再多次写同样的代码） 继承之后的代码：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>      <span class="token keyword">public</span> <span class="token function">Dog</span> <span class="token punctuation">(</span>String myName<span class="token punctuation">,</span> <span class="token keyword">int</span> myid<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">super</span><span class="token punctuation">(</span>myName<span class="token punctuation">,</span> myid<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>      <span class="token keyword">public</span> <span class="token function">Cat</span> <span class="token punctuation">(</span>String myName<span class="token punctuation">,</span> <span class="token keyword">int</span> myid<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">super</span><span class="token punctuation">(</span>myName<span class="token punctuation">,</span> myid<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="继承的特点"><a href="#继承的特点" class="headerlink" title="继承的特点"></a>继承的特点</h3><ul><li>子类会继承父类的所有<code>public</code>的字段和方法</li><li>对于父类的<code>private</code>的字段和方法, 子类中是无法访问的</li><li>子类可以拥有自己的<code>属性和方法</code>，即子类可以对父类进行扩展</li><li>Java 的继承是单继承，但是可以多重继承，单继承就是一个子类只能继承一个父类，多重继承就是，例如 B 类继承 A 类，C 类继承 B 类，所以按照关系就是 B 类是 C 类的父类，A 类是 B 类的父类</li></ul><h3 id="继承注意事项"><a href="#继承注意事项" class="headerlink" title="继承注意事项"></a>继承注意事项</h3><ul><li><code>私有的属性和方法</code>不能继承</li><li>父类的<code>构造方法</code>不能继承</li><li>使用<code>final</code>定义的类不可继承</li><li>使用<code>super()</code>调用父类，必需放在第一行</li><li>一个子类只能继承<code>一个</code>父类</li></ul><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/Java%E7%BB%A7%E6%89%BF.jpg"></p><h2 id="0x002：封装"><a href="#0x002：封装" class="headerlink" title="0x002：封装"></a>0x002：封装</h2><h4 id="封装作用"><a href="#封装作用" class="headerlink" title="封装作用"></a>封装作用</h4><ul><li>在面向对象程式设计方法中，封装是指一种将抽象性函式接口的实现细节部分包装、隐藏起来的方法。</li><li>封装可以被认为是一个保护屏障，防止该类的代码和数据被外部类定义的代码随机访问。</li><li>要访问该类的代码和数据，必须通过严格的接口控制。</li><li>封装最主要的功能在于我们能修改自己的实现代码，而不用修改那些调用我们代码的程序片段。</li><li>适当的封装可以让程式码更容易理解与维护，也加强了程式码的安全性。</li></ul><h3 id="封装的实现"><a href="#封装的实现" class="headerlink" title="封装的实现"></a>封装的实现</h3><ol><li>修改属性的可见性来限制对属性的访问(一般限制为private)<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* name和age为私有的，只能本类才能访问 */</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>对每个值属性提供对外的公共方法访问，也就是创建一对赋取值方法，用于对私有属性的访问如：get\set方法<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>实例化<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">TestDemo</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Person person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        person<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        person<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"cjl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="封装的优点"><a href="#封装的优点" class="headerlink" title="封装的优点"></a>封装的优点</h3><ul><li>良好的封装能够减少耦合。</li><li>类内部的结构可以自由修改。</li><li>可以对成员变量进行更精确的控制。</li><li>隐藏信息，实现细节</li></ul><h2 id="0x003：多态"><a href="#0x003：多态" class="headerlink" title="0x003：多态"></a>0x003：多态</h2><h4 id="向上转型"><a href="#向上转型" class="headerlink" title="向上转型"></a>向上转型</h4><ul><li>向上转型，JAVA中的一种调用方式。向上转型是对A的对象的方法的扩充，即A的对象可访问B从A中继承来的和B“重写”A的方法。<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>     <span class="token keyword">public</span> String name<span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token function">Animal</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> <span class="token keyword">int</span>  age<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"在吃东西"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"在睡觉"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Pig</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span><span class="token punctuation">{</span>     <span class="token keyword">public</span> <span class="token function">Pig</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">void</span> <span class="token function">funcPig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"吃桃子"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">void</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">super</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//调用自己的eat()方法</span>         <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//调用父类的eat()方法</span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">funcPig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>class Test{<br>        public static void main(String[] args) {<br>            /* 正常使用 <em>/<br>            Animal animal1 = new Animal(“gougou”,12);<br>            animal1.eat();<br>            Pig pig  = new Pig(“zhuzhu”,8);<br>            pig.eat();<br>            /</em> 向上转型 <em>/<br>            Animal animal =new Pig(“bajie”,78);<br>            animal.eat();<br>        }<br>}<br>/</em><br>执行结果：<br>gougou在吃东西<br>zhuzhu在吃桃子<br>bajie在吃桃子<br>*/</p><p>```</p><h3 id="动态绑定"><a href="#动态绑定" class="headerlink" title="动态绑定"></a>动态绑定</h3><ul><li>在Java中调用某个类的方法，究竟执行了哪段代码(是父类方法的代码还是子类方法的代码), 要看究竟这个引用指向的是父类对象还是子类对象。这个过程是程序运行时决定的(而不是编译期), 因此称为<code>动态绑定</code>，上面的<code>Animal animal = new Pig("bajie", 78);</code>、<code>animal.eat();</code>就发生了动态绑定</li><li>构造方法也可以发生动态绑定（也叫运行时绑定）</li><li>动态绑定的条件：<ul><li>一定有向上转型</li><li>子类重写了父类的方法，发生了方法的重写</li><li>通过父类的引用来调用被重写的方法</li></ul></li></ul><h3 id="多态注意事项"><a href="#多态注意事项" class="headerlink" title="多态注意事项"></a>多态注意事项</h3><ul><li>多态存在的三个必要条件：<ul><li>继承</li><li>重写</li><li>父类引用指向子类对象</li></ul></li><li>多态的实现方式：<ul><li>方式一：重写</li><li>方式二：接口</li><li>方式三：抽象类和抽象方法</li></ul></li></ul><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/b1b44365.html">https://www.cjlblog.vip/posts/b1b44365.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> Java篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 继承 </tag>
            
            <tag> 封装 </tag>
            
            <tag> 多态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java常用对话框</title>
      <link href="posts/6f783614.html"/>
      <url>posts/6f783614.html</url>
      
        <content type="html"><![CDATA[<h4 id="0x001显示对话框"><a href="#0x001显示对话框" class="headerlink" title="0x001显示对话框"></a>0x001显示对话框</h4><ul><li>基本格式：<ul><li><code>JOptionPane.showMessageDialog(参数1, 参数2, 参数3, 参数4, 参数5);</code></li><li>参数1：对话框的<code>父窗体对象</code></li><li>参数2：对话框内的<code>提示信息</code></li><li>参数3：对话框的<code>标题信息</code></li><li>参数4：对话框的<code>消息类型</code></li><li>参数5：对话框中<code>显示的图片</code></li><li>注：省略值可用<code>null</code>占位(下同)</li></ul></li><li>消息类型：<ul><li>错误消息提示 -&gt; <code>JOptionPane.ERROR_MESSAGE</code></li><li>普通消息提示 -&gt; <code>JOptionPane.INFORMATION_MESSAGE</code></li><li>警告消息提示 -&gt; <code>JOptionPane.WARNING_MESSAGE</code></li><li>询问消息提示 -&gt; <code>JOptionPane.QUESTION_MESSAGE</code></li><li>无图标提示 -&gt; <code>JOptionPane.PLAIN_MESSAGE</code></li><li>注：可用数字0~3代替，<code>0是错误</code>、<code>1是普通</code>、<code>2是警告</code>、<code>3是询问</code></li></ul></li><li>实例：<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//导入相应的包</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>ImageIcon<span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//用于调用图片</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>JOptionPane<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//用于调用对话框</span>JOptionPane<span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token string">"你好呀~"</span><span class="token punctuation">,</span> <span class="token string">"打招呼"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ImageIcon</span><span class="token punctuation">(</span><span class="token string">"图片路径"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>效果如下：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202103272345.jpg"></li></ul><h4 id="0x002输入对话框"><a href="#0x002输入对话框" class="headerlink" title="0x002输入对话框"></a>0x002输入对话框</h4><ul><li><p>基本格式：</p><ul><li><code>JOptionPane.showInputDialog(参数1, 参数2, 参数3, 参数4, 参数5, 参数6, 参数7);</code></li><li>参数1：对话框的<code>父窗体对象</code></li><li>参数2：对话框内的<code>提示信息</code></li><li>参数3：对话框的<code>标题信息</code></li><li>参数4：对话框的<code>消息类型</code></li><li>参数5：对话框中<code>显示的图片</code></li><li>参数6：对话框的<code>下拉列表</code></li><li>参数7：输入框中的<code>默认值</code></li></ul></li><li><p>实例：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//导入相应的包</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>JOptionPane<span class="token punctuation">;</span>Object newobjResult <span class="token operator">=</span> JOptionPane<span class="token punctuation">.</span><span class="token function">showInputDialog</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token string">"宁还好吗？"</span><span class="token punctuation">,</span> <span class="token string">"问候一下"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> null<span class="token punctuation">,</span> <span class="token string">"我还好..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>效果如下：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202103272346.jpg"></p></li><li><p>返回值为你输入的内容，接收返回值方法：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//导入相应的包</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>JOptionPane<span class="token punctuation">;</span>Object objResult <span class="token operator">=</span> JOptionPane<span class="token punctuation">.</span><span class="token function">showInputDialog</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token string">"宁还好吗？"</span><span class="token punctuation">,</span> <span class="token string">"问候一下"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>String name <span class="token operator">=</span> objResult<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="0x003询问对话框"><a href="#0x003询问对话框" class="headerlink" title="0x003询问对话框"></a>0x003询问对话框</h4><ul><li>基本格式：<ul><li><code>JOptionPane.showConfirmDialog(参数1, 参数2, 参数3, 参数4);</code></li><li>参数1：对话框的<code>父窗体对象</code></li><li>参数2：对话框内的<code>提示信息</code></li><li>参数3：对话框的<code>标题信息</code></li><li>参数4：<code>YES_NO_OPTION</code>也可<code>YES_NO_CANCEL_OPTION</code></li></ul></li><li>有返回值：<ul><li><code>点是</code>返回值为<code>0</code></li><li><code>点否</code>返回值为<code>1</code><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//导入相应的包</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>JOptionPane<span class="token punctuation">;</span><span class="token keyword">int</span> num <span class="token operator">=</span> JOptionPane<span class="token punctuation">.</span><span class="token function">showConfirmDialog</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token string">"你学废了吗?"</span><span class="token punctuation">,</span> <span class="token string">"Java"</span><span class="token punctuation">,</span> JOptionPane<span class="token punctuation">.</span>YES_NO_CANCEL_OPTION<span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li>效果如下：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202103272349.jpg"></li></ul><h4 id="0x004选择对话框"><a href="#0x004选择对话框" class="headerlink" title="0x004选择对话框"></a>0x004选择对话框</h4><ul><li><p>基本格式</p><ul><li><code>JOptionPane.showOptionDialog((参数1, 参数2, 参数3, 参数4, 参数5, 参数6, 参数7, 参数8);</code></li><li>参数1：对话框的<code>父窗体对象</code></li><li>参数2：对话框内的<code>提示信息</code></li><li>参数3：对话框的<code>标题信息</code></li><li>参数4：<code>YES_NO_OPTION</code>也可<code>YES_NO_CANCEL_OPTION</code></li><li>参数5：对话框的<code>消息类型</code></li><li>参数6：对话框中<code>显示的图片</code></li><li>参数7：对话框<code>选项的数组名</code></li><li>参数8：对话框选项<code>默认值</code></li></ul></li><li><p>实例：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//导入相应的包</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>JOptionPane<span class="token punctuation">;</span>Object<span class="token punctuation">[</span><span class="token punctuation">]</span> list <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"C语言"</span><span class="token punctuation">,</span> <span class="token string">"Java"</span><span class="token punctuation">,</span> <span class="token string">"Python"</span><span class="token punctuation">,</span> <span class="token string">"C++"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>JOptionPane<span class="token punctuation">.</span><span class="token function">showOptionDialog</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token string">"请选择："</span><span class="token punctuation">,</span> <span class="token string">"你现在在学哪门编程语言？"</span><span class="token punctuation">,</span> JOptionPane<span class="token punctuation">.</span>YES_NO_CANCEL_OPTION<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> list<span class="token punctuation">,</span> list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>效果如下：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202103272350.jpg"></p></li><li><p>返回值为你所选选项的元素下标，接收方法：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//导入相应的包</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>JOptionPane<span class="token punctuation">;</span>Object<span class="token punctuation">[</span><span class="token punctuation">]</span> list <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"C语言"</span><span class="token punctuation">,</span> <span class="token string">"Java"</span><span class="token punctuation">,</span> <span class="token string">"Python"</span><span class="token punctuation">,</span> <span class="token string">"C++"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>Object objResult <span class="token operator">=</span> JOptionPane<span class="token punctuation">.</span><span class="token function">showOptionDialog</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token string">"请选择："</span><span class="token punctuation">,</span> <span class="token string">"你现在在学哪门编程语言？"</span><span class="token punctuation">,</span>JOptionPane<span class="token punctuation">.</span>YES_NO_CANCEL_OPTION<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> list<span class="token punctuation">,</span> list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>objResult<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/6f783614.html">https://www.cjlblog.vip/posts/6f783614.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> Java篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java对话框 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最全css样式表</title>
      <link href="posts/f8a3898b.html"/>
      <url>posts/f8a3898b.html</url>
      
        <content type="html"><![CDATA[<h4 id="基本格式："><a href="#基本格式：" class="headerlink" title="基本格式："></a>基本格式：</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>！DOCTYPE</span> <span class="token attr-name">html</span><span class="token punctuation">></span></span>&lt;html lang = "en"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    &lt;meat charset = "UTF-8">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    //外部css    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>路径<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    //内部css    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">选择器 </span><span class="token punctuation">{</span>            属性名称；属性对应值；        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    //行内css    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>行内css<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="0x001：文字属性相关"><a href="#0x001：文字属性相关" class="headerlink" title="0x001：文字属性相关"></a>0x001：文字属性相关</h4><ul><li><p>文字样式</p><ul><li><code>font-style:样式</code></li></ul></li><li><p>文字粗细</p><ul><li><code>font-weight:粗细</code></li></ul></li><li><p>文字大小</p><ul><li><code>font-size:大小</code></li></ul></li><li><p>文字字体</p><ul><li><code>font-family:字体,备选字体</code></li></ul></li><li><p>合并简写：</p><ul><li><code>font: 样式 粗细 大小 字体</code></li></ul></li></ul><h4 id="0x002：文本属性相关"><a href="#0x002：文本属性相关" class="headerlink" title="0x002：文本属性相关"></a>0x002：文本属性相关</h4><ul><li><p>文本缩进</p><ul><li><code>text-indent:缩进距离</code></li></ul></li><li><p>文本对齐</p><ul><li><code>text-align:对齐方向</code></li></ul></li><li><p>文本居中</p><ul><li><code>text-align: center</code></li></ul></li><li><p>文本划线</p><ul><li><code>text-decoration:划线</code></li></ul></li><li><p>文本颜色</p><ul><li><code>color:颜色</code></li></ul></li></ul><h4 id="0x003：图片边框属性相关"><a href="#0x003：图片边框属性相关" class="headerlink" title="0x003：图片边框属性相关"></a>0x003：图片边框属性相关</h4><ul><li><p>边框宽度</p><ul><li><code>border-width: 宽度px</code></li></ul></li><li><p>边框样式</p><ul><li><code>border-style: 样式</code></li></ul></li><li><p>边框颜色</p><ul><li><code>color: 颜色</code></li></ul></li><li><p>边框圆角</p><ul><li><code>border-radius:大小px</code></li></ul></li></ul><h4 id="0x004：选择器相关"><a href="#0x004：选择器相关" class="headerlink" title="0x004：选择器相关"></a>0x004：选择器相关</h4><ul><li>标签选择器<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签</span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>ID选择器<pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token id">#ID</span>名称</span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span>           //配合id = <span class="token string">"xxx"</span>使用<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>类选择器<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">.类名</span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span>           //配合class = <span class="token string">"xxx"</span>使用<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>后代选择器<pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token id">#ID</span>名称 .类名1 .类名2··· </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span>             //同上<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>子元素选择器<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">div>标签>标签>··· </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span>             //<span class="token string">">"</span>是指地址<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>交集选择器<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签名.类名 </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>并集选择器<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">ID名称,.类名 </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>相邻兄弟选择器<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签1 + 标签2 </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>通用兄弟选择器<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签1 ～ 标签2 </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="0x005：序选择器相关"><a href="#0x005：序选择器相关" class="headerlink" title="0x005：序选择器相关"></a>0x005：序选择器相关</h4><ul><li>选中同级别中的第一个标签<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:first-child</span> </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中同级别中的最后个标签<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:last-child</span> </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中同级别中的第n个标签<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:nth-child(n)</span> </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中同级别中的倒数第n个标签<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:nth-last-child(n)</span> </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中父元素中唯一的元素<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:only-child</span> </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中父元素中唯一类型的某个标签<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:conly-of-type</span> </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中同级别中同类型的第一个标签<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:first-of-type</span>  </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中同级别中同类型的最后一个标签<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:last-of-type</span> </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中同级别中同类型的第n个标签<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:nth-of-type(n)</span>  </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中同级别中同类型的倒数第n个标签<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:nth-last-of-type(n)</span> </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中同级别中的所以奇数<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:nth-child</span>（odd） </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中同级别中的所以偶数<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:nth-child</span>（oven） </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中自定义的标签<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token pseudo-class">:nth-child</span>（xn+y） </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="0x006：属性选择器相关"><a href="#0x006：属性选择器相关" class="headerlink" title="0x006：属性选择器相关"></a>0x006：属性选择器相关</h4><ul><li>根据指定属性找到对应的标签<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token attribute">[id]</span> </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>根据class标签找到指定的属性<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token attribute">[class ="xxx"]</span> </span><span class="token punctuation">{</span> 标签<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>属性的值是以什么开头的<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token attribute">[alt ^="xxx"]</span> </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>属性取值是以什么结尾的<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token attribute">[alt $="xxx"]</span> </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>属性取值是否包含某个特定的值<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">标签<span class="token attribute">[alt *="xxx"]</span> </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>选中全文的标签设置属性</li></ul><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">* </span><span class="token punctuation">{</span>    属性<span class="token punctuation">:</span>值<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="0x007：优先级相关"><a href="#0x007：优先级相关" class="headerlink" title="0x007：优先级相关"></a>0x007：优先级相关</h4><ul><li>提升直接选中标签的优先性<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">直接选中的标签 </span><span class="token punctuation">{</span> 属性<span class="token punctuation">:</span>值<span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>直接选中标签的权重问题<ul><li>优先级：<code>id&gt; 类&gt; 标签&gt; 继承&gt; 默认</code></li><li>计算优先级得权重</li><li>只有<code>font color text line</code>开头的属性才可以继承</li></ul></li></ul><h4 id="0x008：div和span标签"><a href="#0x008：div和span标签" class="headerlink" title="0x008：div和span标签"></a>0x008：div和span标签</h4><ul><li><p>div标签 – 容器级标签（可以嵌套所有的标签）</p><ul><li>作用：完成网页的基本布局</li><li>注意点：<code>div标签独占一行</code></li><li>格式：<pre class="line-numbers language-css"><code class="language-css">&lt;div class=<span class="token string">"xxx"</span>>标签属性&lt;/div><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>span标签 – 文本级标签（只能嵌套文字，图片和超链接）</p><ul><li>作用：修改文本的局部信息</li><li>注意点：<code>span标签不会独占一行</code></li><li>格式：<pre class="line-numbers language-css"><code class="language-css">&lt;span>内容&lt;/span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li></ul><h4 id="0x009：显示模式的转换"><a href="#0x009：显示模式的转换" class="headerlink" title="0x009：显示模式的转换"></a>0x009：显示模式的转换</h4><ul><li>转换为块级元素<ul><li>块级元素是在容器级标签的基础上多了p标签</li><li>注意点：块级元素独占一行，可以控制宽高</li><li>格式：<pre class="line-numbers language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li>转换为行内元素<ul><li>行内级元素是在文本级标签的基础上少了p标签</li><li>注意点：行内元素不会独占一行，不能控制宽高</li><li>格式：<pre class="line-numbers language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>inline<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li>转换为块级行内元素<ul><li>不独占一行，并且可以控制宽高</li><li>格式：<pre class="line-numbers language-css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span>inline-block<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li></ul><h4 id="0x010：背景属性"><a href="#0x010：背景属性" class="headerlink" title="0x010：背景属性"></a>0x010：背景属性</h4><ul><li>设置背景颜色<pre class="line-numbers language-css"><code class="language-css"><span class="token property">background-color</span><span class="token punctuation">:</span> 颜色<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>设置背景图片<pre><code>background-image: url(图片地址);</code></pre></li><li>页面背景图片<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">body </span><span class="token punctuation">{</span> <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(图片地址)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>图片平铺属性<pre class="line-numbers language-css"><code class="language-css"><span class="token property">background-repeat</span><span class="token punctuation">:</span> repeat-x<span class="token punctuation">;</span>    //x轴平铺<span class="token property">background-repeat</span><span class="token punctuation">:</span> repeat-y<span class="token punctuation">;</span>     //y轴平铺<span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>     //不平铺<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>图片关联方式<pre class="line-numbers language-css"><code class="language-css"><span class="token property">background-attachment</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>   //页面动图不动<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>背景图片定位<pre class="line-numbers language-css"><code class="language-css"><span class="token property">background-position</span><span class="token punctuation">:</span> 方向 方向<span class="token punctuation">;</span>水平方向：left，center，right垂直方向：top，center，bottom<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>背景属性缩写<pre class="line-numbers language-css"><code class="language-css"><span class="token property">background</span><span class="token punctuation">:</span> 颜色 图片 平铺 关联 定位<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="0x011：盒模型属性css"><a href="#0x011：盒模型属性css" class="headerlink" title="0x011：盒模型属性css"></a>0x011：盒模型属性css</h4><ul><li><p>边框属性</p><ul><li>格式：<pre class="line-numbers language-css"><code class="language-css"><span class="token property">border-top</span><span class="token punctuation">:</span> 宽度 样式 颜色<span class="token punctuation">;</span>       //上边框<span class="token property">border-left</span><span class="token punctuation">:</span> 宽度 样式 颜色<span class="token punctuation">;</span>      //左边框<span class="token property">border-right</span><span class="token punctuation">:</span> 宽度 样式 颜色<span class="token punctuation">;</span>     //右边框<span class="token property">border-botom</span><span class="token punctuation">:</span> 宽度 样式 颜色<span class="token punctuation">;</span>     //下边框<span class="token property">border</span><span class="token punctuation">:</span> 宽度 样式 颜色<span class="token punctuation">;</span>           //四条边都相等例：<span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#000</span><span class="token punctuation">;</span>//虚线样式：dashed<span class="token property">border-width</span><span class="token punctuation">:</span> 上 右 下 左<span class="token punctuation">;</span><span class="token property">border-style</span><span class="token punctuation">:</span> 上 右 下 左<span class="token punctuation">;</span>       //一步设置四条边<span class="token property">border-color</span><span class="token punctuation">:</span> 上 右 下 左<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>内边距属性</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">padding-top</span><span class="token punctuation">:</span> 宽度<span class="token punctuation">;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 宽度<span class="token punctuation">;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 宽度<span class="token punctuation">;</span><span class="token property">padding-bottom</span><span class="token punctuation">:</span> 宽度<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 上，右，下，左<span class="token punctuation">;</span>    //四条边的内边距宽度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>外边距属性</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span> 宽度<span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 宽度<span class="token punctuation">;</span><span class="token property">margin-right</span><span class="token punctuation">:</span> 宽度<span class="token punctuation">;</span><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 宽度<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 上，右，下，左<span class="token punctuation">;</span>     //四条边的外边距宽度<span class="token property">margin</span><span class="token punctuation">:</span> 上 auto<span class="token punctuation">;</span>        //auto：只可水平方向居中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>盒子模型计算</p><pre><code>内容宽高 = width或height外边距：margin内边距：padding元素宽高  = 边框 + 内边距 + `内容高度`或`宽度`边框：border元素空间宽高 = 外边框 + 边框 + 内边距 + `内容高度`或`宽度`</code></pre></li><li><p>盒子box-sizing属性</p><ul><li>作用：<ul><li>保证元素宽高不变的情况下，添加<code>padding和margin</code>属性时超过了元素宽高的值时，自动改变内容的宽高</li></ul></li><li>格式：<pre class="line-numbers language-css"><code class="language-css"><span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>水平居中</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  和  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span> 的区别<span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> -> 边框内部的内容居中<span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span> -> 盒子边框整体居中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>清空默认的外边距</p></li></ul><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">//范围太广比较不实用* </span><span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">//用于大项目的开发时body, div, dl, dt, dd, ul,ol, li, h1, h2, h3, h4, h5, h6, pre, code, form, fieldset, legend, input, tex tarea, p, blockquote, th, td </span><span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>边框内的行高<ul><li>作用：<ul><li>设置行高的高度等于边框的高度时，可以使单行文字在边框中垂直居中显示(只适用于一行文字)，如果有多行文字则应使用<code>padding</code>来垂直居中</li></ul></li><li>格式：<pre class="line-numbers language-css"><code class="language-css"><span class="token property">line-height</span><span class="token punctuation">:</span> 高度<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li></ul><h4 id="0x012：浮动流"><a href="#0x012：浮动流" class="headerlink" title="0x012：浮动流"></a>0x012：浮动流</h4><ul><li>浮动流的基本概念<ul><li>注意点：<ul><li>float中不能使用center居中，也不能使用margin: 0 auto进行距中</li></ul></li><li>好处：<ul><li>无论是块级元素/行内元素/块级行内元素<code>都可以进行水平排版</code>、<code>都可以进行设置宽高</code></li></ul></li><li>格式：</li></ul></li></ul><pre class="line-numbers language-css"><code class="language-css"><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>             //左对齐<span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>           //右对齐<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p>浮动的排版规则</p><ul><li>从外向内，从上向下；</li><li>在浮动流中，浮动的元素不能撑起父元素的高度。</li></ul></li><li><p>清除浮动</p><ul><li>注意点：<ul><li>当使用clean后margin将会失效。</li></ul></li><li>格式：<code>clean: both;        //清除左右浮动</code></li><li>格式：<code>overflow: hidden;</code></li><li>作用：<ul><li>可将超出标签范围的内容截剪掉；</li><li>如果在盒子里设置了margin-top，则可以让外面的盒子不会掉下来</li></ul></li></ul></li><li><p>伪元素选择器</p><ul><li><p>格式（div内容之前）：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">div<span class="token pseudo-element">::before</span> </span><span class="token punctuation">{</span> <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"内容"</span><span class="token punctuation">;</span>         //添加子元素内容 <span class="token property">width</span><span class="token punctuation">:</span> 宽度<span class="token punctuation">;</span>               //添加内容的宽度 <span class="token property">height</span><span class="token punctuation">:</span> 高度<span class="token punctuation">;</span>              //添加内容的高度 <span class="token property">background-color</span><span class="token punctuation">:</span> 背景颜色<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>          //转换为块级元素 <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>     //隐藏添加的内容<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>格式（div内容之后）：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">div<span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span> <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"内容"</span><span class="token punctuation">;</span>        //添加子元素内容 <span class="token property">width</span><span class="token punctuation">:</span> 宽度<span class="token punctuation">;</span>               //添加内容的宽度 <span class="token property">height</span><span class="token punctuation">:</span> 高度<span class="token punctuation">;</span>              //添加内容的高度 <span class="token property">background-color</span><span class="token punctuation">:</span> 背景颜色<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>          //转换为块级元素 <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>      //隐藏添加的内容<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h4 id="0x013：定位流"><a href="#0x013：定位流" class="headerlink" title="0x013：定位流"></a>0x013：定位流</h4><ul><li><p>标准定位</p><ul><li><p>注意点：</p><ul><li>标准定位流不会脱离标准流的空间，只能在标准流内进行上右下左的移动</li></ul></li><li><p>格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 大小px<span class="token punctuation">;</span>              //相当于上外边距<span class="token property">right</span><span class="token punctuation">:</span>  大小px<span class="token punctuation">;</span>           //相当于右外边距<span class="token property">bottom</span><span class="token punctuation">:</span> 大小px<span class="token punctuation">;</span>       //相当于下外边距<span class="token property">left</span><span class="token punctuation">:</span> 大小px<span class="token punctuation">;</span>              //相当于左外边距<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>绝对定位</p><ul><li><p>注意点：</p><ul><li>主要是祖先关系的定位流都可以实现绝对定位，那个定位流离它最近就在那里定位</li></ul></li><li><p>格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 大小px<span class="token punctuation">;</span>              //相当于上外边距<span class="token property">right</span><span class="token punctuation">:</span>  大小px<span class="token punctuation">;</span>           //相当于右外边距<span class="token property">bottom</span><span class="token punctuation">:</span> 大小px<span class="token punctuation">;</span>       //相当于下外边距<span class="token property">left</span><span class="token punctuation">:</span> 大小px<span class="token punctuation">;</span>              //相当于左外边距<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>子绝父相：</p></li><li><p>将子元素是绝对定位，将父元素是相对定位</p></li><li><p>水平居中：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> 元素宽度的一半<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>a标签伪类选择器</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">//修改从来被访问过状态下的样式选择器标签<span class="token pseudo-class">:link</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> 颜色<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token selector">//修改被访问过的状态下的样式选择器标签<span class="token pseudo-class">:visited</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> 颜色<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">//修改鼠标悬停状态下的样式选择器标签<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> 颜色<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">//修改鼠标长按状态下的样式选择器标签<span class="token pseudo-class">:aetive</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> 颜色<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>注意点：</p><ul><li>如果四种同时出现，则必须按照爱恨原则排序<code>love hate</code>，如果需要修改访问过和未访问过的颜色一样时，则可以简写为：</li></ul><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">a </span><span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> 颜色<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h4 id="0x014：过度模块"><a href="#0x014：过度模块" class="headerlink" title="0x014：过度模块"></a>0x014：过度模块</h4><ul><li><p>基本格式</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">transition-property: 变化的标签,变化的标签;transition-duration: 秒数,秒数;transition-delay: 延时时间s;选择器标签<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>    //变化的宽度,高度,内外边距大小，颜色    例：<span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    例：<span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    例：<span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>控制模块移动速度</p><ul><li><p>格式：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">选择器标签<span class="token pseudo-class">:nth-child(序数)</span> 标签 </span><span class="token punctuation">{</span>  <span class="token property">transition-timing-function</span><span class="token punctuation">:</span> 速度<span class="token punctuation">;</span>  linear：匀速  ease：慢慢变慢  ease-in：由慢变快  ease-out：由快变慢  ease-in-out：由慢变快再变慢<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>合并连写</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">transition</span><span class="token punctuation">:</span>过渡属性 过渡时长 运动速度 延时时间<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="0x015：2D转换模式"><a href="#0x015：2D转换模式" class="headerlink" title="0x015：2D转换模式"></a>0x015：2D转换模式</h4><ul><li>2D图形旋转<pre class="line-numbers language-css"><code class="language-css"><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>度数deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>2D图形移动<pre class="line-numbers language-css"><code class="language-css"><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>水平px,垂直px<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>2D图形缩放<pre class="line-numbers language-css"><code class="language-css"><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>水平,垂直<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>形变中心点<pre class="line-numbers language-css"><code class="language-css"><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">origin</span><span class="token punctuation">(</span>xxx<span class="token number">%</span>,xxx<span class="token number">%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>旋转轴向.默认是X<pre class="line-numbers language-css"><code class="language-css"><span class="token property">transform</span><span class="token punctuation">:</span> rotate X/ Y/ <span class="token function">Z</span><span class="token punctuation">(</span>度数deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>透视属性.近大远小<pre class="line-numbers language-css"><code class="language-css"><span class="token property">perspective</span><span class="token punctuation">:</span> 大小px<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="0x016：动画模块"><a href="#0x016：动画模块" class="headerlink" title="0x016：动画模块"></a>0x016：动画模块</h4><ul><li>动画三要素<pre class="line-numbers language-css"><code class="language-css"><span class="token property">animation-name</span><span class="token punctuation">:</span> xxx<span class="token punctuation">;</span><span class="token property">animation-duration</span><span class="token punctuation">:</span> 时间<span class="token punctuation">;</span><span class="token atrule"><span class="token rule">@keyframs</span> xxx</span> <span class="token punctuation">{</span> <span class="token selector">from </span><span class="token punctuation">{</span>     属性<span class="token punctuation">:</span> 值<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token selector">to </span><span class="token punctuation">{</span>     属性<span class="token punctuation">:</span> 值<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>动画延时<pre class="line-numbers language-css"><code class="language-css"><span class="token property">animation-delay</span><span class="token punctuation">:</span> 延迟<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>动画速度<pre class="line-numbers language-css"><code class="language-css"><span class="token property">animation-timing-function</span><span class="token punctuation">:</span> 同上<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>动画次数<pre class="line-numbers language-css"><code class="language-css"><span class="token property">animation-iteration-count</span><span class="token punctuation">:</span> 次数<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>动画往返<pre class="line-numbers language-css"><code class="language-css"><span class="token property">animation-direction</span><span class="token punctuation">:</span> alternate<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>悬停暂停<pre class="line-numbers language-css"><code class="language-css"><span class="token property">animation-play-start</span><span class="token punctuation">:</span> paused<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>连写格式<pre class="line-numbers language-css"><code class="language-css"><span class="token property">animation</span><span class="token punctuation">:</span> 动画名字 动画时长 运动速度 延时时间 执行次数 是否往返<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/f8a3898b.html">https://www.cjlblog.vip/posts/f8a3898b.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web前端 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最全HTML标签属性</title>
      <link href="posts/28ba7b8d.html"/>
      <url>posts/28ba7b8d.html</url>
      
        <content type="html"><![CDATA[<h4 id="HTML的固定格式"><a href="#HTML的固定格式" class="headerlink" title="HTML的固定格式"></a>HTML的固定格式</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>！DOCTYPE</span> <span class="token attr-name">html</span><span class="token punctuation">></span></span>&lt;html lang = "en"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    &lt;meat charset = "UTF-8">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="详细标签属性"><a href="#详细标签属性" class="headerlink" title="详细标签属性"></a>详细标签属性</h4><ul><li><p>七个标题</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>换行（一段文字结尾后）</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>强制换行</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>分割线</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>插入图片，定义了宽,高和边框的大小</p><pre class="line-numbers language-html"><code class="language-html">&lt;img src = "图片路径" width = "宽度" height = "高度" alt = "当路径无效，则输出本段内容" title = "悬停显示内容><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>将文字设为超链接</p><pre class="line-numbers language-html"><code class="language-html">&lt;a href = "URL地址" > 文字 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>将图片设为超链接</p><pre class="line-numbers language-html"><code class="language-html">&lt;a href = "URL地址">&lt;img src = "图片路径"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>网页跳转时打开一个新网页</p><pre class="line-numbers language-html"><code class="language-html">&lt;a href = "URL地址" target = "_blank">文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>全部超链接都变成同上</p><pre class="line-numbers language-html"><code class="language-html">&lt;base target = "_blank"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>网页跳转时在当前页面跳转</p><pre class="line-numbers language-html"><code class="language-html">&lt;a href = "URL地址" target = "_self">文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>全部的超链接都变成</p><pre class="line-numbers language-html"><code class="language-html">&lt;base target = "_self"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>超链接到自己其他的网页</p><pre class="line-numbers language-html"><code class="language-html">&lt;a href = "网页路径">网页的名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>超链接鼠标悬停时显示的信息</p><pre class="line-numbers language-html"><code class="language-html">&lt;a href = "URL地址" title = "显示内容">文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>跳转到其他网页的指定位置</p><pre class="line-numbers language-html"><code class="language-html">&lt;a href = "URL地址#xxx" >文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>&lt;h id = "xxx">标签名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>跳转到原本网页的指定位置</p><pre class="line-numbers language-html"><code class="language-html">&lt;a href = "#xxx" >文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>&lt;h id = "xxx">标签名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>无须列表</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>有序列表</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>定义列表</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>下拉列表</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">></span></span> &lt;optgroup lable = "分组名称">     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>列表数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optgroup</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>表格标签</p><pre class="line-numbers language-html"><code class="language-html">&lt;table bgcolor = "bleak" border ="1" cellspacing = "1px" width ="px" height ="px" alijn="center"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">></span></span>标题居中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">></span></span> &lt;tr bgcolor = "white">               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>           //tr：行   td：列 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>合并单元格</p><pre class="line-numbers language-html"><code class="language-html">&lt;td colspan = "x"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>   水平合并&lt;td rowspan = "x"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  垂直合并<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>表单格式</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>表单元素</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>明文输入框</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> 文字&lt;input type = "text">     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>加密输入框</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> 文字&lt;input type = "password"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>换行输入框</p><pre class="line-numbers language-html"><code class="language-html">&lt;textarea clos = "宽度" rows = "高度"> 默认内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>输入框默认值</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> 文字&lt;input type = "password" value = "默认值"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>输入框聚焦</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> &lt;lable for = "xxx">文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lable</span><span class="token punctuation">></span></span>&lt;input type = "text" id = "xxx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>单选框</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> &lt;input type = "radio" name = "xxx" checked = "checked">文字       //checked 仅能单个默认选项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>多选框</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> &lt;input type = "checkbox" checked = "checked">文字                            //checked 可多个默认选项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>待选列表</p><pre class="line-numbers language-html"><code class="language-html">&lt;input type ="text" list ="xxx">&lt;datalist id ="xxx"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>待选内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>待选内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>datalist</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>普通按钮</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> &lt;input type = "button" value = "按钮名" onclick = "alert （显示内容）"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>图片按钮</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> &lt;input type = "image" src = "图片地址" onclick = "alert （显示内容）"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>重置按钮</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> &lt;input type = "reset" value = "按钮名"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>提交按钮</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> &lt;input type = "submit"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>必填按钮</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> &lt;input type ="submit" required><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>隐藏域按钮</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> &lt;input type = "hidden" name = "xxx" value = "xxx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>表单边框</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>legend</span><span class="token punctuation">></span></span>边框内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>legend</span><span class="token punctuation">></span></span>     框内内容 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>from</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="常用字符实体"><a href="#常用字符实体" class="headerlink" title="常用字符实体"></a>常用字符实体</h4><pre class="line-numbers language-html"><code class="language-html">&amp;nbsp       空格符号&amp;copy       版权符号&amp;lt         小于符号&amp;gt         大于符号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="代替被遗弃的标签"><a href="#代替被遗弃的标签" class="headerlink" title="代替被遗弃的标签"></a>代替被遗弃的标签</h4><ul><li><code>strong语义</code>：定义重要性强调的文字<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><code>ins语义</code>：定义插入的文字<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ins</span><span class="token punctuation">></span></span>文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ins</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><code>em语义</code>：定义强调的文字<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><code>del语义</code>：定义被删除的文字<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span>文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>del</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/28ba7b8d.html">https://www.cjlblog.vip/posts/28ba7b8d.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> web前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java集成开发环境</title>
      <link href="posts/5505204e.html"/>
      <url>posts/5505204e.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x001：下载JDK和Eclipse"><a href="#0x001：下载JDK和Eclipse" class="headerlink" title="0x001：下载JDK和Eclipse"></a>0x001：下载JDK和Eclipse</h2><h4 id="官网下载"><a href="#官网下载" class="headerlink" title="官网下载"></a>官网下载</h4><p><code>JDK官网下载</code>下载链接：<a href="https://www.oracle.com/java/technologies/javase-jdk15-downloads.html">https://www.oracle.com/java/technologies/javase-jdk15-downloads.html</a></p><p><code>Eclipse官网</code>下载链接：<a href="https://www.eclipse.org/downloads/download.php?file=/oomph/epp/2020-12/R/eclipse-inst-jre-win64.exe">https://www.eclipse.org/downloads/download.php?file=/oomph/epp/2020-12/R/eclipse-inst-jre-win64.exe</a><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202103081323.jpg"></p><h3 id="百度网盘下载"><a href="#百度网盘下载" class="headerlink" title="百度网盘下载"></a>百度网盘下载</h3><ul><li>Java的<code>JDK-8u261-windows-x64</code> 和 <code>Eclipse2020年12月汉化免安装</code>版</li></ul><p>链接：<a href="https://pan.baidu.com/s/1S42pdNzXiqxWK2eMuo_EZQ">https://pan.baidu.com/s/1S42pdNzXiqxWK2eMuo_EZQ</a><br>提取码：<code>vzlx</code></p><h2 id="0x002：安装教程"><a href="#0x002：安装教程" class="headerlink" title="0x002：安装教程"></a>0x002：安装教程</h2><p><strong><code>JDK</code>傻瓜式安装：一直点下一步即可</strong><br><strong><code>Eclipse</code>免安装，运行<code>eclipse.exe</code>即可</strong></p><h2 id="0x003：配置环境变量"><a href="#0x003：配置环境变量" class="headerlink" title="0x003：配置环境变量"></a>0x003：配置环境变量</h2><ol><li>鼠标右击此电脑 -&gt; <code>属性</code> -&gt; <code>高级系统设置</code> -&gt; <code>环境变量</code></li><li>新建一个名为<code>JAVA_HOME</code>的系统变量，第二栏填你自己<code>JDK的安装路径</code><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202103081344.jpg"></li><li>进<code>Path</code> -&gt; 新建<code>%JAVA_HOME%/bin</code></li><li>打开命令行 -&gt; 运行<code>java -version</code>查看是否配置成功</li></ol><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/5505204e.html">https://www.cjlblog.vip/posts/5505204e.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> Java篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JDK </tag>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费获取网上的付费资料</title>
      <link href="posts/12cf3b04.html"/>
      <url>posts/12cf3b04.html</url>
      
        <content type="html"><![CDATA[<p><strong>有时当我们需要写一些论文，或完成某项作业时可能会去网上查阅一些相关资料，而像百度文库类似的网站下载资料又需要VIP，所以本文讲解如何免费下载付费文章<br>掌握后轻松复制文章内容，解决99%网站无法复制的问题</strong></p><h2 id="0x001：百度文库文章"><a href="#0x001：百度文库文章" class="headerlink" title="0x001：百度文库文章"></a>0x001：百度文库文章</h2><ol><li>在文章链接<code>wenku.baidu</code>后面加<code>vvv</code>，然后按回车访问</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202102191458.jpg"></p><ol start="2"><li>选择需要下载的格式，然后点击下载</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202102191414.jpg"></p><ol start="3"><li>等待文章转换完成后，就会自动开始下载</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202102191314.jpg"></p><h2 id="0x002：图片无法保存"><a href="#0x002：图片无法保存" class="headerlink" title="0x002：图片无法保存"></a>0x002：图片无法保存</h2><ol><li>在页面上<code>右击鼠标</code> -&gt; 点<code>检查</code>，右击无反应的按快捷键<code>F12</code>，还没反应的直接在快捷工具栏中打开<code>开发人员工具</code></li><li>在开发人员工具中点左上角的<code>选择检查</code>按钮，再点击需要保存的PDF图片，就会出现以下的内容</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202102191512.jpg"></p><ol start="3"><li>双击<code>图片链接</code>然后复制 -&gt; 新建页面粘贴图片链接访问，即可右击保存图片</li></ol><h2 id="0x003：文字无法复制"><a href="#0x003：文字无法复制" class="headerlink" title="0x003：文字无法复制"></a>0x003：文字无法复制</h2><h4 id="提取文字复制"><a href="#提取文字复制" class="headerlink" title="提取文字复制"></a>提取文字复制</h4><ul><li>可以用QQ自带的截图，按快捷键<code>ctrl+alt+a</code>，选择要复制的那块区域后 -&gt; 点提取文字</li></ul><h3 id="源代码复制"><a href="#源代码复制" class="headerlink" title="源代码复制"></a>源代码复制</h3><ol><li>类似下图这种情况，文字内容一般在开发人员工具里都可以找到</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202102191542.jpg"></p><ol start="2"><li>和上面保存图片的操作步骤相同，<code>选择检查</code>点需要复制的那段文字后，点开<code>p左边的箭头</code>就可以在里面双击选择复制了</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202102191546.jpg"></p><h2 id="0x004：资料网站推荐"><a href="#0x004：资料网站推荐" class="headerlink" title="0x004：资料网站推荐"></a>0x004：资料网站推荐</h2><p><strong>iData-知识检索：</strong><a href="https://www.cn-ki.net/">https://www.cn-ki.net/</a></p><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/12cf3b04.html">https://www.cjlblog.vip/posts/12cf3b04.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> 实用篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬取新浪新闻</title>
      <link href="posts/87f2959f.html"/>
      <url>posts/87f2959f.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x001：效果展示"><a href="#0x001：效果展示" class="headerlink" title="0x001：效果展示"></a>0x001：效果展示</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202103011607.jpg" alt="效果展示"></p><h2 id="0x002：先安装需要使用的第三方库"><a href="#0x002：先安装需要使用的第三方库" class="headerlink" title="0x002：先安装需要使用的第三方库"></a>0x002：先安装需要使用的第三方库</h2><h4 id="requests库"><a href="#requests库" class="headerlink" title="requests库"></a>requests库</h4><ul><li><p>requests是python实现的简单易用的HTTP库，但因为是第三方库，所以使用前需要先安装(如果用的是Anaconda则不用安装)，安装方法：</p><blockquote><p>pip install requests</p></blockquote></li><li><p>安装完成后，使用<code>import requests</code>导入该库测试一下，若没有报错则为安装成功</p></li></ul><h3 id="bs4库"><a href="#bs4库" class="headerlink" title="bs4库"></a>bs4库</h3><ul><li><p>BS4全称是BeatifulSoup，它提供一些简单的、python式的函数用来处理导航、搜索、修改分析树等功能，但因为是第三方库，所以使用前需要先安装(如果用的是Anaconda则不用安装)，安装方法：</p><blockquote><p>pip install bs4</p></blockquote></li><li><p>安装完成后，使用<code>import bs4</code>导入该库测试一下，若没有报错则为安装成功</p></li></ul><h2 id="0x003：获取最新新闻列表"><a href="#0x003：获取最新新闻列表" class="headerlink" title="0x003：获取最新新闻列表"></a>0x003：获取最新新闻列表</h2><ol><li>进入新浪国际新闻页面 -&gt; <a href="https://news.sina.com.cn/world/">https://news.sina.com.cn/world/</a><br>进入页面后<code>鼠标右击点检查</code>(或<code>按快捷键F12</code>)打开开发人员工具，然后点击<code>Network(网络)</code>，最后刷新一下页面，刷新后如图所示：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202102021256.jpg" alt="发现world文件"></li><li>点击<code>world</code>文件 -&gt; 点击<code>Headers(标头)</code>，通过查看<code>Request Method(请求方法)</code>发现该网页使用的是GET，复制该URL<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202102021315.jpg" alt="请求方法为GET"></li><li>利用<code>requests库</code>获取world文件的响应数据<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests <span class="token comment" spellcheck="true">#导入requests库</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://news.sina.com.cn/world/'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#使用get请求方式</span>res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>  <span class="token comment" spellcheck="true">#把编码改为utf-8</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#以文本形式输出</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="获取新闻的标题、日期和链接"><a href="#获取新闻的标题、日期和链接" class="headerlink" title="获取新闻的标题、日期和链接"></a>获取新闻的标题、日期和链接</h4><ol><li>在开发人员工具里，先点击左上角的<code>选择检查图标</code>，后点击页面上新闻的标题，在<code>Elements(元素)</code>里会自动定位到当前标题所在的位置，如图所示：<br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202102021752.jpg" alt="获取标题所在位置"></li><li>通过上图可以看出，新闻的标题是在<code>news-item下的h2</code>内</li><li>利用<code>bs4库</code>里的BeautifulSoup获取新闻的标题<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoupres <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://news.sina.com.cn/world/'</span><span class="token punctuation">)</span>res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#实例化soup对象</span><span class="token keyword">for</span> news <span class="token keyword">in</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'.news-item'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">#标题存放在news-item下，class对应'.'  id对应'#'</span>     <span class="token keyword">if</span> len<span class="token punctuation">(</span>news<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'h2'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#如果标题不为空</span>         <span class="token keyword">print</span><span class="token punctuation">(</span>news<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'h2'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#输出新闻的标题</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>获取日期和链接的方法和上面一样<pre class="line-numbers language-python"><code class="language-python">news<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text  <span class="token comment" spellcheck="true">#获取日期</span>news<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text     <span class="token comment" spellcheck="true">#获取链接</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h2 id="0x004：获取新闻文章内容"><a href="#0x004：获取新闻文章内容" class="headerlink" title="0x004：获取新闻文章内容"></a>0x004：获取新闻文章内容</h2><h4 id="获取文章的标题、日期、内容和作者"><a href="#获取文章的标题、日期、内容和作者" class="headerlink" title="获取文章的标题、日期、内容和作者"></a>获取文章的标题、日期、内容和作者</h4><ol><li>先随便复制一篇新闻的链接，获取方法和上面的方法相同，具体步骤不再演示<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoupres <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://news.sina.com.cn/w/2021-02-07/doc-ikftssap4647063.shtml'</span><span class="token punctuation">)</span>res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span>soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'.main-title'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text  <span class="token comment" spellcheck="true">#获取标题</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>获取日期和链接的方法和上面一样<pre class="line-numbers language-python"><code class="language-python">soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'.date'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text  <span class="token comment" spellcheck="true">#获取日期</span><span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>p<span class="token punctuation">.</span>text<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> p <span class="token keyword">in</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'#article p'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  #获取内容soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'.show_author'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text<span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token string">"责任编辑："</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#获取作者</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="0x005：代码汇总"><a href="#0x005：代码汇总" class="headerlink" title="0x005：代码汇总"></a>0x005：代码汇总</h2><ul><li>综合以上内容，将新闻的标题、日期和链接等等，代码如下：<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoupres <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://news.sina.com.cn/world/'</span><span class="token punctuation">)</span>res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span><span class="token keyword">for</span> news <span class="token keyword">in</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'.news-item'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> len<span class="token punctuation">(</span>news<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'h2'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>         title <span class="token operator">=</span> news<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'h2'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text         time <span class="token operator">=</span> news<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'.time'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text         links <span class="token operator">=</span> news<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span>         <span class="token keyword">print</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span><span class="token string">"| 发布日期："</span><span class="token punctuation">,</span> time<span class="token punctuation">,</span> <span class="token string">"| 文章链接：\n"</span><span class="token punctuation">,</span> links<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">newsArticles</span><span class="token punctuation">(</span>newsurl<span class="token punctuation">)</span><span class="token punctuation">:</span>     result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>     res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>newsurl<span class="token punctuation">)</span>     res<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>     soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">'html.parser'</span><span class="token punctuation">)</span>     result<span class="token punctuation">[</span><span class="token string">'标题'</span><span class="token punctuation">]</span> <span class="token operator">=</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'.main-title'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text     result<span class="token punctuation">[</span><span class="token string">'时间'</span><span class="token punctuation">]</span> <span class="token operator">=</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'.date'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text     result<span class="token punctuation">[</span><span class="token string">'正文'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>p<span class="token punctuation">.</span>text<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> p <span class="token keyword">in</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'#article p'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>     result<span class="token punctuation">[</span><span class="token string">'作者'</span><span class="token punctuation">]</span> <span class="token operator">=</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'.show_author'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text<span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token string">"责任编辑："</span><span class="token punctuation">)</span>     <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li> 先运行上面的代码获取最新新闻列表的标题、日期和链接，再复制自己想要查看的新闻对应的链接，调用方法：<pre class="line-numbers language-python"><code class="language-python">newsArticles<span class="token punctuation">(</span><span class="token string">'文章链接'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/87f2959f.html">https://www.cjlblog.vip/posts/87f2959f.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> Python篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda安装教程</title>
      <link href="posts/692adf87.html"/>
      <url>posts/692adf87.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x001：下载Anaconda"><a href="#0x001：下载Anaconda" class="headerlink" title="0x001：下载Anaconda"></a>0x001：下载Anaconda</h2><ol><li>在官网下载Anaconda：<a href="https://www.anaconda.com/products/individual#windows">点击下载</a>，进入后向下滑找到<code>Anaconda Installers</code>或点击页面上的<code>Download</code>直接跳转到<code>Anaconda Installers</code><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202101211335.jpg" alt="官网下载"></li><li>也可以在我分享的百度网盘链接中下载，我的是Python3.8.8版本：<a href="https://pan.baidu.com/s/1hMW5sknpIJ8mK7hrrLLhJQ">点击下载</a><br>提取码：lkr6</li><li>完成下载之后，双击下载文件，启动exe安装程序</li></ol><h2 id="0x002：安装Anaconda"><a href="#0x002：安装Anaconda" class="headerlink" title="0x002：安装Anaconda"></a>0x002：安装Anaconda</h2><ol><li>启动安装程序后，点击<code>Next</code> -&gt; 点击<code>I Agree</code> -&gt; 默认选择<code>Just Me</code>(如果是为所有用户安装，则选All Users，需要管理员权限)，<code>Next</code></li><li>在<code>Choose Install Location</code>界面中选择你安装Anaconda的目标路径(路径最好全英文)，然后点击<code>Next</code></li><li>在<code>Advanced lnstallation Options</code>界面中只勾选第二个，因为勾选第一个选项配置环境容易出错，且出错后卸载很麻烦，所以安装后自己配置环境变量，然后点击<code>Insatll</code><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202101211337.jpg" alt="只勾选第二项"></li><li>等待安装完成后，点<code>Next</code> -&gt; 点<code>finish</code>(两个选项是否勾选无所谓，我没勾选)</li></ol><h2 id="0x003：配置环境变量"><a href="#0x003：配置环境变量" class="headerlink" title="0x003：配置环境变量"></a>0x003：配置环境变量</h2><p>D:\Anaconda<br>D:\Anaconda\Scripts<br>D:\Anaconda\Library\bin<br>D:\Anaconda\Library\mingw-w64\bin<br><code>以上路径仅供参考，实际路径填自己Anaconda的安装路径</code><br><strong>具体步骤：右击<code>此电脑</code> -&gt;点 <code>属性</code> -&gt; <code>高级系统设置</code> -&gt; <code>环境变量</code> -&gt; 在系统变量里找到<code>path</code> -&gt; 添加以上几个路径</strong></p><ul><li>完成后可以在终端输入<code>python</code>测试一下</li></ul><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/692adf87.html">https://www.cjlblog.vip/posts/692adf87.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> Python篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C4droid安装教程</title>
      <link href="posts/51c2a5ad.html"/>
      <url>posts/51c2a5ad.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x001：C4droid简介"><a href="#0x001：C4droid简介" class="headerlink" title="0x001：C4droid简介"></a>0x001：C4droid简介</h2><ol><li>手机(Android)上C/C++的IDE/编译器</li><li>便携，功能强大；足以满足初学者平时的练习</li><li>汉化版—-更易理解和使用</li></ol><h2 id="0x002：C4droid下载"><a href="#0x002：C4droid下载" class="headerlink" title="0x002：C4droid下载"></a>0x002：C4droid下载</h2><ol><li>在这个百度网盘链接中下载：<a href="https://pan.baidu.com/s/1oUSwo12oZkf6Q2MCzKrgfQ">点击下载</a><br> 提取码：sqxy </li><li>下载后安装这三个软件(C4droid是编译器，GCC和SDL是所需插件)</li></ol><h2 id="0x003：C4droid安装"><a href="#0x003：C4droid安装" class="headerlink" title="0x003：C4droid安装"></a>0x003：C4droid安装</h2><ol><li>点击进入软件，选择以下内容(也可全选)，然后点击内部安装即可<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/2020102917072325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDkxODE5,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>点击右上角的三个点；点击设置；选择编译器；如果是<code>编译C就选GCC</code>，如果<code>编译C++就选G++</code><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201029171341781.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDkxODE5,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li></ol><h2 id="0x004：C4droid运行"><a href="#0x004：C4droid运行" class="headerlink" title="0x004：C4droid运行"></a>0x004：C4droid运行</h2><ol><li><p>自行写代码进行测试(也可直接复制以下代码)</p><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>点击编译，编译成功后点击运行即可。注：可在手机根目录创建一个专门的文件夹来存放C/C++程序，方便以后直接打开，重要代码写完记得点保存！<img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://img-blog.csdnimg.cn/20201029172159892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MDkxODE5,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></li><li><p>至此就可正常运行代码了，其他的个性设置如：主题、字体、字体大小等等自行修改</p></li></ol><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/51c2a5ad.html">https://www.cjlblog.vip/posts/51c2a5ad.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> C语言篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++编译器 </tag>
            
            <tag> IDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL常用的命令</title>
      <link href="posts/92cd9797.html"/>
      <url>posts/92cd9797.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x001-连接相关"><a href="#0x001-连接相关" class="headerlink" title="0x001: 连接相关"></a>0x001: 连接相关</h2><ul><li><p>连接本地MySQL</p><blockquote><p><code>mysql -u用户名 -p密码</code></p><blockquote><p>例如：<br><code>mysql -uroot -proot</code></p></blockquote></blockquote></li><li><p>连接远程MySQL</p><blockquote><p><code>mysql -h主机地址 -P端口 -u用户名 -p密码</code></p><blockquote><p>例如：<br><code>mysql -h127.0.0.1 -p3306 -uroot -proot</code></p></blockquote></blockquote></li></ul><hr><h2 id="0x002-用户相关"><a href="#0x002-用户相关" class="headerlink" title="0x002: 用户相关"></a>0x002: 用户相关</h2><ul><li><p>创建用户</p><blockquote><p><code>create user '用户名'@'IP地址' identified by '密码';</code></p><blockquote><p>例如：<br><code>create user 'root'@'127.0.0.1' identified by 'root';</code></p></blockquote></blockquote></li><li><p>删除用户</p><blockquote><p><code>drop user '用户名'@'IP地址';</code></p><blockquote><p>例如：<br><code>drop user 'root'@'127.0.0.1';</code></p></blockquote></blockquote></li><li><p>修改用户名</p><blockquote><p><code>rename user '用户名'@'IP地址'; to '新用户名'@'IP地址';;</code></p><blockquote><p>例如：<br><code>rename user 'root'@'127.0.0.1'; to 'root1'@'127.0.0.2';;</code></p></blockquote></blockquote></li><li><p>修改密码</p><blockquote><p><code>set password for '用户名'@'IP地址' = Password('新密码');</code></p><blockquote><p>例如：<br><code>set password for 'root'@'127.0.0.1' = Password('123');</code></p></blockquote></blockquote></li><li><p>查看用户</p><blockquote><p><code>select user,host from mysql.user;</code></p></blockquote></li></ul><hr><h2 id="0x003-授权相关"><a href="#0x003-授权相关" class="headerlink" title="0x003: 授权相关"></a>0x003: 授权相关</h2><ul><li><p>查看用户权限</p><blockquote><p><code>show grants for '用户名'@'IP地址';</code></p><blockquote><p>例如：<br><code>show grants for 'root'@'127.0.0.1';</code></p></blockquote></blockquote></li><li><p>对用户授权</p><blockquote><p><code>grant 权限 on 数据库名.表名 to '用户名'@'IP地址';</code></p><blockquote><p>常用的权限：<br>select -&gt; 查找权限<br>insert -&gt; 添加权限<br>update -&gt; 更新权限<br>all privileges -&gt; 所有权限(除授权权限外)</p><blockquote><p>例如：<br><code>grant select on text.text_table to 'root'@'127.0.0.1';</code></p></blockquote></blockquote></blockquote></li><li><p>取消授权</p><blockquote><p><code>revoke 权限 on 数据库名.表名 from '用户名'@'IP地址';</code></p><blockquote><p>例如：<br><code>revoke select on text.text_table from 'root'@'127.0.0.1';</code></p></blockquote></blockquote></li></ul><hr><h2 id="0x004-数据库相关"><a href="#0x004-数据库相关" class="headerlink" title="0x004: 数据库相关"></a>0x004: 数据库相关</h2><ul><li><p>查看数据库</p><blockquote><p><code>show databases;</code></p></blockquote></li><li><p>调用数据库</p><blockquote><p><code>use 数据库名;</code></p></blockquote></li><li><p>查看该库内的表</p><blockquote><p><code>show tables;</code></p></blockquote></li><li><p>查看表的内容</p><blockquote><p><code>select * from 表名;</code></p></blockquote></li><li><p>查看当前处于的库</p><blockquote><p><code>select database();</code></p></blockquote></li><li><p>查看其它库的表</p><blockquote><p><code>show tables from 数据库名;</code></p></blockquote></li><li><p>新建数据库</p><blockquote><p><code>create database 库名 default charset utf8;</code></p><blockquote><p>例如：<br><code>create database class default charset utf8;</code></p></blockquote></blockquote></li><li><p>删除数据库</p><blockquote><p><code>drop database 库名;</code></p><blockquote><p>例如：<br><code>drop database class;</code></p></blockquote></blockquote></li><li><p>修改数据库字符集和校对规则</p><blockquote><p><code>alter database 库名 default charset=字符集 default collate 校对规则;</code></p></blockquote></li></ul><hr><h2 id="0x005-表相关"><a href="#0x005-表相关" class="headerlink" title="0x005: 表相关"></a>0x005: 表相关</h2><ul><li>查看所有表<blockquote><p><code>show tables;</code></p></blockquote></li><li>新建表<blockquote><p><code>create table 表名(第一列名 数据类型 null或not null default 1 auto_increment primary key,第二列名 类型) default charset utf8;</code></p></blockquote></li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token number">1</span><span class="token punctuation">.</span> <span class="token punctuation">`</span>数据类型<span class="token punctuation">`</span>：    <span class="token operator">-</span> 数字类型：        <span class="token operator">-</span> 整数            <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">tinyint</span><span class="token punctuation">`</span>：短整型            <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">int</span><span class="token punctuation">`</span>：整型            <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">bigint</span><span class="token punctuation">`</span>：长整型        <span class="token operator">-</span> 小数            <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">float</span><span class="token punctuation">`</span>：单精度浮点型            <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">double</span><span class="token punctuation">`</span>：双精度浮点型            <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">decimal</span><span class="token punctuation">`</span>：不会缺失精度    <span class="token operator">-</span> 字符串型：        <span class="token operator">-</span> <span class="token punctuation">`</span>char<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">`</span>：速度快，最高<span class="token number">255</span>字符        <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">`</span>：节省空间，最高<span class="token number">255</span>字符        <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">text</span><span class="token punctuation">`</span>：最高<span class="token number">65535</span>字符    <span class="token operator">-</span> 时间类型：        <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">date</span><span class="token punctuation">`</span>：YYYY<span class="token operator">-</span>MM<span class="token operator">-</span>DD<span class="token punctuation">(</span>年<span class="token operator">-</span>月<span class="token operator">-</span>日<span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token punctuation">`</span>time<span class="token punctuation">`</span>：HH:MM:SS<span class="token punctuation">(</span>时:分:秒<span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token punctuation">`</span>year<span class="token punctuation">`</span>：YYYY<span class="token punctuation">(</span>年<span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">datetime</span><span class="token punctuation">`</span>：YYYY<span class="token operator">-</span>MM<span class="token operator">-</span>DD HH:MM:SS        <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">timestamp</span><span class="token punctuation">`</span>：YYYYMMDD HHMMSS    <span class="token operator">-</span> 枚举类型：        <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">enum</span><span class="token punctuation">`</span>：只能输入特定的值        <span class="token operator">-</span> 例如：            <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">enum</span><span class="token punctuation">(</span><span class="token string">'123'</span><span class="token punctuation">,</span> <span class="token string">'一二三'</span><span class="token punctuation">,</span> <span class="token string">'①②③'</span><span class="token punctuation">)</span><span class="token punctuation">`</span>            <span class="token operator">-</span> 此时就只能输入这三个中的其中一个    <span class="token operator">-</span> 集合类型：        <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">set</span><span class="token punctuation">`</span>：可以输入多个特定的值        <span class="token operator">-</span> 例如：            <span class="token operator">-</span> <span class="token punctuation">`</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'123'</span><span class="token punctuation">,</span> <span class="token string">'一二三'</span><span class="token punctuation">,</span> <span class="token string">'①②③'</span><span class="token punctuation">,</span> <span class="token string">'abc'</span><span class="token punctuation">,</span> <span class="token string">'ABC'</span><span class="token punctuation">)</span><span class="token punctuation">`</span>            <span class="token operator">-</span> 此时就可以输入这五个中的多个<span class="token number">2</span><span class="token punctuation">.</span> <span class="token punctuation">`</span><span class="token boolean">null</span>或<span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">`</span>：是否可以为空<span class="token number">3</span><span class="token punctuation">.</span> <span class="token punctuation">`</span><span class="token keyword">default</span> <span class="token number">1</span><span class="token punctuation">`</span>：默认值为<span class="token number">1</span><span class="token number">4</span><span class="token punctuation">.</span> <span class="token punctuation">`</span><span class="token keyword">auto_increment</span><span class="token punctuation">`</span>：自增值，一个表里有且只能有一个自增列<span class="token number">5</span><span class="token punctuation">.</span> <span class="token punctuation">`</span><span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">`</span>：约束<span class="token punctuation">(</span>不能重复且不能为空<span class="token punctuation">)</span>，加速查找<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>例如：创建一个第一列列名为id、类型为整型表格不能为空，并设置为自增列；第二列列名为name，类型为可以储存10个字符的字符串型；字符集为utf8。</p><blockquote><p><code>create table class(id int not null auto_increment primary key, name char(10)) default charset=utf8;</code></p></blockquote></blockquote><h4 id="增："><a href="#增：" class="headerlink" title="增："></a>增：</h4><ul><li><p>向表里添加内容</p><blockquote><p><code>insert into 表名(列名) values(内容);</code></p></blockquote></li><li><p>为表添加新列</p><blockquote><p><code>alter table 表名 add 列名 类型 after 列名;</code></p></blockquote></li></ul><h3 id="删："><a href="#删：" class="headerlink" title="删："></a>删：</h3><ul><li>删除指定行<blockquote><p><code>delete from 表名 where 范围;</code></p></blockquote></li><li>删除指定列<blockquote><p><code>alter table 表名 drop 列名;</code></p></blockquote></li><li>删除列的默认值<blockquote><p><code>alter table 表名 alter 列名 drop default;</code></p></blockquote></li><li>删除表全部内容<blockquote><p><code>delete from 表名;</code><br><code>truncate table 表名;</code></p></blockquote></li><li>删除整个表<blockquote><p><code>drop table 表名;</code></p></blockquote></li></ul><h3 id="改："><a href="#改：" class="headerlink" title="改："></a>改：</h3><ul><li>修改表名<blockquote><p><code>alter table 旧表名 rename to 新表名;</code></p></blockquote></li><li>修改内容<blockquote><p><code>update 表名 set 列名="值";</code><br><code>update 表名 set 列名="值" where 列名="值";</code></p></blockquote></li><li>修改初始自增值<blockquote><p><code>alter table 表名 auto_increment=1;</code></p></blockquote></li><li>修改自增值步长<blockquote><p><code>set session auto_increment_increment=值;</code></p></blockquote></li><li>修改列的默认值<blockquote><p><code>alter table 表名 alter 列名 set default 默认值;</code></p></blockquote></li><li>修改列名<blockquote><p><code>alter table 表名 change 旧列名 新列名 类型;</code></p></blockquote></li></ul><h3 id="查："><a href="#查：" class="headerlink" title="查："></a>查：</h3><ul><li>查看表自增值的步长和变量<blockquote><p><code>show session variables like 'auto_inc%';</code>  </p></blockquote></li><li>查看内容<blockquote><p><code>select 范围 from 表名;</code></p></blockquote></li><li>查看多表的内容<blockquote><p><code>select 表名.列名,表名.列名 from 表名,表名 where 条件;</code></p></blockquote></li><li>查看列的所有类型<blockquote><p><code>desc 表名;</code></p></blockquote></li><li>查看表是怎样创建的<blockquote><p><code>show create table 表名;</code></p></blockquote></li></ul><h3 id="复制："><a href="#复制：" class="headerlink" title="复制："></a>复制：</h3><ul><li>复制表内容<blockquote><p><code>create table 新表名 as (select * from 旧表名);</code></p></blockquote></li><li>复制表结构<blockquote><p><code>create table 新表名 like 旧表名;</code></p></blockquote></li></ul><h3 id="解决中文编码错误"><a href="#解决中文编码错误" class="headerlink" title="解决中文编码错误"></a>解决中文编码错误</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true"># 查看数据库字符编码：</span><span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">'char%'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 将数据库编码统一设为gbk：</span><span class="token keyword">set</span> character_set_<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token operator">=</span> <span class="token string">'gbk'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 修改数据表编码：</span><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">modify</span> 列名 <span class="token keyword">varchar</span><span class="token punctuation">(</span>字节<span class="token punctuation">)</span> <span class="token keyword">character set</span> gbk<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/92cd9797.html">https://www.cjlblog.vip/posts/92cd9797.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="https://cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL的安装和卸载</title>
      <link href="posts/b227e9c7.html"/>
      <url>posts/b227e9c7.html</url>
      
        <content type="html"><![CDATA[<h4 id="0x001：MySQL产品的安装"><a href="#0x001：MySQL产品的安装" class="headerlink" title="0x001：MySQL产品的安装"></a>0x001：MySQL产品的安装</h4><ol><li>进入官网下载MySQL的免安装zip压缩包：<a href="https://dev.mysql.com/downloads/mysql/">点击进入</a><br><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://cdn.jsdelivr.net/gh/chenjialinhen6/picgo-images/blog-posts/202101191054.jpg" alt="MySQL免安装下载"></li><li>在<code>环境变量</code>里添加你mysql<code>bin目录</code>所在的路径<br>D:\MySQL\mysql-8.0.23-win64\bin<br><code>以上路径仅供参考，实际路径填自己mysql的目标路径</code></li></ol><p><strong>具体步骤：右击<code>此电脑</code> -&gt;点 <code>属性</code> -&gt; <code>高级系统设置</code> -&gt; <code>环境变量</code> -&gt; 在系统变量里找到<code>pash</code> -&gt; 添加你MySQL的bin路径</strong></p><ol start="3"><li>在mysql的目录里新建<code>my.ini</code>文件并把以下代码添加进该文件中，文件的编码最好是用<code>ANSI</code>避免后期配置安装中出错<pre class="line-numbers language-ini"><code class="language-ini"><span class="token selector">[mysql]</span># 设置mysql客户端默认字符集<span class="token constant">default-character-set</span><span class="token attr-value"><span class="token punctuation">=</span>utf8</span><span class="token selector">[mysqld]</span>#设置3306端口<span class="token constant">port</span> <span class="token attr-value"><span class="token punctuation">=</span> 3306</span># 设置mysql的安装目录<span class="token constant">basedir</span><span class="token attr-value"><span class="token punctuation">=</span>D:\MySQL\mysql-8.0.22-winx64</span># 设置mysql数据库的数据的存放目录D:\MySQL\mysql-8.0.22-winx64\data# 允许最大连接数<span class="token constant">max_connections</span><span class="token attr-value"><span class="token punctuation">=</span>200</span># 服务端使用的字符集默认为8比特编码的latin1字符集<span class="token constant">character-set-server</span><span class="token attr-value"><span class="token punctuation">=</span>utf8</span># 创建新表时将使用的默认存储引擎<span class="token constant">default-storage-engine</span><span class="token attr-value"><span class="token punctuation">=</span>INNODB</span># 其登录时跳过权限检查skip_grant_tables<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>以<code>管理员身份</code>运行<code>命令提示符</code>，并运行命令：<code>mysqld --install</code>安装MySQL服务，若出现<code>Service successfully installed.</code>证明安装成功</li><li>接着运行命令：<code>mysqld --initialize --console</code>初始化MySQL，命令执行后在最后<code>localhost:</code>后面的内容为初始密码</li><li>继续运行命令：<code>net start mysql</code>开启MySQL服务</li><li>然后运行<code>mysql -uroot -p</code>，在<code>Enter password:</code>后输入初始密码(就是上面所说的<code>localhost</code>后面的密码)，登入MySQL验证是否成功</li><li>最后运行<code>alter user 'root'@'localhost' identified by '新密码';</code>修改初始密码</li></ol><hr><h4 id="0x002：MySQL产品的卸载"><a href="#0x002：MySQL产品的卸载" class="headerlink" title="0x002：MySQL产品的卸载"></a>0x002：MySQL产品的卸载</h4><ol><li>暂停MySQL服务<ul><li>计算机 -&gt; 管理 -&gt; 服务 -&gt; MySQL服务 -&gt; 停止 (或直接执行命令<code>net stop mysql</code>)</li></ul></li><li>删除MySQL所在的文件夹</li><li>清除残留文件<ul><li>如果没有选择数据目录的话，默认在<code>C:\ProgramData\mysql</code></li><li><code>ProgramData</code>文件夹默认是隐藏的，点击显示<code>隐藏的项目</code>就OK了</li></ul></li></ol><ul><li>清理<code>ProgramData</code>里<code>mysql</code>的残留文件时，注意备份数据库的数据</li></ul><hr><h4 id="0x003：MySQL产品的重装"><a href="#0x003：MySQL产品的重装" class="headerlink" title="0x003：MySQL产品的重装"></a>0x003：MySQL产品的重装</h4><ol><li>先卸载原有的MySQL产品，然后直接下载新版的MySQL</li></ol><p><strong><em>如果卸载后重装失败，则继续进行以下操作</em></strong><br>2. 清理注册表：快捷键<code>win+r</code>输入<code>regedit</code>进入注册表，如果在注册表里找不到就不用删了<br>    1. HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Eventlog\Application\MysQL  目录删除<br>    2. HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Services\Eventlog\Application\MySQL  目录删除<br>    3. HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application\MysQL 目录删除<br>    4. HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\MySQL  目录删除<br>    5. HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Services\MySQL  目录删除<br>    6. HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\MySQL 目录删除</p><ul><li>注册表中的ControlSet001,ControlSet002,不一定是001和002,也可能是ControlSet005、006之类的</li></ul><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/b227e9c7.html">https://www.cjlblog.vip/posts/b227e9c7.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建个人博客</title>
      <link href="posts/ec7d7221.html"/>
      <url>posts/ec7d7221.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x001-效果演示"><a href="#0x001-效果演示" class="headerlink" title="0x001 效果演示"></a>0x001 效果演示</h2><hr><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://s2.ax1x.com/2020/03/11/8E3bBF.png" alt="演示Demo"></p><p align="center">我是'大自然'的搬运工，本文原创作者： Luckyzmj</p><p></p><h2 id="0x002-简单介绍"><a href="#0x002-简单介绍" class="headerlink" title="0x002 简单介绍"></a>0x002 简单介绍</h2><hr><p>  前前后后大概花了一周多的时间，目前个人博客已经完善的差不多了，现在写个文章做个阶段总结，后续如果有更新的地方，会及时补充。本博客基于Hexo框架，采用<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">hexo-theme-matery</a>主题，在这里非常感谢作者<code>洪卫</code>的<a href="https://github.com/shw2018/hexo-blog-fly.git">hexo-blog-fly</a>博客开源，极大简化了构建博客的工作量和复杂度。在此开源博客的基础上做了改进，修复了一些bug，顺利搭建完成了我的个人博客。大家对此主题有兴趣的可以<a href="https://github.com/shw2018/hexo-blog-fly">下载源代码</a>，搭建属于自己的个性化博客。</p><hr><h2 id="0x003-Hexo-初级搭建"><a href="#0x003-Hexo-初级搭建" class="headerlink" title="0x003 Hexo 初级搭建"></a>0x003 Hexo 初级搭建</h2><hr><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h3><p><code>Git</code>是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。<code>Git</code>的作用是将本地的网页文件传到<code>github</code>上。</p><ul><li>Git<a href="https://git-scm.com/download">下载地址</a></li><li>Git<a href="https://www.liaoxuefeng.com/wiki/896043488029600">教程</a></li></ul><p><strong>windows：</strong> 到git官网上下载.exe文件,Download git,安装选项还是全部默认，最后一步添加路径时选择<code>Use Git from the Windows Command Prompt</code>。</p><h3 id="2-安装node-js"><a href="#2-安装node-js" class="headerlink" title="2. 安装node.js"></a>2. 安装node.js</h3><p><code>Hexo</code>是基于<code>node.js</code>编写的，所以需要安装一下<code>node.js</code>和里面的<code>npm</code>工具。</p><p><strong>windows：</strong> 到<a href="http://nodejs.cn/download/">Node.js官网</a>下载<code>.exe</code>文件，安装选项全部默认。安装好之后，按<code>Win+R</code>打开cmd命令提示符，输入<code>node -v</code>和<code>npm -v</code>，若出现版本号，则说明安装成功。</p><h3 id="3-添加npm国内源"><a href="#3-添加npm国内源" class="headerlink" title="3. 添加npm国内源"></a>3. 添加npm国内源</h3><p>使用阿里的国内镜像进行加速下载</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token keyword">set</span> registry https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h3><p>前面<code>git</code>和<code>nodejs</code>安装好后，就可以安装<code>hexo</code>了，你可以先创建一个文件夹<code>MyBlog</code>，用来存放自己的博客文件，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键<code>git bash</code>打开）。</p><p>比如我的博客文件都存放在<code>E:\MyBlog</code>目录下。</p><p>在该目录下右键点击<code>Git Bash Here</code>，打开<code>git</code>的控制台窗口，以后我们所有的操作都在<code>git</code>控制台进行，就不用<code>Windows</code>自带的<code>cmd</code>了。</p><p>定位到该目录下，输入<code>npm install -g hexo-cli</code>安装<code>Hexo</code>。可能会有几个报错，不用理会。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完后输入<code>hexo -v</code>验证是否安装成功。</p><p>到此为止<code>hexo</code>就安装完了。</p><p>接下来初始化一下<code>hexo</code>,即初始化我们的网站，输入<code>hexo init</code>初始化文件夹</p><pre class="line-numbers language-bash"><code class="language-bash">hexo init MyBlog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新建完成后，指定文件夹<code>MyBlog</code>目录下有：</p><ul><li><code>node_modules</code>: 依赖包</li><li><code>public</code>：存放生成的页面</li><li><code>scaffolds</code>：生成文章的一些模板</li><li><code>source</code>：用来存放你的文章</li><li><code>themes</code>：主题**</li><li><code>_config.yml</code>: 博客的配置文件**</li></ul><p>到此为止，本地的网站配置完成了。</p><p>输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>打开本地服务器</p><pre class="line-numbers language-bash"><code class="language-bash">hexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://s1.ax1x.com/2020/03/12/8VdlGD.png"></p><h3 id="5-注册Github账号创建个人仓库"><a href="#5-注册Github账号创建个人仓库" class="headerlink" title="5. 注册Github账号创建个人仓库"></a>5. 注册Github账号创建个人仓库</h3><p>接下来就去注册一个<code>github</code>账号，用来存放我们的网站。</p><p>打开<a href="https://github.com/">https://github.com/</a>，新建一个项目仓库<code>New repository</code>，如下所示：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://s1.ax1x.com/2020/03/12/8VwrtK.png"></p><p>然后如下图所示，输入自己的项目名字，后面一定要加<code>.github.io</code>后缀，README初始化也要勾上</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://s1.ax1x.com/2020/03/12/8VdoQJ.png"></p><blockquote><p>要创建一个和你用户名相同的仓库，后面加<code>.github.io</code>，只有这样，将来要部署到<code>GitHub page</code>的时候，才会被识别，也就是<code>http://xxxx.github.io</code>，其中xxx就是你注册<code>GitHub</code>的用户名。例如我的：<code>http://LuckyZmj.github.io</code></p></blockquote><h3 id="6-生成SSH添加到GitHub"><a href="#6-生成SSH添加到GitHub" class="headerlink" title="6. 生成SSH添加到GitHub"></a>6. 生成SSH添加到GitHub</h3><p>生成<code>SSH</code>添加到<code>GitHub</code>，连接<code>Github</code>与本地。<br>右键打开<code>git bash here</code>，然后输入下面命令：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token string">"注册GitHub用户名"</span><span class="token function">git</span> config --global user.email <span class="token string">"注册GitHub的邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>用以下两条，检查一下你有没有输对</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config user.name<span class="token function">git</span> config user.email<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后创建<code>SSH</code>,一路回车</p><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"注册GitHub的邮箱"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个时候它会告诉你已经生成了<code>.ssh</code>的文件夹。在<code>git bash</code>中输入</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将输出的内容复制到框中，点击确定保存。</p><p>打开<code>github</code>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个<code>SSH</code>，名字随便取一个都可以，把你的<code>id_rsa.pub</code>里面的信息复制进去。如图：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://s1.ax1x.com/2020/03/12/8Vwnyj.png"></p><p>在<code>git bash</code>输入<code>ssh -T git@github.com</code>，如果如下图所示，出现你的用户名，那就成功了。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="7-将hexo部署到GitHub"><a href="#7-将hexo部署到GitHub" class="headerlink" title="7. 将hexo部署到GitHub"></a>7. 将hexo部署到GitHub</h3><p>将<code>hexo</code>生成的文章部署到<code>GitHub</code>上，打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。<br>找到如下配置进行修改：</p><pre class="line-numbers language-bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repository: https://github.com/LuckyZmj/LuckyZmj.github.io  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>repository</code>修改为你自己的<code>github</code>项目地址即可，就是部署时，告诉工具，将生成网页通过<code>git</code>方式上传到你对应的链接仓库中。</p><p>这个时候需要先安装<code>deploy-git</code> ，也就是部署的命令,这样你才能用命令部署到<code>GitHub</code>。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后就可以部署提交到<code>github</code>，过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了</p><pre class="line-numbers language-bash"><code class="language-bash">hexo cleanhexo generatehexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中 <code>hexo clean</code>清除了你之前生成的东西。 <code>hexo generate</code>，生成静态文章，可以用 <code>hexo g</code>缩写 ，<code>hexo deploy</code>部署文章，可以用<code>hexo d</code>缩写</p><blockquote><p>注意<code>deploy</code>时可能要你输入<code>username</code>和<code>password</code>。</p></blockquote><h3 id="8-写文章和发布文章"><a href="#8-写文章和发布文章" class="headerlink" title="8. 写文章和发布文章"></a>8. 写文章和发布文章</h3><p>首先在博客根目录下右键打开<code>git bash here</code>，安装一个扩展<code>npm i hexo-deployer-git</code>。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后输入<code>hexo new post "article title"</code>，新建一篇文章。</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new post <span class="token string">"article title"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后打开<code>E:\MyBlog\source\_posts</code>的目录，可以发现下面多了一个文件夹和一个<code>.md</code>文件，一个用来存放你的图片等数据，另一个就是你的文章文件。</p><p>另外推荐直接使用<code>有道云</code>编写<code>markdown</code>文章，不仅可以实时预览，还可以快捷的生成<code>markdown</code>语法格式，具体效果如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="https://s1.ax1x.com/2020/03/12/8VwItf.png" alt="有道云"></p><p>编写完<code>markdown</code>文件后，根目录下输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>可以本地预览效果，最后输入<code>hexo d</code>上传到<code>github</code>上。这时打开你的<code>github.io</code>主页就能看到发布的文章了。</p><p>到此为止，<code>Hexo</code>初级搭建就已经完成了。</p><h2 id="0x004-Hexo-优化定制"><a href="#0x004-Hexo-优化定制" class="headerlink" title="0x004 Hexo 优化定制"></a>0x004 Hexo 优化定制</h2><hr><h3 id="1-Hexo相关目录文件"><a href="#1-Hexo相关目录文件" class="headerlink" title="1. Hexo相关目录文件"></a>1. Hexo相关目录文件</h3><h4 id="1-1-博客目录构成介绍"><a href="#1-1-博客目录构成介绍" class="headerlink" title="1.1 博客目录构成介绍"></a>1.1 博客目录构成介绍</h4><p><code>node_modules</code>是<code>node.js</code>各种库的目录，<code>public</code>是生成的网页文件目录，<code>scaffolds</code>里面就三个文件，存储着新文章和新页面的初始设置，<code>source</code>是我们最常用到的一个目录，里面存放着文章、各类页面、图像等文件，<code>themes</code>存放着主题文件，一般也用不到。</p><p>我们平时写文章只需要关注<code>source/_posts</code>这个文件夹就行了。</p><pre class="line-numbers language-bash"><code class="language-bash">- node_modules- public- scaffolds- <span class="token function">source</span>    - _data    - _posts    - about    - archives    - categories    - friends    - tags- themes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-2-hexo基本配置"><a href="#1-2-hexo基本配置" class="headerlink" title="1.2 hexo基本配置"></a>1.2 hexo基本配置</h4><p>在文件根目录下的<code>_config.yml</code>，就是整<code>个hexo</code>框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。</p><h5 id="1-2-1-网站"><a href="#1-2-1-网站" class="headerlink" title="1.2.1 网站"></a>1.2.1 网站</h5><p>参数描述<code>title</code>网站标题<code>subtitle</code>网站副标题<code>description</code>网站描述<code>author</code>您的名字<code>language</code>网站使用的语言<code>timezone</code>网站时区。<code>Hexo</code> 默认使用您电脑的时区。时区列表。比如说：<code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。</p><p>其中，<code>description</code>主要用于<code>SEO</code>，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p><h5 id="1-2-2-网址"><a href="#1-2-2-网址" class="headerlink" title="1.2.2 网址"></a>1.2.2 网址</h5><p>参数描述<code>url</code>网址<code>root</code>网站根目录 <code>permalink</code>文章的<a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a>格式<code>permalink_defaults</code>永久链接中各部分的默认值</p><p>在这里，你需要把<code>url</code>改成你的网站域名。</p><p><code>permalink</code>，也就是你生成某个文章时的那个链接格式。</p><p>比如我新建一个文章叫<code>temp.md</code>，那么这个时候他自动生成的地址就是<code>http://yoursite.com/2018/09/05/temp</code>。</p><p>以下是官方给出的示例，关于链接的变量还有很多，需要的可以去官网上查找<a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 。</p><pre class="line-numbers language-bash"><code class="language-bash">参数结果:year/:month/:day/:title       /2019/08/10/hello-world :year-:month-:day-:title.html  2019-08-10-hello-world.html :category/:titlefoo            /bar/hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-定制主题"><a href="#2-定制主题" class="headerlink" title="2. 定制主题"></a>2. 定制主题</h3><p>这里推荐作者<code>洪卫</code>的<a href="https://github.com/shw2018/hexo-blog-fly.git">hexo-blog-fly</a>博客主题，该主题是基于<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>优化的，需要把博客相关信息换成您自己的就可以部署了，极大简化了构建博客的工作量和复杂度。</p><h4 id="2-1-简单使用方法"><a href="#2-1-简单使用方法" class="headerlink" title="2.1 简单使用方法"></a>2.1 简单使用方法</h4><ol><li>安装<code>Git</code>, 安装<code>nodeJS</code>，安装<code>Hexo</code></li><li>你可以直接<code>fork</code>一份源码到你的仓库，<code>clone</code>到本地博客文件夹内</li><li>在本地博客仓库运行<code>npm i</code>命令安装依赖包</li><li>直接修改配置信息，改成自己的信息</li><li>运行命令<code>hexo clean</code>（清除生成文件），<code>hexo g</code>（生成网页）， <code>hexo s</code>（本地预览），<code>hexo d</code>（部署）</li></ol><h4 id="2-2-原主题特性"><a href="#2-2-原主题特性" class="headerlink" title="2.2 原主题特性:"></a>2.2 原主题特性:</h4><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li></ul><h4 id="2-3-新增加特性"><a href="#2-3-新增加特性" class="headerlink" title="2.3 新增加特性:"></a>2.3 新增加特性:</h4><ul><li>修改了原主题的一些很多bug</li><li>加入图片懒加载功能，在根目录配置文件开启和关闭</li><li>增加留言板功能</li><li>在关于板块,加入简历功能页</li><li>增加视听[视觉听觉影音]板块 </li><li>支持emoji表情，用markdown emoji语法书写直接生成对应的能跳跃的表情。</li><li>增加网站运行时间显示 </li><li>增加动漫模型 </li><li>整体替换Banner图片和文章特色图片</li><li>增加分类相册功能</li><li>修改了一些控件的参数</li><li>修改部分样式,比如: 文章卡片,固定高度,使其不至于因为文章摘要的长短不同导致卡片大小不一使页面布局很不美观,类似的还有友链卡片,优化了页面内容布局,视觉更整齐美观</li><li>解决首页文章列表卡片上方 border-radius圆角失效的bug</li><li>添加页面樱花飘落动效</li><li>添加鼠标点击烟花爆炸动效</li><li>加入天气接口控件</li><li>加入鼠标点击文字特效</li><li>添加页面雪花飘落动效</li><li>添加在线聊天插件</li><li>调整线聊天插件参数，使之能够随着鼠标滑动位置自适应调整</li><li>持续更新…</li></ul><hr><h4 id="2-4-切换主题"><a href="#2-4-切换主题" class="headerlink" title="2.4 切换主题"></a>2.4 切换主题</h4><p>如果想自己动手对<a href="https://github.com/blinkfox/hexo-theme-matery">hexo-theme-matery</a>优化的话，可以修改Hexo根目录下的<code> _config.yml</code>的 <code>theme</code> 的值</p><pre class="line-numbers language-bash"><code class="language-bash">theme: hexo-theme-matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>_config.yml</code> 文件的其它修改建议:</p><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 6 的倍数，如：12、18 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h4 id="2-5-新建分类-categories-页"><a href="#2-5-新建分类-categories-页" class="headerlink" title="2.5 新建分类 categories 页"></a>2.5 新建分类 categories 页</h4><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-bash"><code class="language-bash">---title: categoriesdate: 2018-09-30 17:25:30type: <span class="token string">"categories"</span>layout: <span class="token string">"categories"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-6-新建标签-tags-页"><a href="#2-6-新建标签-tags-页" class="headerlink" title="2.6 新建标签 tags 页"></a>2.6 新建标签 tags 页</h4><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-bash"><code class="language-bash">---title: tagsdate: 2018-09-30 18:23:38type: <span class="token string">"tags"</span>layout: <span class="token string">"tags"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-7-新建关于我-about-页"><a href="#2-7-新建关于我-about-页" class="headerlink" title="2.7 新建关于我 about 页"></a>2.7 新建关于我 about 页</h4><p><code>about</code> 页是用来展示关于我和我的博客信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"about"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-bash"><code class="language-bash">---title: aboutdate: 2018-09-30 17:25:30type: <span class="token string">"about"</span>layout: <span class="token string">"about"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-8-新建留言板-contact-页（可选的）"><a href="#2-8-新建留言板-contact-页（可选的）" class="headerlink" title="2.8 新建留言板 contact 页（可选的）"></a>2.8 新建留言板 contact 页（可选的）</h4><p><code>contact</code> 页是用来展示留言板信息的页面，前提是已经开启了第三方评论系统才能显示。如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-bash"><code class="language-bash">---title: contactdate: 2018-09-30 17:25:30type: <span class="token string">"contact"</span>layout: <span class="token string">"contact"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-9-新建友情链接-friends-页（可选的）"><a href="#2-9-新建友情链接-friends-页（可选的）" class="headerlink" title="2.9 新建友情链接 friends 页（可选的）"></a>2.9 新建友情链接 friends 页（可选的）</h4><p><code>friends</code> 页是用来展示友情链接信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-bash"><code class="language-bash">---title: friendsdate: 2018-12-12 21:25:30type: <span class="token string">"friends"</span>layout: <span class="token string">"friends"</span>---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token string">"avatar"</span><span class="token keyword">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span>,    <span class="token string">"name"</span><span class="token keyword">:</span> <span class="token string">"码酱"</span>,    <span class="token string">"introduction"</span><span class="token keyword">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span>,    <span class="token string">"url"</span><span class="token keyword">:</span> <span class="token string">"http://luokangyuan.com/"</span>,    <span class="token string">"title"</span><span class="token keyword">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span>    <span class="token string">"avatar"</span><span class="token keyword">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span>,    <span class="token string">"name"</span><span class="token keyword">:</span> <span class="token string">"闪烁之狐"</span>,    <span class="token string">"introduction"</span><span class="token keyword">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span>,    <span class="token string">"url"</span><span class="token keyword">:</span> <span class="token string">"https://blinkfox.github.io/"</span>,    <span class="token string">"title"</span><span class="token keyword">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span>, <span class="token punctuation">{</span>    <span class="token string">"avatar"</span><span class="token keyword">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span>,    <span class="token string">"name"</span><span class="token keyword">:</span> <span class="token string">"ja_rome"</span>,    <span class="token string">"introduction"</span><span class="token keyword">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span>,    <span class="token string">"url"</span><span class="token keyword">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span>,    <span class="token string">"title"</span><span class="token keyword">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-10-一级菜单导航配置"><a href="#2-10-一级菜单导航配置" class="headerlink" title="2.10 一级菜单导航配置"></a>2.10 一级菜单导航配置</h4><p>配置基本菜单导航的名称、路径<code>url</code>和图标<code>icon</code></p><ul><li>菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或主页) </li><li>图标<code>icon</code> 可以在<code>Font Awesome</code> 中查找</li></ul><pre class="line-numbers language-bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle  Friends:    url: /friends    icon: fas fa-address-book<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-11-二级菜单配置方法"><a href="#2-11-二级菜单配置方法" class="headerlink" title="2.11 二级菜单配置方法"></a>2.11 二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><ul><li>在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)</li><li>在<code>children</code>下创建二级菜单的 名称<code>name</code>,路径<code>url</code>和图标<code>icon</code>.</li><li>注意每个二级菜单模块前要加 -.</li><li>注意缩进格式</li></ul><pre class="line-numbers language-bash"><code class="language-bash">menu:  Index:    url: /    icon: fas fa-home  Tags:    url: /tags    icon: fas fa-tags  Categories:    url: /categories    icon: fas fa-bookmark  Archives:    url: /archives    icon: fas fa-archive  About:    url: /about    icon: fas fa-user-circle-o  Friends:    url: /friends    icon: fas fa-address-book  Medias:    icon: fas fa-list    children:      - name: Musics        url: /musics        icon: fas fa-music      - name: Movies        url: /movies        icon: fas fa-film      - name: Books        url: /books        icon: fas fa-book      - name: Galleries        url: /galleries        icon: fas fa-image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean</code> &amp;&amp; <code>hexo g</code> 重新生成博客文件。</p><h4 id="2-12-代码高亮"><a href="#2-12-代码高亮" class="headerlink" title="2.12 代码高亮"></a>2.12 代码高亮</h4><p>由于 <code>Hexo</code> 自带的代码高亮主题显示不好看，所以主题中使用到了 <code>hexo-prism-plugin</code> 的 <code>Hexo</code> 插件来做代码高亮，安装命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后，修改 <code>Hexo</code> 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class="line-numbers language-bash"><code class="language-bash">highlight:  enable: <span class="token boolean">false</span>prism_plugin:  mode: <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  theme: <span class="token string">'tomorrow'</span>  line_number: <span class="token boolean">false</span>    <span class="token comment" spellcheck="true"># default false</span>  custom_css:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>更多代码块优化详细内容请访问：<a href="http://luckyzmj.cn/posts/1b9a9e28.html">http://luckyzmj.cn/posts/1b9a9e28.html</a></p></blockquote><h4 id="2-13-搜索"><a href="#2-13-搜索" class="headerlink" title="2.13 搜索"></a>2.13 搜索</h4><p>本主题中还使用到了 <code>hexo-generator-search</code> 的 <code>Hexo</code> 插件来做内容搜索，安装命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>Hexo</code> 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-bash"><code class="language-bash">search:  path: search.xml  field: post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="2-14-文章字数统计插件（建议安装）"><a href="#2-14-文章字数统计插件（建议安装）" class="headerlink" title="2.14 文章字数统计插件（建议安装）"></a>2.14 文章字数统计插件（建议安装）</h4><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <code>hexo-wordcount</code> 插件。</p><p>安装命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="line-numbers language-bash"><code class="language-bash">postInfo:  date: <span class="token boolean">true</span>  update: <span class="token boolean">false</span>  wordCount: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 设置文章字数统计为 true.</span>  totalCount: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 设置站点文章总字数统计为 true.</span>  min2read: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 阅读时长.</span>  readCount: <span class="token boolean">false</span> <span class="token comment" spellcheck="true"># 阅读次数.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-15-添加emoji表情支持（可选的）"><a href="#2-15-添加emoji表情支持（可选的）" class="headerlink" title="2.15 添加emoji表情支持（可选的）"></a>2.15 添加emoji表情支持（可选的）</h4><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <code>hexo-filter-github-emojis</code> 的 <code>Hexo</code> 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown</code> <code>emoji</code>语法（::,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>Hexo</code> 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-bash"><code class="language-bash">githubEmojis:  enable: <span class="token boolean">true</span>  className: github-emoji  inject: <span class="token boolean">true</span>  styles:  customEmojis:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-16-添加-RSS-订阅支持（可选的）"><a href="#2-16-添加-RSS-订阅支持（可选的）" class="headerlink" title="2.16 添加 RSS 订阅支持（可选的）"></a>2.16 添加 RSS 订阅支持（可选的）</h4><p>本主题中还使用到了<code>hexo-generator-feed</code>  的 <code>Hexo</code> 插件来做 <code>RSS</code>，安装命令如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>Hexo</code> 根目录下的<code> _config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-bash"><code class="language-bash">feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: <span class="token string">' '</span>  order_by: -date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean</code> &amp;&amp; <code>hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h4 id="2-17-添加-DaoVoice-在线聊天功能（可选的）"><a href="#2-17-添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="2.17 添加 DaoVoice 在线聊天功能（可选的）"></a>2.17 添加 DaoVoice 在线聊天功能（可选的）</h4><p>前往 <code>DaoVoice</code> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h4 id="2-18-添加-Tidio-在线聊天功能（可选的）"><a href="#2-18-添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="2.18 添加 Tidio 在线聊天功能（可选的）"></a>2.18 添加 Tidio 在线聊天功能（可选的）</h4><p>前往 <code>Tidio</code> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h4 id="2-19-修改页脚"><a href="#2-19-修改页脚" class="headerlink" title="2.19 修改页脚"></a>2.19 修改页脚</h4><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h4 id="2-20-修改社交链接"><a href="#2-20-修改社交链接" class="headerlink" title="2.20 修改社交链接"></a>2.20 修改社交链接</h4><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.socialLink.github)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&lt;%<span class="token punctuation">=</span> theme.socialLink.github %<span class="token punctuation">></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <code>Font Awesome</code> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: fab fa-facebook</li><li>Twitter: fab fa-twitter</li><li>Google-plus: fab fa-google-plus</li><li>Linkedin: fab fa-linkedin</li><li>Tumblr: fab fa-tumblr</li><li>Medium: fab fa-medium</li><li>Slack: fab fa-slack</li><li>Sina Weibo: fab fa-weibo</li><li>Wechat: fab fa-weixin</li><li>QQ: fab fa-qq</li><li>Zhihu: fab fa-zhihu</li></ul><p>注意: 本主题中使用的 <code>Font Awesome</code> 版本为 5.11.0。</p><h4 id="2-21-修改打赏的二维码图片"><a href="#2-21-修改打赏的二维码图片" class="headerlink" title="2.21 修改打赏的二维码图片"></a>2.21 修改打赏的二维码图片</h4><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h4 id="2-22-配置音乐播放器（可选的）"><a href="#2-22-配置音乐播放器（可选的）" class="headerlink" title="2.22 配置音乐播放器（可选的）"></a>2.22 配置音乐播放器（可选的）</h4><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活<code>music</code>配置即可</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 是否在首页显示音乐</span>music:  enable: <span class="token boolean">true</span>  title:             <span class="token comment" spellcheck="true">#非吸底模式有效</span>    enable: <span class="token boolean">true</span>    show: 听听音乐  server: netease   <span class="token comment" spellcheck="true">#require music platform: netease, tencent, kugou, xiami, baidu</span>  type: playlist    <span class="token comment" spellcheck="true">#require song, playlist, album, search, artist</span>  id: 503838841     <span class="token comment" spellcheck="true">#require song id / playlist id / album id / search keyword</span>  fixed: <span class="token boolean">false</span>      <span class="token comment" spellcheck="true"># 开启吸底模式</span>  autoplay: <span class="token boolean">false</span>   <span class="token comment" spellcheck="true"># 是否自动播放</span>  theme: <span class="token string">'#42b983'</span>  loop: <span class="token string">'all'</span>       <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  order: <span class="token string">'random'</span>   <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  preload: <span class="token string">'auto'</span>   <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  volume: 0.7       <span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  listFolded: <span class="token boolean">true</span>  <span class="token comment" spellcheck="true"># 列表默认折叠</span>提示：    server可选netease（网易云音乐），tencent（QQ音乐），kugou（酷狗音乐），xiami（虾米音乐），baidu（百度音乐）。    type可选song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）    id获取示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，地址栏有一串数字，playlist的id即为这串数字。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-23文章-Front-matter-介绍"><a href="#2-23文章-Front-matter-介绍" class="headerlink" title="2.23文章 Front-matter 介绍"></a>2.23文章 Front-matter 介绍</h4><p><code>Front-matter</code> 选项中的所有内容均为非必填的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td>Markdown 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 _config.yml 中的 author</td><td>文章作者</td></tr><tr><td>img</td><td>featureImages 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <a href="http://xxx.com/xxx.jpg">http://xxx.com/xxx.jpg</a></td></tr><tr><td>top</td><td>true</td><td>推荐文章（文章是否置顶），如果 top 值为 true，则会作为首页推荐文章</td></tr><tr><td>cover</td><td>false</td><td>v1.0.2版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td>v1.0.2版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 password 的值，该值必须是用 SHA256 加密后的密码，防止被他人识破。前提是在主题的 config.yml 中激活了 verifyPassword 选项</td></tr><tr><td>toc</td><td>true</td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 config.yml 中激活了 toc 选项</td></tr><tr><td>mathjax</td><td>false</td><td>是否开启数学公式支持 ，本文章是否开启 mathjax，且需要在主题的 _config.yml 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><pre class="line-numbers language-bash"><code class="language-bash">注意:    如果 img 属性不填写的话，文章特色图会根据文章标题的 hashcode 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。    <span class="token function">date</span> 的值尽量保证每篇文章是唯一的，因为本主题中 Gitalk 和 Gitment 识别 <span class="token function">id</span> 是通过 <span class="token function">date</span> 的值来作为唯一标识的。    如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 _config.yml 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：开源中国在线工具、chahuo、站长工具。    您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下为文章的 <code>Front-matter</code> 示例。<br>最简示例</p><pre class="line-numbers language-bash"><code class="language-bash">---title: typora-vue-theme主题介绍date: 2018-09-07 09:25:00---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>最全示例</p><pre class="line-numbers language-bash"><code class="language-bash">---title: theme主题介绍date: 2018-09-07 09:25:00author: 赵奇img: /source/images/xxx.jpgtop: <span class="token boolean">true</span>cover: <span class="token boolean">true</span>coverImg: /images/1.jpgpassword: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92toc: <span class="token boolean">false</span>mathjax: <span class="token boolean">false</span>summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要categories: Markdowntags:  - Typora  - Markdown---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-24-自定制修改"><a href="#2-24-自定制修改" class="headerlink" title="2.24 自定制修改"></a>2.24 自定制修改</h4><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li>favicon 和 Logo</li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li>Gitalk、Gitment、Valine 和 disqus 评论配置</li><li>不蒜子统计和谷歌分析（Google Analytics）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 hashcode 值取余，来选择展示对应的特色图</li></ul><p>我认为个人博客应该都有自己的风格和特色。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 _config.yml 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：<br>修改主题颜色</p><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#4cbf30</span> <span class="token number">0%</span>, <span class="token hexcode">#0f9d58</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token selector">body </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* background-color: #eaeaea; */</span>    <span class="token comment" spellcheck="true">/* 增加背景壁纸*/</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url">url("https://ae01.alicdn.com/kf/H18a4b998752a4ae68b8e85d432a5aef0l.png")</span><span class="token punctuation">;</span>    <span class="token property">background-attachment</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#34495e</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-25-修改-banner-图和文章特色图"><a href="#2-25-修改-banner-图和文章特色图" class="headerlink" title="2.25 修改 banner 图和文章特色图"></a>2.25 修改 banner 图和文章特色图</h4><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 7 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，banner 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="line-numbers language-css"><code class="language-css">$<span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token number">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span>, <span class="token string">'url(/medias/banner/'</span> + new <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token number">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> + <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h4 id="2-26-优化目录栏"><a href="#2-26-优化目录栏" class="headerlink" title="2.26 优化目录栏"></a>2.26 优化目录栏</h4><p>在 <code>themes\Matery\layout\_partial\post-detail-toc.ejs</code>，修改内容如下：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.toc-widget</span> </span><span class="token punctuation">{</span>    <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">345</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">255</span>, <span class="token number">255</span>, <span class="token number">255</span>,<span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">10</span>px <span class="token number">35</span>px <span class="token number">2</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.15</span><span class="token punctuation">)</span>, <span class="token number">0</span> <span class="token number">5</span>px <span class="token number">15</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.07</span><span class="token punctuation">)</span>, <span class="token number">0</span> <span class="token number">2</span>px <span class="token number">5</span>px -<span class="token number">5</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">.1</span><span class="token punctuation">)</span> <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#toc-content</span> </span><span class="token punctuation">{</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="0x005-更多详细教程"><a href="#0x005-更多详细教程" class="headerlink" title="0x005 更多详细教程"></a>0x005 更多详细教程</h2><p>以下几篇文章都是基于<code>Hexo</code>框架和<code>hexo-theme-matery</code>主题优化的教程，大家如果遇到问题，可以参考其中的方法。</p><ul><li><a href="https://sunhwee.com/posts/6e8839eb.html">Hexo+Github博客搭建完全教程</a></li><li><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">hexo-theme-matery作者教程</a></li><li><a href="https://yafine-blog.cn/posts/4ab2.html">Hexo+github搭建博客(超级详细版，精细入微)</a></li><li><a href="https://blog.csdn.net/cungudafa/article/details/106278206">hexo（matery）背景、滚动条优化+增加点击跳评论</a></li></ul><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/ec7d7221.html">https://www.cjlblog.vip/posts/ec7d7221.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基础格式</title>
      <link href="posts/74db63a5.html"/>
      <url>posts/74db63a5.html</url>
      
        <content type="html"><![CDATA[<h1 id="00x1：标题"><a href="#00x1：标题" class="headerlink" title="00x1：标题"></a>00x1：标题</h1><pre><code>格式代码如下：# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><p><strong><code>效果如下：</code></strong></p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><h1 id="00x2：列表的用法"><a href="#00x2：列表的用法" class="headerlink" title="00x2：列表的用法"></a>00x2：列表的用法</h1><pre class="line-numbers language-markdown"><code class="language-markdown">格式代码如下： <span class="token list punctuation">1.</span> 有序子列表 <span class="token list punctuation">2.</span> 有序子列表 <span class="token list punctuation">-</span> 无序子列表 <span class="token list punctuation">-</span> 无序子列表 <span class="token list punctuation">-</span> [x] 已办事例 <span class="token list punctuation">-</span> [ ] 待办事例<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><code>效果如下：</code></strong></p><h4 id="有序列表："><a href="#有序列表：" class="headerlink" title="有序列表："></a>有序列表：</h4><ol><li>有序子列表</li><li>有序子列表</li></ol><h2 id="无序列表："><a href="#无序列表：" class="headerlink" title="无序列表："></a>无序列表：</h2><ul><li>无序子列表</li><li>无序子列表</li></ul><h2 id="复选列表："><a href="#复选列表：" class="headerlink" title="复选列表："></a>复选列表：</h2><p> <strong>☑</strong> 已办事例<br> 口 待办事例</p><!--由于兼容问题复选列表无法正常显示，所以就用符号替代了显示效果--><hr><h1 id="00x3：层次级列表的用法"><a href="#00x3：层次级列表的用法" class="headerlink" title="00x3：层次级列表的用法"></a>00x3：层次级列表的用法</h1><pre class="line-numbers language-markdown"><code class="language-markdown">格式代码如下： > 一级引用 > > 二级引用 > > > 三级引用 <span class="token list punctuation">-</span> 一级列表<span class="token code keyword">     - 二级列表</span><span class="token code keyword">         - 三级列表</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><code>效果如下：</code></strong></p><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p></blockquote></blockquote></blockquote><ul><li>一级列表<ul><li>二级列表<ul><li>三级列表</li></ul></li></ul></li></ul><hr><h1 id="00x4：文字相关的操作"><a href="#00x4：文字相关的操作" class="headerlink" title="00x4：文字相关的操作"></a>00x4：文字相关的操作</h1><pre class="line-numbers language-markdown"><code class="language-markdown">格式代码如下：<span class="token italic"><span class="token punctuation">*</span>斜体<span class="token punctuation">*</span></span><span class="token bold"><span class="token punctuation">**</span>粗体<span class="token punctuation">**</span></span><span class="token bold"><span class="token punctuation">**</span>*粗斜体<span class="token punctuation">**</span></span>*~~删除线~~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">></span></span>下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">></span></span><span class="token code keyword">`重点文字`</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><code>效果如下：</code></strong></p><h4 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a><em>斜体</em></h4><h2 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a><strong>粗体</strong></h2><h2 id="粗斜体"><a href="#粗斜体" class="headerlink" title="粗斜体"></a><strong><em>粗斜体</em></strong></h2><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a><del>删除线</del></h2><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a><u>下划线</u></h2><h2 id="重点文字"><a href="#重点文字" class="headerlink" title="重点文字"></a><code>重点文字</code></h2><h1 id="00x5：超链接和导入网图"><a href="#00x5：超链接和导入网图" class="headerlink" title="00x5：超链接和导入网图"></a>00x5：超链接和导入网图</h1><pre class="line-numbers language-markdown"><code class="language-markdown">格式代码如下：<span class="token url">[点击进入追逐自由工作室](http://www.chase-free.cn)</span><span class="token url">![导入图片](http://www.chase-free.cn/images/photo.jpg)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong><code>效果如下：</code></strong></p><p><a href="http://www.chase-free.cn/">点击进入追逐自由工作室</a></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://www.chase-free.cn/images/photo.jpg" alt="导入图片"></p><hr><h1 id="00x6：制作表格"><a href="#00x6：制作表格" class="headerlink" title="00x6：制作表格"></a>00x6：制作表格</h1><h4 id="基础表格用法："><a href="#基础表格用法：" class="headerlink" title="基础表格用法："></a>基础表格用法：</h4><pre class="line-numbers language-markdown"><code class="language-markdown">格式代码如下：列名 | 列名 | 列名---- | ---- | ----行名 | 内容 | 内容行名 | 内容 | 内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><code>效果如下：</code></strong></p><table><thead><tr><th>列名</th><th>列名</th><th>列名</th></tr></thead><tbody><tr><td>行名</td><td>内容</td><td>内容</td></tr><tr><td>行名</td><td>内容</td><td>内容</td></tr></tbody></table><ul><li>通过在分割行添加冒号<code>:</code>，可以使表格里的内容对齐，例如：<pre class="line-numbers language-markdown"><code class="language-markdown">格式代码如下：为了更加明显 | 所以我故意把内容 | 写的长一些哈哈:---- | :----: | ----:我左对齐 | 我居中 | 我右对齐<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p><strong><code>效果如下：</code></strong></p><table><thead><tr><th align="left">为了更加明显</th><th align="center"><p align="center">所以我故意把内容</p></th><th align="right"><p align="right">写的长一些哈哈</p></th></tr></thead><tbody><tr><td align="left">我左对齐</td><td align="center"><p align="center">我居中</p></td><td align="right"><p align="right">我右对齐</p></td></tr></tbody></table><h2 id="表格扩展用法："><a href="#表格扩展用法：" class="headerlink" title="表格扩展用法："></a>表格扩展用法：</h2><ul><li>表格内也可以添加超链接，文字相关格式等等，例如：<pre class="line-numbers language-markdown"><code class="language-markdown">格式代码如下：样式  |  文字格式  |  超链接:---- | :----: | ----:<span class="token code keyword">`重点`</span>  |  <span class="token italic"><span class="token punctuation">*</span>斜体<span class="token punctuation">*</span></span>  | <span class="token url">[点击进入追逐自由工作室](http://www.chase-free.cn)</span>~~删除线~~ | <span class="token bold"><span class="token punctuation">**</span>加粗<span class="token punctuation">**</span></span> | <span class="token url">![导入图片](http://www.chase-free.cn/images/photo.jpg)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p><strong><code> 效果如下：</code></strong></p><table><thead><tr><th align="left">样式</th><th align="center"><p align="center">文字格式</p></th><th align="right"><p align="right">超链接</p></th></tr></thead><tbody><tr><td align="left"><code>重点</code></td><td align="center"><p align="center"><em>斜体</em></p></td><td align="right"><p align="right"><a href="http://www.chase-free.cn/">点击进入追逐自由工作室</a></p></td></tr><tr><td align="left"><del>删除线</del></td><td align="center"><p align="center"><strong>加粗</strong></p></td><td align="right"><p align="right"><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="http://www.chase-free.cn/images/photo.jpg" alt="导入图片"></p></td></tr></tbody></table><hr><h1 id="00x7：其他相关用法"><a href="#00x7：其他相关用法" class="headerlink" title="00x7：其他相关用法"></a>00x7：其他相关用法</h1><h4 id="跳转操作："><a href="#跳转操作：" class="headerlink" title="跳转操作："></a>跳转操作：</h4><pre class="line-numbers language-markdown"><code class="language-markdown">格式代码如下：<span class="token url">[点击这里回到一级标题](#一级标题)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong><code>效果如下：</code></strong></p><p><a href="#%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98">点击这里回到一级标题</a></p><h2 id="分割线、换行："><a href="#分割线、换行：" class="headerlink" title="分割线、换行："></a>分割线、换行：</h2><pre class="line-numbers language-markdown"><code class="language-markdown">格式代码如下：1<span class="token hr punctuation">---</span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong><code>效果如下：</code></strong></p><p>1</p><hr><p>2<br>3</p><h2 id="文字样式："><a href="#文字样式：" class="headerlink" title="文字样式："></a>文字样式：</h2><pre class="line-numbers language-markdown"><code class="language-markdown">格式代码如下：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">face</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>微软雅黑<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>自定义字体、颜色、大小<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong><code>效果如下：</code></strong></p><p><font face="微软雅黑" color="red" size="5">自定义字体、颜色、大小</font></p><ul><li>字体、颜色、大小还可以单独使用<pre class="line-numbers language-markdown"><code class="language-markdown">格式代码如下：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#0000ff<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>单独使用文字颜色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><p><strong><code>效果如下：</code></strong></p><p><font color="#0000ff">单独使用文字颜色</font></p><h2 id="文本对齐方式："><a href="#文本对齐方式：" class="headerlink" title="文本对齐方式："></a>文本对齐方式：</h2><pre class="line-numbers language-markdown"><code class="language-markdown">格式代码如下：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>居左文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>居中文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>居右文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong><code>效果如下：</code></strong></p><p align="left">居左文本</p><p align="center">居中文本</p><p align="right">居右文本</p><hr><p><i class="fa fa-user"></i> <strong>文章作者：</strong><a href="https://www.cjlblog.vip/about/">Torres-圣君</a><br><i class="fa fa-link"></i><strong>文章链接：</strong><a href="https://www.cjlblog.vip/posts/74db63a5.html">https://www.cjlblog.vip/posts/74db63a5.html</a><br><i class="fa fa-copyright"></i> <strong>版权声明：</strong>本博客所有文章除特別声明外，均采用 <a href="https://creativecommons.org/licenses/by/4.0/deed.zh">CC BY 4.0</a> 许可协议。转载请注明来源 <a href="http://www.cjlblog.vip/about/">Torres-圣君</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
